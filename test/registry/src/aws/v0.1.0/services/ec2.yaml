openapi: 3.0.0
info:
  version: 2016-11-15
  x-release: v4
  title: Amazon Elastic Compute Cloud
  description: "<fullname>Amazon Elastic Compute Cloud</fullname> <p>Amazon Elastic Compute Cloud (Amazon EC2) provides secure and resizable computing capacity in the AWS Cloud. Using Amazon EC2 eliminates the need to invest in hardware up front, so you can develop and deploy applications faster. Amazon Virtual Private Cloud (Amazon VPC) enables you to provision a logically isolated section of the AWS Cloud where you can launch AWS resources in a virtual network that you've defined. Amazon Elastic Block Store (Amazon EBS) provides block level storage volumes for use with EC2 instances. EBS volumes are highly available and reliable storage volumes that can be attached to any running instance and used like a hard drive.</p> <p>To learn more, see the following resources:</p> <ul> <li> <p>Amazon EC2: <a href=\"http://aws.amazon.com/ec2\">AmazonEC2 product page</a>, <a href=\"http://aws.amazon.com/documentation/ec2\">Amazon EC2 documentation</a> </p> </li> <li> <p>Amazon EBS: <a href=\"http://aws.amazon.com/ebs\">Amazon EBS product page</a>, <a href=\"http://aws.amazon.com/documentation/ebs\">Amazon EBS documentation</a> </p> </li> <li> <p>Amazon VPC: <a href=\"http://aws.amazon.com/vpc\">Amazon VPC product page</a>, <a href=\"http://aws.amazon.com/documentation/vpc\">Amazon VPC documentation</a> </p> </li> <li> <p>AWS VPN: <a href=\"http://aws.amazon.com/vpn\">AWS VPN product page</a>, <a href=\"http://aws.amazon.com/documentation/vpn\">AWS VPN documentation</a> </p> </li> </ul>"
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: ec2
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ec2-2016-11-15.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/ec2/
servers:
  - url: http://ec2.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon EC2 multi-region endpoint
  - url: https://ec2.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon EC2 multi-region endpoint
  - url: http://ec2.amazonaws.com
    variables: {}
    description: The general Amazon EC2 endpoint for US East (N. Virginia)
  - url: https://ec2.amazonaws.com
    variables: {}
    description: The general Amazon EC2 endpoint for US East (N. Virginia)
  - url: http://ec2.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon EC2 endpoint for China (Beijing) and China (Ningxia)
  - url: https://ec2.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon EC2 endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#Action=DescribeInstances:
    get:
      x-aws-operation-name: DescribeInstances
      operationId: GET_DescribeInstances
      description: <p>Describes the specified instances or all instances.</p> <p>If you specify instance IDs, the output includes information for only the specified instances. If you specify filters, the output includes information for only those instances that meet the filter criteria. If you do not specify instance IDs or filters, the output includes information for all instances, which can affect performance. We recommend that you use pagination to ensure that the operation returns quickly and successfully.</p> <p>If you specify an instance ID that is not valid, an error is returned. If you specify an instance that you do not own, it is not included in the output.</p> <p>Recently terminated instances might appear in the returned results. This interval is usually less than one hour.</p> <p>If you describe instances in the rare case where an Availability Zone is experiencing a service disruption and you specify instance IDs that are in the affected zone, or do not specify any instance IDs at all, the call fails. If you describe instances and specify only instance IDs that are in an unaffected zone, the call works normally.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeInstancesResult"
      parameters:
        - name: Filter
          in: query
          required: false
          description: "<p>The filters.</p> <ul> <li> <p> <code>affinity</code> - The affinity setting for an instance running on a Dedicated Host (<code>default</code> | <code>host</code>).</p> </li> <li> <p> <code>architecture</code> - The instance architecture (<code>i386</code> | <code>x86_64</code> | <code>arm64</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the instance.</p> </li> <li> <p> <code>block-device-mapping.attach-time</code> - The attach time for an EBS volume mapped to the instance, for example, <code>2010-09-15T17:15:20.000Z</code>.</p> </li> <li> <p> <code>block-device-mapping.delete-on-termination</code> - A Boolean that indicates whether the EBS volume is deleted on instance termination.</p> </li> <li> <p> <code>block-device-mapping.device-name</code> - The device name specified in the block device mapping (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p> </li> <li> <p> <code>block-device-mapping.status</code> - The status for the EBS volume (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>block-device-mapping.volume-id</code> - The volume ID of the EBS volume.</p> </li> <li> <p> <code>client-token</code> - The idempotency token you provided when you launched the instance.</p> </li> <li> <p> <code>dns-name</code> - The public DNS name of the instance.</p> </li> <li> <p> <code>group-id</code> - The ID of the security group for the instance. EC2-Classic only.</p> </li> <li> <p> <code>group-name</code> - The name of the security group for the instance. EC2-Classic only.</p> </li> <li> <p> <code>hibernation-options.configured</code> - A Boolean that indicates whether the instance is enabled for hibernation. A value of <code>true</code> means that the instance is enabled for hibernation. </p> </li> <li> <p> <code>host-id</code> - The ID of the Dedicated Host on which the instance is running, if applicable.</p> </li> <li> <p> <code>hypervisor</code> - The hypervisor type of the instance (<code>ovm</code> | <code>xen</code>). The value <code>xen</code> is used for both Xen and Nitro hypervisors.</p> </li> <li> <p> <code>iam-instance-profile.arn</code> - The instance profile associated with the instance. Specified as an ARN.</p> </li> <li> <p> <code>image-id</code> - The ID of the image used to launch the instance.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>instance-lifecycle</code> - Indicates whether this is a Spot Instance or a Scheduled Instance (<code>spot</code> | <code>scheduled</code>).</p> </li> <li> <p> <code>instance-state-code</code> - The state of the instance, as a 16-bit unsigned integer. The high byte is used for internal purposes and should be ignored. The low byte is set based on the state represented. The valid values are: 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).</p> </li> <li> <p> <code>instance-state-name</code> - The state of the instance (<code>pending</code> | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code> | <code>stopped</code>).</p> </li> <li> <p> <code>instance-type</code> - The type of instance (for example, <code>t2.micro</code>).</p> </li> <li> <p> <code>instance.group-id</code> - The ID of the security group for the instance. </p> </li> <li> <p> <code>instance.group-name</code> - The name of the security group for the instance. </p> </li> <li> <p> <code>ip-address</code> - The public IPv4 address of the instance.</p> </li> <li> <p> <code>kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>key-name</code> - The name of the key pair used when the instance was launched.</p> </li> <li> <p> <code>launch-index</code> - When launching multiple instances, this is the index for the instance in the launch group (for example, 0, 1, 2, and so on). </p> </li> <li> <p> <code>launch-time</code> - The time when the instance was launched.</p> </li> <li> <p> <code>metadata-options.http-tokens</code> - The metadata request authorization state (<code>optional</code> | <code>required</code>)</p> </li> <li> <p> <code>metadata-options.http-put-response-hop-limit</code> - The http metadata request put response hop limit (integer, possible values <code>1</code> to <code>64</code>)</p> </li> <li> <p> <code>metadata-options.http-endpoint</code> - Enable or disable metadata access on http endpoint (<code>enabled</code> | <code>disabled</code>)</p> </li> <li> <p> <code>monitoring-state</code> - Indicates whether detailed monitoring is enabled (<code>disabled</code> | <code>enabled</code>).</p> </li> <li> <p> <code>network-interface.addresses.private-ip-address</code> - The private IPv4 address associated with the network interface.</p> </li> <li> <p> <code>network-interface.addresses.primary</code> - Specifies whether the IPv4 address of the network interface is the primary private IPv4 address.</p> </li> <li> <p> <code>network-interface.addresses.association.public-ip</code> - The ID of the association of an Elastic IP address (IPv4) with a network interface.</p> </li> <li> <p> <code>network-interface.addresses.association.ip-owner-id</code> - The owner ID of the private IPv4 address associated with the network interface.</p> </li> <li> <p> <code>network-interface.association.public-ip</code> - The address of the Elastic IP address (IPv4) bound to the network interface.</p> </li> <li> <p> <code>network-interface.association.ip-owner-id</code> - The owner of the Elastic IP address (IPv4) associated with the network interface.</p> </li> <li> <p> <code>network-interface.association.allocation-id</code> - The allocation ID returned when you allocated the Elastic IP address (IPv4) for your network interface.</p> </li> <li> <p> <code>network-interface.association.association-id</code> - The association ID returned when the network interface was associated with an IPv4 address.</p> </li> <li> <p> <code>network-interface.attachment.attachment-id</code> - The ID of the interface attachment.</p> </li> <li> <p> <code>network-interface.attachment.instance-id</code> - The ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.instance-owner-id</code> - The owner ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.device-index</code> - The device index to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.status</code> - The status of the attachment (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>network-interface.attachment.attach-time</code> - The time that the network interface was attached to an instance.</p> </li> <li> <p> <code>network-interface.attachment.delete-on-termination</code> - Specifies whether the attachment is deleted when an instance is terminated.</p> </li> <li> <p> <code>network-interface.availability-zone</code> - The Availability Zone for the network interface.</p> </li> <li> <p> <code>network-interface.description</code> - The description of the network interface.</p> </li> <li> <p> <code>network-interface.group-id</code> - The ID of a security group associated with the network interface.</p> </li> <li> <p> <code>network-interface.group-name</code> - The name of a security group associated with the network interface.</p> </li> <li> <p> <code>network-interface.ipv6-addresses.ipv6-address</code> - The IPv6 address associated with the network interface.</p> </li> <li> <p> <code>network-interface.mac-address</code> - The MAC address of the network interface.</p> </li> <li> <p> <code>network-interface.network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>network-interface.owner-id</code> - The ID of the owner of the network interface.</p> </li> <li> <p> <code>network-interface.private-dns-name</code> - The private DNS name of the network interface.</p> </li> <li> <p> <code>network-interface.requester-id</code> - The requester ID for the network interface.</p> </li> <li> <p> <code>network-interface.requester-managed</code> - Indicates whether the network interface is being managed by Amazon Web Services.</p> </li> <li> <p> <code>network-interface.status</code> - The status of the network interface (<code>available</code>) | <code>in-use</code>).</p> </li> <li> <p> <code>network-interface.source-dest-check</code> - Whether the network interface performs source/destination checking. A value of <code>true</code> means that checking is enabled, and <code>false</code> means that checking is disabled. The value must be <code>false</code> for the network interface to perform network address translation (NAT) in your VPC.</p> </li> <li> <p> <code>network-interface.subnet-id</code> - The ID of the subnet for the network interface.</p> </li> <li> <p> <code>network-interface.vpc-id</code> - The ID of the VPC for the network interface.</p> </li> <li> <p> <code>outpost-arn</code> - The Amazon Resource Name (ARN) of the Outpost.</p> </li> <li> <p> <code>owner-id</code> - The Amazon Web Services account ID of the instance owner.</p> </li> <li> <p> <code>placement-group-name</code> - The name of the placement group for the instance.</p> </li> <li> <p> <code>placement-partition-number</code> - The partition in which the instance is located.</p> </li> <li> <p> <code>platform</code> - The platform. To list only Windows instances, use <code>windows</code>.</p> </li> <li> <p> <code>private-dns-name</code> - The private IPv4 DNS name of the instance.</p> </li> <li> <p> <code>private-ip-address</code> - The private IPv4 address of the instance.</p> </li> <li> <p> <code>product-code</code> - The product code associated with the AMI used to launch the instance.</p> </li> <li> <p> <code>product-code.type</code> - The type of product code (<code>devpay</code> | <code>marketplace</code>).</p> </li> <li> <p> <code>ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p> <code>reason</code> - The reason for the current state of the instance (for example, shows \"User Initiated [date]\" when you stop or terminate the instance). Similar to the state-reason-code filter.</p> </li> <li> <p> <code>requester-id</code> - The ID of the entity that launched the instance on your behalf (for example, Amazon Web Services Management Console, Auto Scaling, and so on).</p> </li> <li> <p> <code>reservation-id</code> - The ID of the instance's reservation. A reservation ID is created any time you launch an instance. A reservation ID has a one-to-one relationship with an instance launch request, but can be associated with more than one instance if you launch multiple instances using the same launch request. For example, if you launch one instance, you get one reservation ID. If you launch ten instances using the same launch request, you also get one reservation ID.</p> </li> <li> <p> <code>root-device-name</code> - The device name of the root device volume (for example, <code>/dev/sda1</code>).</p> </li> <li> <p> <code>root-device-type</code> - The type of the root device volume (<code>ebs</code> | <code>instance-store</code>).</p> </li> <li> <p> <code>source-dest-check</code> - Indicates whether the instance performs source/destination checking. A value of <code>true</code> means that checking is enabled, and <code>false</code> means that checking is disabled. The value must be <code>false</code> for the instance to perform network address translation (NAT) in your VPC. </p> </li> <li> <p> <code>spot-instance-request-id</code> - The ID of the Spot Instance request.</p> </li> <li> <p> <code>state-reason-code</code> - The reason code for the state change.</p> </li> <li> <p> <code>state-reason-message</code> - A message that describes the state change.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet for the instance.</p> </li> <li> <p> <code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources that have a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>tenancy</code> - The tenancy of an instance (<code>dedicated</code> | <code>default</code> | <code>host</code>).</p> </li> <li> <p> <code>virtualization-type</code> - The virtualization type of the instance (<code>paravirtual</code> | <code>hvm</code>).</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC that the instance is running in.</p> </li> </ul>"
          schema:
            type: array
            items:
              allOf:
                - $ref: "#/components/schemas/Filter"
                - xml:
                    name: Filter
        - name: InstanceId
          in: query
          required: false
          description: "<p>The instance IDs.</p> <p>Default: Describes all your instances.</p>"
          schema:
            type: array
            items:
              allOf:
                - $ref: "#/components/schemas/InstanceId"
                - xml:
                    name: InstanceId
        - name: DryRun
          in: query
          required: false
          description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
          schema:
            type: boolean
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.
          schema:
            type: integer
        - name: NextToken
          in: query
          required: false
          description: The token to request the next page of results.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeInstances
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2016-11-15
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeInstances
      operationId: POST_DescribeInstances
      description: <p>Describes the specified instances or all instances.</p> <p>If you specify instance IDs, the output includes information for only the specified instances. If you specify filters, the output includes information for only those instances that meet the filter criteria. If you do not specify instance IDs or filters, the output includes information for all instances, which can affect performance. We recommend that you use pagination to ensure that the operation returns quickly and successfully.</p> <p>If you specify an instance ID that is not valid, an error is returned. If you specify an instance that you do not own, it is not included in the output.</p> <p>Recently terminated instances might appear in the returned results. This interval is usually less than one hour.</p> <p>If you describe instances in the rare case where an Availability Zone is experiencing a service disruption and you specify instance IDs that are in the affected zone, or do not specify any instance IDs at all, the call fails. If you describe instances and specify only instance IDs that are in an unaffected zone, the call works normally.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeInstancesResult"
      requestBody:
        content:
          text/xml:
            schema:
              $ref: "#/components/schemas/DescribeInstancesRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeInstances
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2016-11-15
components:
  x-stackQL-resources:
    instances:
      id: aws.ec2.instances
      name: core_v1
      title: core_v1
      methods:
        describeInstances:
          operation:
            $ref: '#/paths/~1#Action=DescribeInstances/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/instances/methods/describeInstances'
        insert: []
        update: []
        delete: []
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptReservedInstancesExchangeQuoteResult:
      type: object
      properties:
        ExchangeId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: exchangeId
              description: The ID of the successful exchange.
      description: The result of the exchange and whether it was <code>successful</code>.
    ReservationId:
      type: string
    TargetConfigurationRequest:
      type: object
      required:
        - OfferingId
      properties:
        InstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of instances the Convertible Reserved Instance offering can be applied to. This parameter is reserved and cannot be specified in a request
        OfferingId:
          allOf:
            - $ref: "#/components/schemas/ReservedInstancesOfferingId"
            - description: The Convertible Reserved Instance offering ID.
      description: Details about the target configuration.
    AcceptTransitGatewayMulticastDomainAssociationsResult:
      type: object
      properties:
        Associations:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomainAssociations"
            - xml:
                name: associations
    String:
      type: string
    AcceptTransitGatewayPeeringAttachmentResult:
      type: object
      properties:
        TransitGatewayPeeringAttachment:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayPeeringAttachment"
            - xml:
                name: transitGatewayPeeringAttachment
              description: The transit gateway peering attachment.
    AcceptTransitGatewayVpcAttachmentResult:
      type: object
      properties:
        TransitGatewayVpcAttachment:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayVpcAttachment"
            - xml:
                name: transitGatewayVpcAttachment
              description: The VPC attachment.
    AcceptVpcEndpointConnectionsResult:
      type: object
      properties:
        Unsuccessful:
          allOf:
            - $ref: "#/components/schemas/UnsuccessfulItemSet"
            - xml:
                name: unsuccessful
              description: Information about the interface endpoints that were not accepted, if applicable.
    VpcEndpointId:
      type: string
    AcceptVpcPeeringConnectionResult:
      type: object
      properties:
        VpcPeeringConnection:
          allOf:
            - $ref: "#/components/schemas/VpcPeeringConnection"
            - xml:
                name: vpcPeeringConnection
              description: Information about the VPC peering connection.
    AdvertiseByoipCidrResult:
      type: object
      properties:
        ByoipCidr:
          allOf:
            - $ref: "#/components/schemas/ByoipCidr"
            - xml:
                name: byoipCidr
              description: Information about the address range.
    AllocateAddressResult:
      type: object
      example:
        Domain: standard
        PublicIp: 198.51.100.0
      properties:
        PublicIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: publicIp
              description: The Elastic IP address.
        AllocationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: allocationId
              description: "[EC2-VPC] The ID that Amazon Web Services assigns to represent the allocation of the Elastic IP address for use with instances in a VPC."
        PublicIpv4Pool:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: publicIpv4Pool
              description: The ID of an address pool.
        NetworkBorderGroup:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkBorderGroup
              description: The set of Availability Zones, Local Zones, or Wavelength Zones from which AWS advertises IP addresses.
        Domain:
          allOf:
            - $ref: "#/components/schemas/DomainType"
            - xml:
                name: domain
              description: Indicates whether the Elastic IP address is for use with instances in a VPC (<code>vpc</code>) or instances in EC2-Classic (<code>standard</code>).
        CustomerOwnedIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: customerOwnedIp
              description: The customer-owned IP address.
        CustomerOwnedIpv4Pool:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: customerOwnedIpv4Pool
              description: The ID of the customer-owned address pool.
        CarrierIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: carrierIp
              description: "The carrier IP address. This option is only available for network interfaces which reside in a subnet in a Wavelength Zone (for example an EC2 instance). "
    TagSpecification:
      type: object
      properties:
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/ResourceType"
            - xml:
                name: resourceType
              description: '<p>The type of resource to tag on creation. The possible values are: <code>capacity-reservation</code> | <code>carrier-gateway</code> | <code>client-vpn-endpoint</code> | <code>customer-gateway</code> | <code>dedicated-host</code> | <code>dhcp-options</code> | <code>egress-only-internet-gateway</code> | <code>elastic-gpu</code> | <code>elastic-ip</code> | <code>export-image-task</code> | <code>export-instance-task</code> | <code>fleet</code> | <code>fpga-image</code> | <code>host-reservation</code> | <code>image</code> | <code>import-image-task</code> | <code>import-snapshot-task</code> | <code>instance</code> | <code>instance-event-window</code> | <code>internet-gateway</code> | <code>ipv4pool-ec2</code> | <code>ipv6pool-ec2</code> | <code>key-pair</code> | <code>launch-template</code> | <code>local-gateway-route-table-vpc-association</code> | <code>natgateway</code> | <code>network-acl</code> | <code>network-insights-analysis</code> | <code>network-insights-path</code> | <code>network-interface</code> | <code>placement-group</code> | <code>prefix-list</code> | <code>reserved-instances</code> | <code>route-table</code> | <code>security-group</code> | <code>security-group-rule</code> | <code>snapshot</code> | <code>spot-fleet-request</code> | <code>spot-instances-request</code> | <code>subnet</code> | <code>traffic-mirror-filter</code> | <code>traffic-mirror-session</code> | <code>traffic-mirror-target</code> | <code>transit-gateway</code> | <code>transit-gateway-attachment</code> | <code>transit-gateway-multicast-domain</code> | <code>transit-gateway-route-table</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-endpoint</code> | <code>vpc-endpoint-service</code> | <code>vpc-flow-log</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>.</p> <p>To tag a resource after it has been created, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html">CreateTags</a>.</p>'
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: Tag
              description: The tags to apply to the resource.
      description: The tags to apply to a resource when the resource is being created.
    AllocateHostsResult:
      type: object
      properties:
        HostIds:
          allOf:
            - $ref: "#/components/schemas/ResponseHostIdList"
            - xml:
                name: hostIdSet
              description: The ID of the allocated Dedicated Host. This is used to launch an instance onto a specific host.
      description: Contains the output of AllocateHosts.
    ApplySecurityGroupsToClientVpnTargetNetworkResult:
      type: object
      properties:
        SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/ClientVpnSecurityGroupIdSet"
            - xml:
                name: securityGroupIds
              description: The IDs of the applied security groups.
    SecurityGroupId:
      type: string
    AssignIpv6AddressesResult:
      type: object
      properties:
        AssignedIpv6Addresses:
          allOf:
            - $ref: "#/components/schemas/Ipv6AddressList"
            - xml:
                name: assignedIpv6Addresses
              description: The new IPv6 addresses assigned to the network interface. Existing IPv6 addresses that were assigned to the network interface before the request are not included.
        AssignedIpv6Prefixes:
          allOf:
            - $ref: "#/components/schemas/IpPrefixList"
            - xml:
                name: assignedIpv6PrefixSet
              description: The IPv6 prefixes that are assigned to the network interface.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkInterfaceId
              description: The ID of the network interface.
    AssignPrivateIpAddressesResult:
      type: object
      properties:
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkInterfaceId
              description: The ID of the network interface.
        AssignedPrivateIpAddresses:
          allOf:
            - $ref: "#/components/schemas/AssignedPrivateIpAddressList"
            - xml:
                name: assignedPrivateIpAddressesSet
              description: The private IP addresses assigned to the network interface.
        AssignedIpv4Prefixes:
          allOf:
            - $ref: "#/components/schemas/Ipv4PrefixesList"
            - xml:
                name: assignedIpv4PrefixSet
              description: The IPv4 prefixes that are assigned to the network interface.
    AssociateAddressResult:
      type: object
      example:
        AssociationId: eipassoc-2bebb745
      properties:
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: associationId
              description: "[EC2-VPC] The ID that represents the association of the Elastic IP address with an instance."
    AssociateClientVpnTargetNetworkResult:
      type: object
      properties:
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: associationId
              description: The unique ID of the target network association.
        Status:
          allOf:
            - $ref: "#/components/schemas/AssociationStatus"
            - xml:
                name: status
              description: The current state of the target network association.
    AssociateEnclaveCertificateIamRoleResult:
      type: object
      properties:
        CertificateS3BucketName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: certificateS3BucketName
              description: The name of the Amazon S3 bucket to which the certificate was uploaded.
        CertificateS3ObjectKey:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: certificateS3ObjectKey
              description: "The Amazon S3 object key where the certificate, certificate chain, and encrypted private key bundle are stored. The object key is formatted as follows: <code>role_arn</code>/<code>certificate_arn</code>."
        EncryptionKmsKeyId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: encryptionKmsKeyId
              description: The ID of the KMS key used to encrypt the private key of the certificate.
    AssociateIamInstanceProfileResult:
      type: object
      example:
        IamInstanceProfileAssociation:
          AssociationId: iip-assoc-0e7736511a163c209
          IamInstanceProfile:
            Arn: arn:aws:iam::123456789012:instance-profile/admin-role
            Id: AIPAJBLK7RKJKWDXVHIEC
          InstanceId: i-123456789abcde123
          State: associating
      properties:
        IamInstanceProfileAssociation:
          allOf:
            - $ref: "#/components/schemas/IamInstanceProfileAssociation"
            - xml:
                name: iamInstanceProfileAssociation
              description: Information about the IAM instance profile association.
    AssociateInstanceEventWindowResult:
      type: object
      properties:
        InstanceEventWindow:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindow"
            - xml:
                name: instanceEventWindow
              description: Information about the event window.
    InstanceIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceId"
          - xml:
              name: item
    TagList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Tag"
          - xml:
              name: item
    DedicatedHostIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/DedicatedHostId"
          - xml:
              name: item
    AssociateRouteTableResult:
      type: object
      example:
        AssociationId: rtbassoc-781d0d1a
      properties:
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: associationId
              description: The route table association ID. This ID is required for disassociating the route table.
        AssociationState:
          allOf:
            - $ref: "#/components/schemas/RouteTableAssociationState"
            - xml:
                name: associationState
              description: The state of the association.
    AssociateSubnetCidrBlockResult:
      type: object
      properties:
        Ipv6CidrBlockAssociation:
          allOf:
            - $ref: "#/components/schemas/SubnetIpv6CidrBlockAssociation"
            - xml:
                name: ipv6CidrBlockAssociation
              description: Information about the IPv6 CIDR block association.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: subnetId
              description: The ID of the subnet.
    AssociateTransitGatewayMulticastDomainResult:
      type: object
      properties:
        Associations:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomainAssociations"
            - xml:
                name: associations
              description: Information about the transit gateway multicast domain associations.
    SubnetId:
      type: string
    AssociateTransitGatewayRouteTableResult:
      type: object
      properties:
        Association:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAssociation"
            - xml:
                name: association
              description: The ID of the association.
    AssociateTrunkInterfaceResult:
      type: object
      properties:
        InterfaceAssociation:
          allOf:
            - $ref: "#/components/schemas/TrunkInterfaceAssociation"
            - xml:
                name: interfaceAssociation
              description: Information about the association between the trunk network interface and branch network interface.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
    AssociateVpcCidrBlockResult:
      type: object
      properties:
        Ipv6CidrBlockAssociation:
          allOf:
            - $ref: "#/components/schemas/VpcIpv6CidrBlockAssociation"
            - xml:
                name: ipv6CidrBlockAssociation
              description: Information about the IPv6 CIDR block association.
        CidrBlockAssociation:
          allOf:
            - $ref: "#/components/schemas/VpcCidrBlockAssociation"
            - xml:
                name: cidrBlockAssociation
              description: Information about the IPv4 CIDR block association.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC.
    AttachClassicLinkVpcResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    AttachNetworkInterfaceResult:
      type: object
      example:
        AttachmentId: eni-attach-66c4350a
      properties:
        AttachmentId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: attachmentId
              description: The ID of the network interface attachment.
        NetworkCardIndex:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: networkCardIndex
              description: The index of the network card.
      description: Contains the output of AttachNetworkInterface.
    VolumeAttachment:
      type: object
      example:
        AttachTime: 2014-02-27T19:23:06.000Z
        Device: /dev/sdb
        InstanceId: i-1234567890abcdef0
        State: detaching
        VolumeId: vol-049df61146c4d7901
      properties:
        AttachTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: attachTime
              description: The time stamp when the attachment initiated.
        Device:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: device
              description: The device name.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance.
        State:
          allOf:
            - $ref: "#/components/schemas/VolumeAttachmentState"
            - xml:
                name: status
              description: The attachment state of the volume.
        VolumeId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: volumeId
              description: The ID of the volume.
        DeleteOnTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: deleteOnTermination
              description: Indicates whether the EBS volume is deleted on instance termination.
      description: Describes volume attachment details.
    AttachVpnGatewayResult:
      type: object
      properties:
        VpcAttachment:
          allOf:
            - $ref: "#/components/schemas/VpcAttachment"
            - xml:
                name: attachment
              description: Information about the attachment.
      description: Contains the output of AttachVpnGateway.
    AuthorizeClientVpnIngressResult:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/ClientVpnAuthorizationRuleStatus"
            - xml:
                name: status
              description: The current state of the authorization rule.
    AuthorizeSecurityGroupEgressResult:
      type: object
      example: {}
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, returns an error.
        SecurityGroupRules:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupRuleList"
            - xml:
                name: securityGroupRuleSet
              description: Information about the outbound (egress) security group rules that were added.
    IpPermission:
      type: object
      properties:
        FromPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: fromPort
              description: The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number. A value of <code>-1</code> indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.
        IpProtocol:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipProtocol
              description: <p>The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>, <code>icmpv6</code>) or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a>).</p> <p>[VPC only] Use <code>-1</code> to specify all protocols. When authorizing security group rules, specifying <code>-1</code> or a protocol number other than <code>tcp</code>, <code>udp</code>, <code>icmp</code>, or <code>icmpv6</code> allows traffic on all ports, regardless of any port range you specify. For <code>tcp</code>, <code>udp</code>, and <code>icmp</code>, you must specify a port range. For <code>icmpv6</code>, the port range is optional; if you omit the port range, traffic for all types and codes is allowed.</p>
        IpRanges:
          allOf:
            - $ref: "#/components/schemas/IpRangeList"
            - xml:
                name: ipRanges
              description: The IPv4 ranges.
        Ipv6Ranges:
          allOf:
            - $ref: "#/components/schemas/Ipv6RangeList"
            - xml:
                name: ipv6Ranges
              description: "[VPC only] The IPv6 ranges."
        PrefixListIds:
          allOf:
            - $ref: "#/components/schemas/PrefixListIdList"
            - xml:
                name: prefixListIds
              description: "[VPC only] The prefix list IDs."
        ToPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: toPort
              description: The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of <code>-1</code> indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.
        UserIdGroupPairs:
          allOf:
            - $ref: "#/components/schemas/UserIdGroupPairList"
            - xml:
                name: groups
              description: The security group and Amazon Web Services account ID pairs.
      description: Describes a set of permissions for a security group rule.
    AuthorizeSecurityGroupIngressResult:
      type: object
      example: {}
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, returns an error.
        SecurityGroupRules:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupRuleList"
            - xml:
                name: securityGroupRuleSet
              description: Information about the inbound (ingress) security group rules that were added.
    BundleInstanceResult:
      type: object
      properties:
        BundleTask:
          allOf:
            - $ref: "#/components/schemas/BundleTask"
            - xml:
                name: bundleInstanceTask
              description: Information about the bundle task.
      description: Contains the output of BundleInstance.
    S3Storage:
      type: object
      properties:
        AWSAccessKeyId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The access key ID of the owner of the bucket. Before you specify a value for your access key ID, review and follow the guidance in <a href="https://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html">Best Practices for Managing Amazon Web Services Access Keys</a>.
        Bucket:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: bucket
              description: The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.
        Prefix:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: prefix
              description: The beginning of the file name of the AMI.
        UploadPolicy:
          allOf:
            - $ref: "#/components/schemas/Blob"
            - xml:
                name: uploadPolicy
              description: An Amazon S3 upload policy that gives Amazon EC2 permission to upload items into Amazon S3 on your behalf.
        UploadPolicySignature:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: uploadPolicySignature
              description: The signature of the JSON document.
      description: Describes the storage parameters for Amazon S3 and Amazon S3 buckets for an instance store-backed AMI.
    CancelBundleTaskResult:
      type: object
      properties:
        BundleTask:
          allOf:
            - $ref: "#/components/schemas/BundleTask"
            - xml:
                name: bundleInstanceTask
              description: Information about the bundle task.
      description: Contains the output of CancelBundleTask.
    CancelCapacityReservationResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    CancelImportTaskResult:
      type: object
      properties:
        ImportTaskId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: importTaskId
              description: The ID of the task being canceled.
        PreviousState:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: previousState
              description: The current state of the task being canceled.
        State:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: state
              description: The current state of the task being canceled.
    CancelReservedInstancesListingResult:
      type: object
      properties:
        ReservedInstancesListings:
          allOf:
            - $ref: "#/components/schemas/ReservedInstancesListingList"
            - xml:
                name: reservedInstancesListingsSet
              description: The Reserved Instance listing.
      description: Contains the output of CancelReservedInstancesListing.
    CancelSpotFleetRequestsResponse:
      type: object
      example:
        SuccessfulFleetRequests:
          - CurrentSpotFleetRequestState: cancelled_terminating
            PreviousSpotFleetRequestState: active
            SpotFleetRequestId: sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE
      properties:
        SuccessfulFleetRequests:
          allOf:
            - $ref: "#/components/schemas/CancelSpotFleetRequestsSuccessSet"
            - xml:
                name: successfulFleetRequestSet
              description: Information about the Spot Fleet requests that are successfully canceled.
        UnsuccessfulFleetRequests:
          allOf:
            - $ref: "#/components/schemas/CancelSpotFleetRequestsErrorSet"
            - xml:
                name: unsuccessfulFleetRequestSet
              description: Information about the Spot Fleet requests that are not successfully canceled.
      description: Contains the output of CancelSpotFleetRequests.
    SpotFleetRequestId:
      type: string
    CancelSpotInstanceRequestsResult:
      type: object
      example:
        CancelledSpotInstanceRequests:
          - SpotInstanceRequestId: sir-08b93456
            State: cancelled
      properties:
        CancelledSpotInstanceRequests:
          allOf:
            - $ref: "#/components/schemas/CancelledSpotInstanceRequestList"
            - xml:
                name: spotInstanceRequestSet
              description: One or more Spot Instance requests.
      description: Contains the output of CancelSpotInstanceRequests.
    SpotInstanceRequestId:
      type: string
    ConfirmProductInstanceResult:
      type: object
      example:
        OwnerId: "123456789012"
      properties:
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The Amazon Web Services account ID of the instance owner. This is only present if the product code is attached to the instance.
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: The return value of the request. Returns <code>true</code> if the specified product code is owned by the requester and associated with the specified instance.
    CopyFpgaImageResult:
      type: object
      properties:
        FpgaImageId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: fpgaImageId
              description: The ID of the new AFI.
    CopyImageResult:
      type: object
      example:
        ImageId: ami-438bea42
      properties:
        ImageId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: imageId
              description: The ID of the new AMI.
      description: Contains the output of CopyImage.
    CopySnapshotResult:
      type: object
      example:
        SnapshotId: snap-066877671789bd71b
      properties:
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: snapshotId
              description: The ID of the new snapshot.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags applied to the new snapshot.
    CreateCapacityReservationResult:
      type: object
      properties:
        CapacityReservation:
          allOf:
            - $ref: "#/components/schemas/CapacityReservation"
            - xml:
                name: capacityReservation
              description: Information about the Capacity Reservation.
    CreateCarrierGatewayResult:
      type: object
      properties:
        CarrierGateway:
          allOf:
            - $ref: "#/components/schemas/CarrierGateway"
            - xml:
                name: carrierGateway
              description: Information about the carrier gateway.
    CreateClientVpnEndpointResult:
      type: object
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientVpnEndpointId
              description: The ID of the Client VPN endpoint.
        Status:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointStatus"
            - xml:
                name: status
              description: The current state of the Client VPN endpoint.
        DnsName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: dnsName
              description: The DNS name to be used by clients when establishing their VPN session.
    ClientVpnAuthenticationRequest:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/ClientVpnAuthenticationType"
            - description: The type of client authentication to be used.
        ActiveDirectory:
          allOf:
            - $ref: "#/components/schemas/DirectoryServiceAuthenticationRequest"
            - description: Information about the Active Directory to be used, if applicable. You must provide this information if <b>Type</b> is <code>directory-service-authentication</code>.
        MutualAuthentication:
          allOf:
            - $ref: "#/components/schemas/CertificateAuthenticationRequest"
            - description: Information about the authentication certificates to be used, if applicable. You must provide this information if <b>Type</b> is <code>certificate-authentication</code>.
        FederatedAuthentication:
          allOf:
            - $ref: "#/components/schemas/FederatedAuthenticationRequest"
            - description: Information about the IAM SAML identity provider to be used, if applicable. You must provide this information if <b>Type</b> is <code>federated-authentication</code>.
      description: Describes the authentication method to be used by a Client VPN endpoint. For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/authentication-authrization.html#client-authentication">Authentication</a> in the <i>AWS Client VPN Administrator Guide</i>.
    Boolean:
      type: boolean
    CreateClientVpnRouteResult:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/ClientVpnRouteStatus"
            - xml:
                name: status
              description: The current state of the route.
    CreateCustomerGatewayResult:
      type: object
      example:
        CustomerGateway:
          BgpAsn: "65534"
          CustomerGatewayId: cgw-0e11f167
          IpAddress: 12.1.2.3
          State: available
          Type: ipsec.1
      properties:
        CustomerGateway:
          allOf:
            - $ref: "#/components/schemas/CustomerGateway"
            - xml:
                name: customerGateway
              description: Information about the customer gateway.
      description: Contains the output of CreateCustomerGateway.
    CreateDefaultSubnetResult:
      type: object
      properties:
        Subnet:
          allOf:
            - $ref: "#/components/schemas/Subnet"
            - xml:
                name: subnet
              description: Information about the subnet.
    CreateDefaultVpcResult:
      type: object
      properties:
        Vpc:
          allOf:
            - $ref: "#/components/schemas/Vpc"
            - xml:
                name: vpc
              description: Information about the VPC.
    CreateDhcpOptionsResult:
      type: object
      example:
        DhcpOptions:
          DhcpConfigurations:
            - Key: domain-name-servers
              Values:
                - Value: 10.2.5.2
                - Value: 10.2.5.1
          DhcpOptionsId: dopt-d9070ebb
      properties:
        DhcpOptions:
          allOf:
            - $ref: "#/components/schemas/DhcpOptions"
            - xml:
                name: dhcpOptions
              description: A set of DHCP options.
    NewDhcpConfiguration:
      type: object
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: key
        Values:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: Value
    CreateEgressOnlyInternetGatewayResult:
      type: object
      properties:
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
        EgressOnlyInternetGateway:
          allOf:
            - $ref: "#/components/schemas/EgressOnlyInternetGateway"
            - xml:
                name: egressOnlyInternetGateway
              description: Information about the egress-only internet gateway.
    CreateFleetResult:
      type: object
      properties:
        FleetId:
          allOf:
            - $ref: "#/components/schemas/FleetId"
            - xml:
                name: fleetId
              description: The ID of the EC2 Fleet.
        Errors:
          allOf:
            - $ref: "#/components/schemas/CreateFleetErrorsSet"
            - xml:
                name: errorSet
              description: Information about the instances that could not be launched by the fleet. Supported only for fleets of type <code>instant</code>.
        Instances:
          allOf:
            - $ref: "#/components/schemas/CreateFleetInstancesSet"
            - xml:
                name: fleetInstanceSet
              description: Information about the instances that were launched by the fleet. Supported only for fleets of type <code>instant</code>.
    SpotAllocationStrategy:
      type: string
      enum:
        - lowest-price
        - diversified
        - capacity-optimized
        - capacity-optimized-prioritized
    FleetSpotMaintenanceStrategiesRequest:
      type: object
      properties:
        CapacityRebalance:
          allOf:
            - $ref: "#/components/schemas/FleetSpotCapacityRebalanceRequest"
            - description: The strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted.
      description: The strategies for managing your Spot Instances that are at an elevated risk of being interrupted.
    SpotInstanceInterruptionBehavior:
      type: string
      enum:
        - hibernate
        - stop
        - terminate
    Integer:
      type: integer
    FleetOnDemandAllocationStrategy:
      type: string
      enum:
        - lowest-price
        - prioritized
    CapacityReservationOptionsRequest:
      type: object
      properties:
        UsageStrategy:
          allOf:
            - $ref: "#/components/schemas/FleetCapacityReservationUsageStrategy"
            - description: <p>Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity.</p> <p>If you specify <code>use-capacity-reservations-first</code>, the fleet uses unused Capacity Reservations to fulfill On-Demand capacity up to the target On-Demand capacity. If multiple instance pools have unused Capacity Reservations, the On-Demand allocation strategy (<code>lowest-price</code> or <code>prioritized</code>) is applied. If the number of unused Capacity Reservations is less than the On-Demand target capacity, the remaining On-Demand target capacity is launched according to the On-Demand allocation strategy (<code>lowest-price</code> or <code>prioritized</code>).</p> <p>If you do not specify a value, the fleet fulfils the On-Demand capacity according to the chosen On-Demand allocation strategy.</p>
      description: <p>Describes the strategy for using unused Capacity Reservations for fulfilling On-Demand capacity.</p> <note> <p>This strategy can only be used if the EC2 Fleet is of type <code>instant</code>.</p> </note> <p>For more information about Capacity Reservations, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-capacity-reservations.html">On-Demand Capacity Reservations</a> in the <i>Amazon EC2 User Guide</i>. For examples of using Capacity Reservations in an EC2 Fleet, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-examples.html">EC2 Fleet example configurations</a> in the <i>Amazon EC2 User Guide</i>.</p>
    FleetLaunchTemplateConfigRequest:
      type: object
      properties:
        LaunchTemplateSpecification:
          allOf:
            - $ref: "#/components/schemas/FleetLaunchTemplateSpecificationRequest"
            - description: "The launch template to use. You must specify either the launch template ID or launch template name in the request. "
        Overrides:
          allOf:
            - $ref: "#/components/schemas/FleetLaunchTemplateOverridesListRequest"
            - description: <p>Any parameters that you specify override the same parameters in the launch template.</p> <p>For fleets of type <code>request</code> and <code>maintain</code>, a maximum of 300 items is allowed across all launch templates.</p>
      description: Describes a launch template and overrides.
    DefaultTargetCapacityType:
      type: string
      enum:
        - spot
        - on-demand
    CreateFlowLogsResult:
      type: object
      properties:
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
        FlowLogIds:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: flowLogIdSet
              description: The IDs of the flow logs.
        Unsuccessful:
          allOf:
            - $ref: "#/components/schemas/UnsuccessfulItemSet"
            - xml:
                name: unsuccessful
              description: Information about the flow logs that could not be created successfully.
    FlowLogResourceId:
      type: string
    CreateFpgaImageResult:
      type: object
      properties:
        FpgaImageId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: fpgaImageId
              description: The FPGA image identifier (AFI ID).
        FpgaImageGlobalId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: fpgaImageGlobalId
              description: The global FPGA image identifier (AGFI ID).
    CreateImageResult:
      type: object
      example:
        ImageId: ami-1a2b3c4d
      properties:
        ImageId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: imageId
              description: The ID of the new AMI.
    BlockDeviceMapping:
      type: object
      properties:
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: deviceName
              description: The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).
        VirtualName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: virtualName
              description: "<p>The virtual device name (<code>ephemeral</code>N). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for <code>ephemeral0</code> and <code>ephemeral1</code>. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.</p> <p>NVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect.</p> <p>Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.</p>"
        Ebs:
          allOf:
            - $ref: "#/components/schemas/EbsBlockDevice"
            - xml:
                name: ebs
              description: Parameters used to automatically set up EBS volumes when the instance is launched.
        NoDevice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: noDevice
              description: To omit the device from the block device mapping, specify an empty string. When this property is specified, the device is removed from the block device mapping regardless of the assigned value.
      description: Describes a block device mapping, which defines the EBS volumes and instance store volumes to attach to an instance at launch.
    CreateInstanceEventWindowResult:
      type: object
      properties:
        InstanceEventWindow:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindow"
            - xml:
                name: instanceEventWindow
              description: Information about the event window.
    InstanceEventWindowTimeRangeRequest:
      type: object
      properties:
        StartWeekDay:
          allOf:
            - $ref: "#/components/schemas/WeekDay"
            - description: The day on which the time range begins.
        StartHour:
          allOf:
            - $ref: "#/components/schemas/Hour"
            - description: The hour when the time range begins.
        EndWeekDay:
          allOf:
            - $ref: "#/components/schemas/WeekDay"
            - description: The day on which the time range ends.
        EndHour:
          allOf:
            - $ref: "#/components/schemas/Hour"
            - description: The hour when the time range ends.
      description: The start day and time and the end day and time of the time range, in UTC.
    CreateInstanceExportTaskResult:
      type: object
      properties:
        ExportTask:
          allOf:
            - $ref: "#/components/schemas/ExportTask"
            - xml:
                name: exportTask
              description: Information about the export instance task.
    ContainerFormat:
      type: string
      enum:
        - ova
    DiskImageFormat:
      type: string
      enum:
        - VMDK
        - RAW
        - VHD
    CreateInternetGatewayResult:
      type: object
      example:
        InternetGateway:
          Attachments: []
          InternetGatewayId: igw-c0a643a9
          Tags: []
      properties:
        InternetGateway:
          allOf:
            - $ref: "#/components/schemas/InternetGateway"
            - xml:
                name: internetGateway
              description: Information about the internet gateway.
    KeyPair:
      type: object
      properties:
        KeyFingerprint:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: keyFingerprint
              description: The SHA-1 digest of the DER encoded private key.
        KeyMaterial:
          allOf:
            - $ref: "#/components/schemas/SensitiveUserData"
            - xml:
                name: keyMaterial
              description: An unencrypted PEM encoded RSA or ED25519 private key.
        KeyName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: keyName
              description: The name of the key pair.
        KeyPairId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: keyPairId
              description: The ID of the key pair.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags applied to the key pair.
      description: Describes a key pair.
    CreateLaunchTemplateResult:
      type: object
      example:
        LaunchTemplate:
          CreateTime: 2017-11-27T09:13:24.000Z
          CreatedBy: arn:aws:iam::123456789012:root
          DefaultVersionNumber: 1
          LatestVersionNumber: 1
          LaunchTemplateId: lt-01238c059e3466abc
          LaunchTemplateName: my-template
      properties:
        LaunchTemplate:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplate"
            - xml:
                name: launchTemplate
              description: Information about the launch template.
        Warning:
          allOf:
            - $ref: "#/components/schemas/ValidationWarning"
            - xml:
                name: warning
              description: If the launch template contains parameters or parameter combinations that are not valid, an error code and an error message are returned for each issue that's found.
    KernelId:
      type: string
    LaunchTemplateIamInstanceProfileSpecificationRequest:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Resource Name (ARN) of the instance profile.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the instance profile.
      description: An IAM instance profile.
    LaunchTemplateBlockDeviceMappingRequestList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LaunchTemplateBlockDeviceMappingRequest"
          - xml:
              name: BlockDeviceMapping
    LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LaunchTemplateInstanceNetworkInterfaceSpecificationRequest"
          - xml:
              name: InstanceNetworkInterfaceSpecification
    ImageId:
      type: string
    InstanceType:
      type: string
      enum:
        - t1.micro
        - t2.nano
        - t2.micro
        - t2.small
        - t2.medium
        - t2.large
        - t2.xlarge
        - t2.2xlarge
        - t3.nano
        - t3.micro
        - t3.small
        - t3.medium
        - t3.large
        - t3.xlarge
        - t3.2xlarge
        - t3a.nano
        - t3a.micro
        - t3a.small
        - t3a.medium
        - t3a.large
        - t3a.xlarge
        - t3a.2xlarge
        - t4g.nano
        - t4g.micro
        - t4g.small
        - t4g.medium
        - t4g.large
        - t4g.xlarge
        - t4g.2xlarge
        - m1.small
        - m1.medium
        - m1.large
        - m1.xlarge
        - m3.medium
        - m3.large
        - m3.xlarge
        - m3.2xlarge
        - m4.large
        - m4.xlarge
        - m4.2xlarge
        - m4.4xlarge
        - m4.10xlarge
        - m4.16xlarge
        - m2.xlarge
        - m2.2xlarge
        - m2.4xlarge
        - cr1.8xlarge
        - r3.large
        - r3.xlarge
        - r3.2xlarge
        - r3.4xlarge
        - r3.8xlarge
        - r4.large
        - r4.xlarge
        - r4.2xlarge
        - r4.4xlarge
        - r4.8xlarge
        - r4.16xlarge
        - r5.large
        - r5.xlarge
        - r5.2xlarge
        - r5.4xlarge
        - r5.8xlarge
        - r5.12xlarge
        - r5.16xlarge
        - r5.24xlarge
        - r5.metal
        - r5a.large
        - r5a.xlarge
        - r5a.2xlarge
        - r5a.4xlarge
        - r5a.8xlarge
        - r5a.12xlarge
        - r5a.16xlarge
        - r5a.24xlarge
        - r5b.large
        - r5b.xlarge
        - r5b.2xlarge
        - r5b.4xlarge
        - r5b.8xlarge
        - r5b.12xlarge
        - r5b.16xlarge
        - r5b.24xlarge
        - r5b.metal
        - r5d.large
        - r5d.xlarge
        - r5d.2xlarge
        - r5d.4xlarge
        - r5d.8xlarge
        - r5d.12xlarge
        - r5d.16xlarge
        - r5d.24xlarge
        - r5d.metal
        - r5ad.large
        - r5ad.xlarge
        - r5ad.2xlarge
        - r5ad.4xlarge
        - r5ad.8xlarge
        - r5ad.12xlarge
        - r5ad.16xlarge
        - r5ad.24xlarge
        - r6g.metal
        - r6g.medium
        - r6g.large
        - r6g.xlarge
        - r6g.2xlarge
        - r6g.4xlarge
        - r6g.8xlarge
        - r6g.12xlarge
        - r6g.16xlarge
        - r6gd.metal
        - r6gd.medium
        - r6gd.large
        - r6gd.xlarge
        - r6gd.2xlarge
        - r6gd.4xlarge
        - r6gd.8xlarge
        - r6gd.12xlarge
        - r6gd.16xlarge
        - x1.16xlarge
        - x1.32xlarge
        - x1e.xlarge
        - x1e.2xlarge
        - x1e.4xlarge
        - x1e.8xlarge
        - x1e.16xlarge
        - x1e.32xlarge
        - i2.xlarge
        - i2.2xlarge
        - i2.4xlarge
        - i2.8xlarge
        - i3.large
        - i3.xlarge
        - i3.2xlarge
        - i3.4xlarge
        - i3.8xlarge
        - i3.16xlarge
        - i3.metal
        - i3en.large
        - i3en.xlarge
        - i3en.2xlarge
        - i3en.3xlarge
        - i3en.6xlarge
        - i3en.12xlarge
        - i3en.24xlarge
        - i3en.metal
        - hi1.4xlarge
        - hs1.8xlarge
        - c1.medium
        - c1.xlarge
        - c3.large
        - c3.xlarge
        - c3.2xlarge
        - c3.4xlarge
        - c3.8xlarge
        - c4.large
        - c4.xlarge
        - c4.2xlarge
        - c4.4xlarge
        - c4.8xlarge
        - c5.large
        - c5.xlarge
        - c5.2xlarge
        - c5.4xlarge
        - c5.9xlarge
        - c5.12xlarge
        - c5.18xlarge
        - c5.24xlarge
        - c5.metal
        - c5a.large
        - c5a.xlarge
        - c5a.2xlarge
        - c5a.4xlarge
        - c5a.8xlarge
        - c5a.12xlarge
        - c5a.16xlarge
        - c5a.24xlarge
        - c5ad.large
        - c5ad.xlarge
        - c5ad.2xlarge
        - c5ad.4xlarge
        - c5ad.8xlarge
        - c5ad.12xlarge
        - c5ad.16xlarge
        - c5ad.24xlarge
        - c5d.large
        - c5d.xlarge
        - c5d.2xlarge
        - c5d.4xlarge
        - c5d.9xlarge
        - c5d.12xlarge
        - c5d.18xlarge
        - c5d.24xlarge
        - c5d.metal
        - c5n.large
        - c5n.xlarge
        - c5n.2xlarge
        - c5n.4xlarge
        - c5n.9xlarge
        - c5n.18xlarge
        - c5n.metal
        - c6g.metal
        - c6g.medium
        - c6g.large
        - c6g.xlarge
        - c6g.2xlarge
        - c6g.4xlarge
        - c6g.8xlarge
        - c6g.12xlarge
        - c6g.16xlarge
        - c6gd.metal
        - c6gd.medium
        - c6gd.large
        - c6gd.xlarge
        - c6gd.2xlarge
        - c6gd.4xlarge
        - c6gd.8xlarge
        - c6gd.12xlarge
        - c6gd.16xlarge
        - c6gn.medium
        - c6gn.large
        - c6gn.xlarge
        - c6gn.2xlarge
        - c6gn.4xlarge
        - c6gn.8xlarge
        - c6gn.12xlarge
        - c6gn.16xlarge
        - cc1.4xlarge
        - cc2.8xlarge
        - g2.2xlarge
        - g2.8xlarge
        - g3.4xlarge
        - g3.8xlarge
        - g3.16xlarge
        - g3s.xlarge
        - g4ad.xlarge
        - g4ad.2xlarge
        - g4ad.4xlarge
        - g4ad.8xlarge
        - g4ad.16xlarge
        - g4dn.xlarge
        - g4dn.2xlarge
        - g4dn.4xlarge
        - g4dn.8xlarge
        - g4dn.12xlarge
        - g4dn.16xlarge
        - g4dn.metal
        - cg1.4xlarge
        - p2.xlarge
        - p2.8xlarge
        - p2.16xlarge
        - p3.2xlarge
        - p3.8xlarge
        - p3.16xlarge
        - p3dn.24xlarge
        - p4d.24xlarge
        - d2.xlarge
        - d2.2xlarge
        - d2.4xlarge
        - d2.8xlarge
        - d3.xlarge
        - d3.2xlarge
        - d3.4xlarge
        - d3.8xlarge
        - d3en.xlarge
        - d3en.2xlarge
        - d3en.4xlarge
        - d3en.6xlarge
        - d3en.8xlarge
        - d3en.12xlarge
        - f1.2xlarge
        - f1.4xlarge
        - f1.16xlarge
        - m5.large
        - m5.xlarge
        - m5.2xlarge
        - m5.4xlarge
        - m5.8xlarge
        - m5.12xlarge
        - m5.16xlarge
        - m5.24xlarge
        - m5.metal
        - m5a.large
        - m5a.xlarge
        - m5a.2xlarge
        - m5a.4xlarge
        - m5a.8xlarge
        - m5a.12xlarge
        - m5a.16xlarge
        - m5a.24xlarge
        - m5d.large
        - m5d.xlarge
        - m5d.2xlarge
        - m5d.4xlarge
        - m5d.8xlarge
        - m5d.12xlarge
        - m5d.16xlarge
        - m5d.24xlarge
        - m5d.metal
        - m5ad.large
        - m5ad.xlarge
        - m5ad.2xlarge
        - m5ad.4xlarge
        - m5ad.8xlarge
        - m5ad.12xlarge
        - m5ad.16xlarge
        - m5ad.24xlarge
        - m5zn.large
        - m5zn.xlarge
        - m5zn.2xlarge
        - m5zn.3xlarge
        - m5zn.6xlarge
        - m5zn.12xlarge
        - m5zn.metal
        - h1.2xlarge
        - h1.4xlarge
        - h1.8xlarge
        - h1.16xlarge
        - z1d.large
        - z1d.xlarge
        - z1d.2xlarge
        - z1d.3xlarge
        - z1d.6xlarge
        - z1d.12xlarge
        - z1d.metal
        - u-6tb1.56xlarge
        - u-6tb1.112xlarge
        - u-9tb1.112xlarge
        - u-12tb1.112xlarge
        - u-6tb1.metal
        - u-9tb1.metal
        - u-12tb1.metal
        - u-18tb1.metal
        - u-24tb1.metal
        - a1.medium
        - a1.large
        - a1.xlarge
        - a1.2xlarge
        - a1.4xlarge
        - a1.metal
        - m5dn.large
        - m5dn.xlarge
        - m5dn.2xlarge
        - m5dn.4xlarge
        - m5dn.8xlarge
        - m5dn.12xlarge
        - m5dn.16xlarge
        - m5dn.24xlarge
        - m5dn.metal
        - m5n.large
        - m5n.xlarge
        - m5n.2xlarge
        - m5n.4xlarge
        - m5n.8xlarge
        - m5n.12xlarge
        - m5n.16xlarge
        - m5n.24xlarge
        - m5n.metal
        - r5dn.large
        - r5dn.xlarge
        - r5dn.2xlarge
        - r5dn.4xlarge
        - r5dn.8xlarge
        - r5dn.12xlarge
        - r5dn.16xlarge
        - r5dn.24xlarge
        - r5dn.metal
        - r5n.large
        - r5n.xlarge
        - r5n.2xlarge
        - r5n.4xlarge
        - r5n.8xlarge
        - r5n.12xlarge
        - r5n.16xlarge
        - r5n.24xlarge
        - r5n.metal
        - inf1.xlarge
        - inf1.2xlarge
        - inf1.6xlarge
        - inf1.24xlarge
        - m6g.metal
        - m6g.medium
        - m6g.large
        - m6g.xlarge
        - m6g.2xlarge
        - m6g.4xlarge
        - m6g.8xlarge
        - m6g.12xlarge
        - m6g.16xlarge
        - m6gd.metal
        - m6gd.medium
        - m6gd.large
        - m6gd.xlarge
        - m6gd.2xlarge
        - m6gd.4xlarge
        - m6gd.8xlarge
        - m6gd.12xlarge
        - m6gd.16xlarge
        - m6i.large
        - m6i.xlarge
        - m6i.2xlarge
        - m6i.4xlarge
        - m6i.8xlarge
        - m6i.12xlarge
        - m6i.16xlarge
        - m6i.24xlarge
        - m6i.32xlarge
        - mac1.metal
        - x2gd.medium
        - x2gd.large
        - x2gd.xlarge
        - x2gd.2xlarge
        - x2gd.4xlarge
        - x2gd.8xlarge
        - x2gd.12xlarge
        - x2gd.16xlarge
        - x2gd.metal
        - vt1.3xlarge
        - vt1.6xlarge
        - vt1.24xlarge
    KeyPairName:
      type: string
    LaunchTemplatesMonitoringRequest:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Specify <code>true</code> to enable detailed monitoring. Otherwise, basic monitoring is enabled.
      description: Describes the monitoring for the instance.
    LaunchTemplatePlacementRequest:
      type: object
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Availability Zone for the instance.
        Affinity:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The affinity setting for an instance on a Dedicated Host.
        GroupName:
          allOf:
            - $ref: "#/components/schemas/PlacementGroupName"
            - description: The name of the placement group for the instance.
        HostId:
          allOf:
            - $ref: "#/components/schemas/DedicatedHostId"
            - description: The ID of the Dedicated Host for the instance.
        Tenancy:
          allOf:
            - $ref: "#/components/schemas/Tenancy"
            - description: The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware.
        SpreadDomain:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Reserved for future use.
        HostResourceGroupArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the <b>Tenancy</b> parameter or set it to <code>host</code>.
        PartitionNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of the partition the instance should launch in. Valid only if the placement group strategy is set to <code>partition</code>.
      description: Describes the placement of an instance.
    RamdiskId:
      type: string
    ShutdownBehavior:
      type: string
      enum:
        - stop
        - terminate
    LaunchTemplateTagSpecificationRequestList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LaunchTemplateTagSpecificationRequest"
          - xml:
              name: LaunchTemplateTagSpecificationRequest
    ElasticGpuSpecificationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ElasticGpuSpecification"
          - xml:
              name: ElasticGpuSpecification
    LaunchTemplateElasticInferenceAcceleratorList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LaunchTemplateElasticInferenceAccelerator"
          - xml:
              name: item
    SecurityGroupIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SecurityGroupId"
          - xml:
              name: SecurityGroupId
    SecurityGroupStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SecurityGroupName"
          - xml:
              name: SecurityGroup
    LaunchTemplateInstanceMarketOptionsRequest:
      type: object
      properties:
        MarketType:
          allOf:
            - $ref: "#/components/schemas/MarketType"
            - description: The market type.
        SpotOptions:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateSpotMarketOptionsRequest"
            - description: The options for Spot Instances.
      description: The market (purchasing) option for the instances.
    CreditSpecificationRequest:
      type: object
      required:
        - CpuCredits
      properties:
        CpuCredits:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The credit option for CPU usage of a T2, T3, or T3a instance. Valid values are <code>standard</code> and <code>unlimited</code>.
      description: The credit option for CPU usage of a T2, T3, or T3a instance.
    LaunchTemplateCpuOptionsRequest:
      type: object
      properties:
        CoreCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of CPU cores for the instance.
        ThreadsPerCore:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of threads per CPU core. To disable multithreading for the instance, specify a value of 1. Otherwise, specify the default value of 2.
      description: The CPU options for the instance. Both the core count and threads per core must be specified in the request.
    LaunchTemplateCapacityReservationSpecificationRequest:
      type: object
      properties:
        CapacityReservationPreference:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationPreference"
            - description: <p>Indicates the instance's Capacity Reservation preferences. Possible preferences include:</p> <ul> <li> <p> <code>open</code> - The instance can run in any <code>open</code> Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).</p> </li> <li> <p> <code>none</code> - The instance avoids running in a Capacity Reservation even if one is available. The instance runs in On-Demand capacity.</p> </li> </ul>
        CapacityReservationTarget:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationTarget"
            - description: Information about the target Capacity Reservation or Capacity Reservation group.
      description: Describes an instance's Capacity Reservation targeting option. You can specify only one option at a time. Use the <code>CapacityReservationPreference</code> parameter to configure the instance to run in On-Demand capacity or to run in any <code>open</code> Capacity Reservation that has matching attributes (instance type, platform, Availability Zone). Use the <code>CapacityReservationTarget</code> parameter to explicitly target a specific Capacity Reservation or a Capacity Reservation group.
    LaunchTemplateLicenseSpecificationListRequest:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LaunchTemplateLicenseConfigurationRequest"
          - xml:
              name: item
    LaunchTemplateHibernationOptionsRequest:
      type: object
      properties:
        Configured:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "<p>If you set this parameter to <code>true</code>, the instance is enabled for hibernation.</p> <p>Default: <code>false</code> </p>"
      description: Indicates whether the instance is configured for hibernation. This parameter is valid only if the instance meets the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites">hibernation prerequisites</a>.
    LaunchTemplateInstanceMetadataOptionsRequest:
      type: object
      properties:
        HttpTokens:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateHttpTokensState"
            - description: <p>The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is <code>optional</code>.</p> <p>If the state is <code>optional</code>, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.</p> <p>If the state is <code>required</code>, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.</p>
        HttpPutResponseHopLimit:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.</p> <p>Default: 1</p> <p>Possible values: Integers from 1 to 64</p>"
        HttpEndpoint:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateInstanceMetadataEndpointState"
            - description: <p>This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is <code>enabled</code>.</p> <note> <p>If you specify a value of <code>disabled</code>, you will not be able to access your instance metadata. </p> </note>
        HttpProtocolIpv6:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateInstanceMetadataProtocolIpv6"
            - description: "<p>Enables or disables the IPv6 endpoint for the instance metadata service.</p> <p>Default: <code>disabled</code> </p>"
      description: The metadata options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance Metadata and User Data</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    LaunchTemplateEnclaveOptionsRequest:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: To enable the instance for Amazon Web Services Nitro Enclaves, set this parameter to <code>true</code>.
      description: Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves. For more information, see <a href="https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html"> What is Amazon Web Services Nitro Enclaves?</a> in the <i>Amazon Web Services Nitro Enclaves User Guide</i>.
    CreateLaunchTemplateVersionResult:
      type: object
      example:
        LaunchTemplateVersion:
          CreateTime: 2017-12-01T13:35:46.000Z
          CreatedBy: arn:aws:iam::123456789012:root
          DefaultVersion: false
          LaunchTemplateData:
            ImageId: ami-c998b6b2
            InstanceType: t2.micro
            NetworkInterfaces:
              - AssociatePublicIpAddress: true
                DeviceIndex: 0
                Ipv6Addresses:
                  - Ipv6Address: 2001:db8:1234:1a00::123
                SubnetId: subnet-7b16de0c
          LaunchTemplateId: lt-0abcd290751193123
          LaunchTemplateName: my-template
          VersionDescription: WebVersion2
          VersionNumber: 2
      properties:
        LaunchTemplateVersion:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateVersion"
            - xml:
                name: launchTemplateVersion
              description: Information about the launch template version.
        Warning:
          allOf:
            - $ref: "#/components/schemas/ValidationWarning"
            - xml:
                name: warning
              description: If the new version of the launch template contains parameters or parameter combinations that are not valid, an error code and an error message are returned for each issue that's found.
    CreateLocalGatewayRouteResult:
      type: object
      properties:
        Route:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRoute"
            - xml:
                name: route
              description: Information about the route.
    CreateLocalGatewayRouteTableVpcAssociationResult:
      type: object
      properties:
        LocalGatewayRouteTableVpcAssociation:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRouteTableVpcAssociation"
            - xml:
                name: localGatewayRouteTableVpcAssociation
              description: Information about the association.
    CreateManagedPrefixListResult:
      type: object
      properties:
        PrefixList:
          allOf:
            - $ref: "#/components/schemas/ManagedPrefixList"
            - xml:
                name: prefixList
              description: Information about the prefix list.
    AddPrefixListEntry:
      type: object
      required:
        - Cidr
      properties:
        Cidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The CIDR block.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>A description for the entry.</p> <p>Constraints: Up to 255 characters in length.</p>"
      description: An entry for a prefix list.
    CreateNatGatewayResult:
      type: object
      example:
        NatGateway:
          CreateTime: 2015-12-17T12:45:26.732Z
          NatGatewayAddresses:
            - AllocationId: eipalloc-37fc1a52
          NatGatewayId: nat-08d48af2a8e83edfd
          State: pending
          SubnetId: subnet-1a2b3c4d
          VpcId: vpc-1122aabb
      properties:
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: Unique, case-sensitive identifier to ensure the idempotency of the request. Only returned if a client token was provided in the request.
        NatGateway:
          allOf:
            - $ref: "#/components/schemas/NatGateway"
            - xml:
                name: natGateway
              description: Information about the NAT gateway.
    CreateNetworkAclResult:
      type: object
      example:
        NetworkAcl:
          Associations: []
          Entries:
            - CidrBlock: 0.0.0.0/0
              Egress: true
              Protocol: "-1"
              RuleAction: deny
              RuleNumber: 32767
            - CidrBlock: 0.0.0.0/0
              Egress: false
              Protocol: "-1"
              RuleAction: deny
              RuleNumber: 32767
          IsDefault: false
          NetworkAclId: acl-5fb85d36
          Tags: []
          VpcId: vpc-a01106c2
      properties:
        NetworkAcl:
          allOf:
            - $ref: "#/components/schemas/NetworkAcl"
            - xml:
                name: networkAcl
              description: Information about the network ACL.
    CreateNetworkInsightsPathResult:
      type: object
      properties:
        NetworkInsightsPath:
          allOf:
            - $ref: "#/components/schemas/NetworkInsightsPath"
            - xml:
                name: networkInsightsPath
              description: Information about the path.
    CreateNetworkInterfaceResult:
      type: object
      example:
        NetworkInterface:
          AvailabilityZone: us-east-1d
          Description: my network interface
          Groups:
            - GroupId: sg-903004f8
              GroupName: default
          MacAddress: 02:1a:80:41:52:9c
          NetworkInterfaceId: eni-e5aa89a3
          OwnerId: "123456789012"
          PrivateIpAddress: 10.0.2.17
          PrivateIpAddresses:
            - Primary: true
              PrivateIpAddress: 10.0.2.17
          RequesterManaged: false
          SourceDestCheck: true
          Status: pending
          SubnetId: subnet-9d4a7b6c
          TagSet: []
          VpcId: vpc-a01106c2
      properties:
        NetworkInterface:
          allOf:
            - $ref: "#/components/schemas/NetworkInterface"
            - xml:
                name: networkInterface
              description: Information about the network interface.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
      description: Contains the output of CreateNetworkInterface.
    InstanceIpv6Address:
      type: object
      properties:
        Ipv6Address:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipv6Address
              description: The IPv6 address.
      description: Describes an IPv6 address.
    PrivateIpAddressSpecification:
      type: object
      properties:
        Primary:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: primary
              description: Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary.
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateIpAddress
              description: The private IPv4 addresses.
      description: Describes a secondary private IPv4 address for a network interface.
    Ipv4PrefixSpecificationRequest:
      type: object
      properties:
        Ipv4Prefix:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IPv4 prefix. For information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-prefix-eni.html"> Assigning prefixes to Amazon EC2 network interfaces</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
      description: Describes the IPv4 prefix option for a network interface.
    Ipv6PrefixSpecificationRequest:
      type: object
      properties:
        Ipv6Prefix:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IPv6 prefix.
      description: Describes the IPv4 prefix option for a network interface.
    CreateNetworkInterfacePermissionResult:
      type: object
      properties:
        InterfacePermission:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfacePermission"
            - xml:
                name: interfacePermission
              description: Information about the permission for the network interface.
      description: Contains the output of CreateNetworkInterfacePermission.
    CreatePlacementGroupResult:
      type: object
      example: {}
      properties:
        PlacementGroup:
          allOf:
            - $ref: "#/components/schemas/PlacementGroup"
            - xml:
                name: placementGroup
    CreateReplaceRootVolumeTaskResult:
      type: object
      properties:
        ReplaceRootVolumeTask:
          allOf:
            - $ref: "#/components/schemas/ReplaceRootVolumeTask"
            - xml:
                name: replaceRootVolumeTask
              description: Information about the root volume replacement task.
    CreateReservedInstancesListingResult:
      type: object
      properties:
        ReservedInstancesListings:
          allOf:
            - $ref: "#/components/schemas/ReservedInstancesListingList"
            - xml:
                name: reservedInstancesListingsSet
              description: Information about the Standard Reserved Instance listing.
      description: Contains the output of CreateReservedInstancesListing.
    PriceScheduleSpecification:
      type: object
      properties:
        CurrencyCode:
          allOf:
            - $ref: "#/components/schemas/CurrencyCodeValues"
            - xml:
                name: currencyCode
              description: The currency for transacting the Reserved Instance resale. At this time, the only supported currency is <code>USD</code>.
        Price:
          allOf:
            - $ref: "#/components/schemas/Double"
            - xml:
                name: price
              description: The fixed price for the term.
        Term:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: term
              description: The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.
      description: Describes the price for a Reserved Instance.
    CreateRestoreImageTaskResult:
      type: object
      properties:
        ImageId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: imageId
              description: The AMI ID.
    CreateRouteResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    CreateRouteTableResult:
      type: object
      example:
        RouteTable:
          Associations: []
          PropagatingVgws: []
          RouteTableId: rtb-22574640
          Routes:
            - DestinationCidrBlock: 10.0.0.0/16
              GatewayId: local
              State: active
          Tags: []
          VpcId: vpc-a01106c2
      properties:
        RouteTable:
          allOf:
            - $ref: "#/components/schemas/RouteTable"
            - xml:
                name: routeTable
              description: Information about the route table.
    CreateSecurityGroupResult:
      type: object
      example:
        GroupId: sg-903004f8
      properties:
        GroupId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupId
              description: The ID of the security group.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags assigned to the security group.
    Snapshot:
      type: object
      example:
        Description: This is my root volume snapshot.
        OwnerId: 12345678910
        SnapshotId: snap-066877671789bd71b
        StartTime: 2014-02-28T21:06:01.000Z
        State: pending
        Tags: []
        VolumeId: vol-1234567890abcdef0
        VolumeSize: 8
      properties:
        DataEncryptionKeyId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: dataEncryptionKeyId
              description: The data encryption key identifier for the snapshot. This value is a unique identifier that corresponds to the data encryption key that was used to encrypt the original volume or snapshot copy. Because data encryption keys are inherited by volumes created from snapshots, and vice versa, if snapshots share the same data encryption key identifier, then they belong to the same volume/snapshot lineage. This parameter is only returned by <a>DescribeSnapshots</a>.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: The description for the snapshot.
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: encrypted
              description: Indicates whether the snapshot is encrypted.
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: kmsKeyId
              description: The Amazon Resource Name (ARN) of the Key Management Service (KMS) KMS key that was used to protect the volume encryption key for the parent volume.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the Amazon Web Services account that owns the EBS snapshot.
        Progress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: progress
              description: The progress of the snapshot, as a percentage.
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: snapshotId
              description: The ID of the snapshot. Each snapshot receives a unique identifier when it is created.
        StartTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: startTime
              description: The time stamp when the snapshot was initiated.
        State:
          allOf:
            - $ref: "#/components/schemas/SnapshotState"
            - xml:
                name: status
              description: The snapshot state.
        StateMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: statusMessage
              description: Encrypted Amazon EBS snapshots are copied asynchronously. If a snapshot copy operation fails (for example, if the proper Key Management Service (KMS) permissions are not obtained) this field displays error state details to help you diagnose why the error occurred. This parameter is only returned by <a>DescribeSnapshots</a>.
        VolumeId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: volumeId
              description: The ID of the volume that was used to create the snapshot. Snapshots created by the <a>CopySnapshot</a> action have an arbitrary volume ID that should not be used for any purpose.
        VolumeSize:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: volumeSize
              description: The size of the volume, in GiB.
        OwnerAlias:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerAlias
              description: The Amazon Web Services owner alias, from an Amazon-maintained list (<code>amazon</code>). This is not the user-configured Amazon Web Services account alias set using the IAM console.
        OutpostArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: outpostArn
              description: The ARN of the Outpost on which the snapshot is stored. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html">Amazon EBS local snapshots on Outposts</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the snapshot.
      description: Describes a snapshot.
    CreateSnapshotsResult:
      type: object
      properties:
        Snapshots:
          allOf:
            - $ref: "#/components/schemas/SnapshotSet"
            - xml:
                name: snapshotSet
              description: List of snapshots.
    InstanceId:
      type: string
    CreateSpotDatafeedSubscriptionResult:
      type: object
      example:
        SpotDatafeedSubscription:
          Bucket: my-s3-bucket
          OwnerId: "123456789012"
          Prefix: spotdata
          State: Active
      properties:
        SpotDatafeedSubscription:
          allOf:
            - $ref: "#/components/schemas/SpotDatafeedSubscription"
            - xml:
                name: spotDatafeedSubscription
              description: The Spot Instance data feed subscription.
      description: Contains the output of CreateSpotDatafeedSubscription.
    CreateStoreImageTaskResult:
      type: object
      properties:
        ObjectKey:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: objectKey
              description: The name of the stored AMI object in the S3 bucket.
    S3ObjectTag:
      type: object
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The key of the tag.</p> <p>Constraints: Tag keys are case-sensitive and can be up to 128 Unicode characters in length. May not begin with <code>aws</code>:.</p>"
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The value of the tag.</p> <p>Constraints: Tag values are case-sensitive and can be up to 256 Unicode characters in length.</p>"
      description: The tags to apply to the AMI object that will be stored in the Amazon S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-tagging.html">Categorizing your storage using tags</a> in the <i>Amazon Simple Storage Service User Guide</i>.
    CreateSubnetResult:
      type: object
      example:
        Subnet:
          AvailabilityZone: us-west-2c
          AvailableIpAddressCount: 251
          CidrBlock: 10.0.1.0/24
          State: pending
          SubnetId: subnet-9d4a7b6c
          VpcId: vpc-a01106c2
      properties:
        Subnet:
          allOf:
            - $ref: "#/components/schemas/Subnet"
            - xml:
                name: subnet
              description: Information about the subnet.
    CreateSubnetCidrReservationResult:
      type: object
      properties:
        SubnetCidrReservation:
          allOf:
            - $ref: "#/components/schemas/SubnetCidrReservation"
            - xml:
                name: subnetCidrReservation
              description: Information about the created subnet CIDR reservation.
    TaggableResourceId:
      type: string
    Tag:
      type: object
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: key
              description: "<p>The key of the tag.</p> <p>Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with <code>aws:</code>.</p>"
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: value
              description: "<p>The value of the tag.</p> <p>Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.</p>"
      description: Describes a tag.
    CreateTrafficMirrorFilterResult:
      type: object
      properties:
        TrafficMirrorFilter:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorFilter"
            - xml:
                name: trafficMirrorFilter
              description: Information about the Traffic Mirror filter.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
    CreateTrafficMirrorFilterRuleResult:
      type: object
      properties:
        TrafficMirrorFilterRule:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorFilterRule"
            - xml:
                name: trafficMirrorFilterRule
              description: The Traffic Mirror rule.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
    CreateTrafficMirrorSessionResult:
      type: object
      properties:
        TrafficMirrorSession:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorSession"
            - xml:
                name: trafficMirrorSession
              description: Information about the Traffic Mirror session.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
    CreateTrafficMirrorTargetResult:
      type: object
      properties:
        TrafficMirrorTarget:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorTarget"
            - xml:
                name: trafficMirrorTarget
              description: Information about the Traffic Mirror target.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
    CreateTransitGatewayResult:
      type: object
      properties:
        TransitGateway:
          allOf:
            - $ref: "#/components/schemas/TransitGateway"
            - xml:
                name: transitGateway
              description: Information about the transit gateway.
    Long:
      type: integer
    AutoAcceptSharedAttachmentsValue:
      type: string
      enum:
        - enable
        - disable
    DefaultRouteTableAssociationValue:
      type: string
      enum:
        - enable
        - disable
    DefaultRouteTablePropagationValue:
      type: string
      enum:
        - enable
        - disable
    VpnEcmpSupportValue:
      type: string
      enum:
        - enable
        - disable
    DnsSupportValue:
      type: string
      enum:
        - enable
        - disable
    MulticastSupportValue:
      type: string
      enum:
        - enable
        - disable
    TransitGatewayCidrBlockStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: item
    CreateTransitGatewayConnectResult:
      type: object
      properties:
        TransitGatewayConnect:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayConnect"
            - xml:
                name: transitGatewayConnect
              description: Information about the Connect attachment.
    ProtocolValue:
      type: string
      enum:
        - gre
    CreateTransitGatewayConnectPeerResult:
      type: object
      properties:
        TransitGatewayConnectPeer:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayConnectPeer"
            - xml:
                name: transitGatewayConnectPeer
              description: Information about the Connect peer.
    CreateTransitGatewayMulticastDomainResult:
      type: object
      properties:
        TransitGatewayMulticastDomain:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomain"
            - xml:
                name: transitGatewayMulticastDomain
              description: Information about the transit gateway multicast domain.
    Igmpv2SupportValue:
      type: string
      enum:
        - enable
        - disable
    StaticSourcesSupportValue:
      type: string
      enum:
        - enable
        - disable
    AutoAcceptSharedAssociationsValue:
      type: string
      enum:
        - enable
        - disable
    CreateTransitGatewayPeeringAttachmentResult:
      type: object
      properties:
        TransitGatewayPeeringAttachment:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayPeeringAttachment"
            - xml:
                name: transitGatewayPeeringAttachment
              description: The transit gateway peering attachment.
    CreateTransitGatewayPrefixListReferenceResult:
      type: object
      properties:
        TransitGatewayPrefixListReference:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayPrefixListReference"
            - xml:
                name: transitGatewayPrefixListReference
              description: Information about the prefix list reference.
    CreateTransitGatewayRouteResult:
      type: object
      properties:
        Route:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRoute"
            - xml:
                name: route
              description: Information about the route.
    CreateTransitGatewayRouteTableResult:
      type: object
      properties:
        TransitGatewayRouteTable:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTable"
            - xml:
                name: transitGatewayRouteTable
              description: Information about the transit gateway route table.
    CreateTransitGatewayVpcAttachmentResult:
      type: object
      properties:
        TransitGatewayVpcAttachment:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayVpcAttachment"
            - xml:
                name: transitGatewayVpcAttachment
              description: Information about the VPC attachment.
    Ipv6SupportValue:
      type: string
      enum:
        - enable
        - disable
    ApplianceModeSupportValue:
      type: string
      enum:
        - enable
        - disable
    Volume:
      type: object
      example:
        Attachments: []
        AvailabilityZone: us-east-1a
        CreateTime: 2016-08-29T18:52:32.724Z
        Iops: 1000
        Size: 500
        SnapshotId: snap-066877671789bd71b
        State: creating
        Tags: []
        VolumeId: vol-1234567890abcdef0
        VolumeType: io1
      properties:
        Attachments:
          allOf:
            - $ref: "#/components/schemas/VolumeAttachmentList"
            - xml:
                name: attachmentSet
              description: Information about the volume attachments.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone for the volume.
        CreateTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: createTime
              description: The time stamp when volume creation was initiated.
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: encrypted
              description: Indicates whether the volume is encrypted.
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: kmsKeyId
              description: The Amazon Resource Name (ARN) of the Key Management Service (KMS) KMS key that was used to protect the volume encryption key for the volume.
        OutpostArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: outpostArn
              description: The Amazon Resource Name (ARN) of the Outpost.
        Size:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: size
              description: The size of the volume, in GiBs.
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: snapshotId
              description: The snapshot from which the volume was created, if applicable.
        State:
          allOf:
            - $ref: "#/components/schemas/VolumeState"
            - xml:
                name: status
              description: The volume state.
        VolumeId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: volumeId
              description: The ID of the volume.
        Iops:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: iops
              description: The number of I/O operations per second (IOPS). For <code>gp3</code>, <code>io1</code>, and <code>io2</code> volumes, this represents the number of IOPS that are provisioned for the volume. For <code>gp2</code> volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the volume.
        VolumeType:
          allOf:
            - $ref: "#/components/schemas/VolumeType"
            - xml:
                name: volumeType
              description: The volume type.
        FastRestored:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: fastRestored
              description: Indicates whether the volume was created using fast snapshot restore.
        MultiAttachEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: multiAttachEnabled
              description: Indicates whether Amazon EBS Multi-Attach is enabled.
        Throughput:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: throughput
              description: The throughput that the volume supports, in MiB/s.
      description: Describes a volume.
    CreateVpcResult:
      type: object
      example:
        Vpc:
          CidrBlock: 10.0.0.0/16
          DhcpOptionsId: dopt-7a8b9c2d
          InstanceTenancy: default
          State: pending
          VpcId: vpc-a01106c2
      properties:
        Vpc:
          allOf:
            - $ref: "#/components/schemas/Vpc"
            - xml:
                name: vpc
              description: Information about the VPC.
    CreateVpcEndpointResult:
      type: object
      properties:
        VpcEndpoint:
          allOf:
            - $ref: "#/components/schemas/VpcEndpoint"
            - xml:
                name: vpcEndpoint
              description: Information about the endpoint.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
      description: Contains the output of CreateVpcEndpoint.
    RouteTableId:
      type: string
    CreateVpcEndpointConnectionNotificationResult:
      type: object
      properties:
        ConnectionNotification:
          allOf:
            - $ref: "#/components/schemas/ConnectionNotification"
            - xml:
                name: connectionNotification
              description: Information about the notification.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
    CreateVpcEndpointServiceConfigurationResult:
      type: object
      properties:
        ServiceConfiguration:
          allOf:
            - $ref: "#/components/schemas/ServiceConfiguration"
            - xml:
                name: serviceConfiguration
              description: Information about the service configuration.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
    CreateVpcPeeringConnectionResult:
      type: object
      properties:
        VpcPeeringConnection:
          allOf:
            - $ref: "#/components/schemas/VpcPeeringConnection"
            - xml:
                name: vpcPeeringConnection
              description: Information about the VPC peering connection.
    CreateVpnConnectionResult:
      type: object
      properties:
        VpnConnection:
          allOf:
            - $ref: "#/components/schemas/VpnConnection"
            - xml:
                name: vpnConnection
              description: Information about the VPN connection.
      description: Contains the output of CreateVpnConnection.
    TunnelInsideIpVersion:
      type: string
      enum:
        - ipv4
        - ipv6
    VpnTunnelOptionsSpecificationsList:
      type: array
      items:
        $ref: "#/components/schemas/VpnTunnelOptionsSpecification"
    CreateVpnGatewayResult:
      type: object
      properties:
        VpnGateway:
          allOf:
            - $ref: "#/components/schemas/VpnGateway"
            - xml:
                name: vpnGateway
              description: Information about the virtual private gateway.
      description: Contains the output of CreateVpnGateway.
    DeleteCarrierGatewayResult:
      type: object
      properties:
        CarrierGateway:
          allOf:
            - $ref: "#/components/schemas/CarrierGateway"
            - xml:
                name: carrierGateway
              description: Information about the carrier gateway.
    DeleteClientVpnEndpointResult:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointStatus"
            - xml:
                name: status
              description: The current state of the Client VPN endpoint.
    DeleteClientVpnRouteResult:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/ClientVpnRouteStatus"
            - xml:
                name: status
              description: The current state of the route.
    DeleteEgressOnlyInternetGatewayResult:
      type: object
      properties:
        ReturnCode:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: returnCode
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    DeleteFleetsResult:
      type: object
      properties:
        SuccessfulFleetDeletions:
          allOf:
            - $ref: "#/components/schemas/DeleteFleetSuccessSet"
            - xml:
                name: successfulFleetDeletionSet
              description: Information about the EC2 Fleets that are successfully deleted.
        UnsuccessfulFleetDeletions:
          allOf:
            - $ref: "#/components/schemas/DeleteFleetErrorSet"
            - xml:
                name: unsuccessfulFleetDeletionSet
              description: Information about the EC2 Fleets that are not successfully deleted.
    FleetId:
      type: string
    DeleteFlowLogsResult:
      type: object
      properties:
        Unsuccessful:
          allOf:
            - $ref: "#/components/schemas/UnsuccessfulItemSet"
            - xml:
                name: unsuccessful
              description: Information about the flow logs that could not be deleted successfully.
    VpcFlowLogId:
      type: string
    DeleteFpgaImageResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Is <code>true</code> if the request succeeds, and an error otherwise.
    DeleteInstanceEventWindowResult:
      type: object
      properties:
        InstanceEventWindowState:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindowStateChange"
            - xml:
                name: instanceEventWindowState
              description: The state of the event window.
    DeleteLaunchTemplateResult:
      type: object
      example:
        LaunchTemplate:
          CreateTime: 2017-11-23T16:46:25.000Z
          CreatedBy: arn:aws:iam::123456789012:root
          DefaultVersionNumber: 2
          LatestVersionNumber: 2
          LaunchTemplateId: lt-0abcd290751193123
          LaunchTemplateName: my-template
      properties:
        LaunchTemplate:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplate"
            - xml:
                name: launchTemplate
              description: Information about the launch template.
    DeleteLaunchTemplateVersionsResult:
      type: object
      example:
        SuccessfullyDeletedLaunchTemplateVersions:
          - LaunchTemplateId: lt-0abcd290751193123
            LaunchTemplateName: my-template
            VersionNumber: 1
        UnsuccessfullyDeletedLaunchTemplateVersions: []
      properties:
        SuccessfullyDeletedLaunchTemplateVersions:
          allOf:
            - $ref: "#/components/schemas/DeleteLaunchTemplateVersionsResponseSuccessSet"
            - xml:
                name: successfullyDeletedLaunchTemplateVersionSet
              description: Information about the launch template versions that were successfully deleted.
        UnsuccessfullyDeletedLaunchTemplateVersions:
          allOf:
            - $ref: "#/components/schemas/DeleteLaunchTemplateVersionsResponseErrorSet"
            - xml:
                name: unsuccessfullyDeletedLaunchTemplateVersionSet
              description: Information about the launch template versions that could not be deleted.
    DeleteLocalGatewayRouteResult:
      type: object
      properties:
        Route:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRoute"
            - xml:
                name: route
              description: Information about the route.
    DeleteLocalGatewayRouteTableVpcAssociationResult:
      type: object
      properties:
        LocalGatewayRouteTableVpcAssociation:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRouteTableVpcAssociation"
            - xml:
                name: localGatewayRouteTableVpcAssociation
              description: Information about the association.
    DeleteManagedPrefixListResult:
      type: object
      properties:
        PrefixList:
          allOf:
            - $ref: "#/components/schemas/ManagedPrefixList"
            - xml:
                name: prefixList
              description: Information about the prefix list.
    DeleteNatGatewayResult:
      type: object
      example:
        NatGatewayId: nat-04ae55e711cec5680
      properties:
        NatGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: natGatewayId
              description: The ID of the NAT gateway.
    DeleteNetworkInsightsAnalysisResult:
      type: object
      properties:
        NetworkInsightsAnalysisId:
          allOf:
            - $ref: "#/components/schemas/NetworkInsightsAnalysisId"
            - xml:
                name: networkInsightsAnalysisId
              description: The ID of the network insights analysis.
    DeleteNetworkInsightsPathResult:
      type: object
      properties:
        NetworkInsightsPathId:
          allOf:
            - $ref: "#/components/schemas/NetworkInsightsPathId"
            - xml:
                name: networkInsightsPathId
              description: The ID of the path.
    DeleteNetworkInterfacePermissionResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds, otherwise returns an error.
      description: Contains the output for DeleteNetworkInterfacePermission.
    DeleteQueuedReservedInstancesResult:
      type: object
      properties:
        SuccessfulQueuedPurchaseDeletions:
          allOf:
            - $ref: "#/components/schemas/SuccessfulQueuedPurchaseDeletionSet"
            - xml:
                name: successfulQueuedPurchaseDeletionSet
              description: Information about the queued purchases that were successfully deleted.
        FailedQueuedPurchaseDeletions:
          allOf:
            - $ref: "#/components/schemas/FailedQueuedPurchaseDeletionSet"
            - xml:
                name: failedQueuedPurchaseDeletionSet
              description: Information about the queued purchases that could not be deleted.
    DeleteSubnetCidrReservationResult:
      type: object
      properties:
        DeletedSubnetCidrReservation:
          allOf:
            - $ref: "#/components/schemas/SubnetCidrReservation"
            - xml:
                name: deletedSubnetCidrReservation
              description: Information about the deleted subnet CIDR reservation.
    DeleteTrafficMirrorFilterResult:
      type: object
      properties:
        TrafficMirrorFilterId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: trafficMirrorFilterId
              description: The ID of the Traffic Mirror filter.
    DeleteTrafficMirrorFilterRuleResult:
      type: object
      properties:
        TrafficMirrorFilterRuleId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: trafficMirrorFilterRuleId
              description: The ID of the deleted Traffic Mirror rule.
    DeleteTrafficMirrorSessionResult:
      type: object
      properties:
        TrafficMirrorSessionId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: trafficMirrorSessionId
              description: The ID of the deleted Traffic Mirror session.
    DeleteTrafficMirrorTargetResult:
      type: object
      properties:
        TrafficMirrorTargetId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: trafficMirrorTargetId
              description: The ID of the deleted Traffic Mirror target.
    DeleteTransitGatewayResult:
      type: object
      properties:
        TransitGateway:
          allOf:
            - $ref: "#/components/schemas/TransitGateway"
            - xml:
                name: transitGateway
              description: Information about the deleted transit gateway.
    DeleteTransitGatewayConnectResult:
      type: object
      properties:
        TransitGatewayConnect:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayConnect"
            - xml:
                name: transitGatewayConnect
              description: Information about the deleted Connect attachment.
    DeleteTransitGatewayConnectPeerResult:
      type: object
      properties:
        TransitGatewayConnectPeer:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayConnectPeer"
            - xml:
                name: transitGatewayConnectPeer
              description: Information about the deleted Connect peer.
    DeleteTransitGatewayMulticastDomainResult:
      type: object
      properties:
        TransitGatewayMulticastDomain:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomain"
            - xml:
                name: transitGatewayMulticastDomain
              description: Information about the deleted transit gateway multicast domain.
    DeleteTransitGatewayPeeringAttachmentResult:
      type: object
      properties:
        TransitGatewayPeeringAttachment:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayPeeringAttachment"
            - xml:
                name: transitGatewayPeeringAttachment
              description: The transit gateway peering attachment.
    DeleteTransitGatewayPrefixListReferenceResult:
      type: object
      properties:
        TransitGatewayPrefixListReference:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayPrefixListReference"
            - xml:
                name: transitGatewayPrefixListReference
              description: Information about the deleted prefix list reference.
    DeleteTransitGatewayRouteResult:
      type: object
      properties:
        Route:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRoute"
            - xml:
                name: route
              description: Information about the route.
    DeleteTransitGatewayRouteTableResult:
      type: object
      properties:
        TransitGatewayRouteTable:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTable"
            - xml:
                name: transitGatewayRouteTable
              description: Information about the deleted transit gateway route table.
    DeleteTransitGatewayVpcAttachmentResult:
      type: object
      properties:
        TransitGatewayVpcAttachment:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayVpcAttachment"
            - xml:
                name: transitGatewayVpcAttachment
              description: Information about the deleted VPC attachment.
    DeleteVpcEndpointConnectionNotificationsResult:
      type: object
      properties:
        Unsuccessful:
          allOf:
            - $ref: "#/components/schemas/UnsuccessfulItemSet"
            - xml:
                name: unsuccessful
              description: Information about the notifications that could not be deleted successfully.
    ConnectionNotificationId:
      type: string
    DeleteVpcEndpointServiceConfigurationsResult:
      type: object
      properties:
        Unsuccessful:
          allOf:
            - $ref: "#/components/schemas/UnsuccessfulItemSet"
            - xml:
                name: unsuccessful
              description: Information about the service configurations that were not deleted, if applicable.
    VpcEndpointServiceId:
      type: string
    DeleteVpcEndpointsResult:
      type: object
      properties:
        Unsuccessful:
          allOf:
            - $ref: "#/components/schemas/UnsuccessfulItemSet"
            - xml:
                name: unsuccessful
              description: Information about the VPC endpoints that were not successfully deleted.
      description: Contains the output of DeleteVpcEndpoints.
    DeleteVpcPeeringConnectionResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    DeprovisionByoipCidrResult:
      type: object
      properties:
        ByoipCidr:
          allOf:
            - $ref: "#/components/schemas/ByoipCidr"
            - xml:
                name: byoipCidr
              description: Information about the address range.
    DeregisterInstanceEventNotificationAttributesResult:
      type: object
      properties:
        InstanceTagAttribute:
          allOf:
            - $ref: "#/components/schemas/InstanceTagNotificationAttribute"
            - xml:
                name: instanceTagAttribute
              description: The resulting set of tag keys.
    InstanceTagKeySet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: item
    DeregisterTransitGatewayMulticastGroupMembersResult:
      type: object
      properties:
        DeregisteredMulticastGroupMembers:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDeregisteredGroupMembers"
            - xml:
                name: deregisteredMulticastGroupMembers
              description: Information about the deregistered members.
    NetworkInterfaceId:
      type: string
    DeregisterTransitGatewayMulticastGroupSourcesResult:
      type: object
      properties:
        DeregisteredMulticastGroupSources:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDeregisteredGroupSources"
            - xml:
                name: deregisteredMulticastGroupSources
              description: Information about the deregistered group sources.
    DescribeAccountAttributesResult:
      type: object
      example:
        AccountAttributes:
          - AttributeName: supported-platforms
            AttributeValues:
              - AttributeValue: EC2
              - AttributeValue: VPC
          - AttributeName: vpc-max-security-groups-per-interface
            AttributeValues:
              - AttributeValue: "5"
          - AttributeName: max-elastic-ips
            AttributeValues:
              - AttributeValue: "5"
          - AttributeName: max-instances
            AttributeValues:
              - AttributeValue: "20"
          - AttributeName: vpc-max-elastic-ips
            AttributeValues:
              - AttributeValue: "5"
          - AttributeName: default-vpc
            AttributeValues:
              - AttributeValue: none
      properties:
        AccountAttributes:
          allOf:
            - $ref: "#/components/schemas/AccountAttributeList"
            - xml:
                name: accountAttributeSet
              description: Information about the account attributes.
    AccountAttributeName:
      type: string
      enum:
        - supported-platforms
        - default-vpc
    DescribeAddressesResult:
      type: object
      example:
        Addresses:
          - Domain: standard
            InstanceId: i-1234567890abcdef0
            PublicIp: 198.51.100.0
      properties:
        Addresses:
          allOf:
            - $ref: "#/components/schemas/AddressList"
            - xml:
                name: addressesSet
              description: Information about the Elastic IP addresses.
    Filter:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the filter. Filter names are case-sensitive.
        Values:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: Value
              description: The filter values. Filter values are case-sensitive.
      description: A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.
    AllocationId:
      type: string
    DescribeAddressesAttributeResult:
      type: object
      properties:
        Addresses:
          allOf:
            - $ref: "#/components/schemas/AddressSet"
            - xml:
                name: addressSet
              description: Information about the IP addresses.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeAggregateIdFormatResult:
      type: object
      properties:
        UseLongIdsAggregated:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: useLongIdsAggregated
              description: Indicates whether all resource types in the Region are configured to use longer IDs. This value is only <code>true</code> if all users are configured to use longer IDs for all resources types in the Region.
        Statuses:
          allOf:
            - $ref: "#/components/schemas/IdFormatList"
            - xml:
                name: statusSet
              description: Information about each resource's ID format.
    DescribeAvailabilityZonesResult:
      type: object
      example:
        AvailabilityZones:
          - Messages: []
            RegionName: us-east-1
            State: available
            ZoneName: us-east-1b
          - Messages: []
            RegionName: us-east-1
            State: available
            ZoneName: us-east-1c
          - Messages: []
            RegionName: us-east-1
            State: available
            ZoneName: us-east-1d
          - Messages: []
            RegionName: us-east-1
            State: available
            ZoneName: us-east-1e
      properties:
        AvailabilityZones:
          allOf:
            - $ref: "#/components/schemas/AvailabilityZoneList"
            - xml:
                name: availabilityZoneInfo
              description: Information about the Availability Zones, Local Zones, and Wavelength Zones.
    DescribeBundleTasksResult:
      type: object
      properties:
        BundleTasks:
          allOf:
            - $ref: "#/components/schemas/BundleTaskList"
            - xml:
                name: bundleInstanceTasksSet
              description: Information about the bundle tasks.
    BundleId:
      type: string
    DescribeByoipCidrsResult:
      type: object
      properties:
        ByoipCidrs:
          allOf:
            - $ref: "#/components/schemas/ByoipCidrSet"
            - xml:
                name: byoipCidrSet
              description: Information about your address ranges.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeCapacityReservationsResult:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        CapacityReservations:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationSet"
            - xml:
                name: capacityReservationSet
              description: Information about the Capacity Reservations.
    CapacityReservationId:
      type: string
    DescribeCarrierGatewaysResult:
      type: object
      properties:
        CarrierGateways:
          allOf:
            - $ref: "#/components/schemas/CarrierGatewaySet"
            - xml:
                name: carrierGatewaySet
              description: Information about the carrier gateway.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    CarrierGatewayId:
      type: string
    DescribeClassicLinkInstancesResult:
      type: object
      properties:
        Instances:
          allOf:
            - $ref: "#/components/schemas/ClassicLinkInstanceList"
            - xml:
                name: instancesSet
              description: Information about one or more linked EC2-Classic instances.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeClientVpnAuthorizationRulesResult:
      type: object
      properties:
        AuthorizationRules:
          allOf:
            - $ref: "#/components/schemas/AuthorizationRuleSet"
            - xml:
                name: authorizationRule
              description: Information about the authorization rules.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeClientVpnConnectionsResult:
      type: object
      properties:
        Connections:
          allOf:
            - $ref: "#/components/schemas/ClientVpnConnectionSet"
            - xml:
                name: connections
              description: Information about the active and terminated client connections.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeClientVpnEndpointsResult:
      type: object
      properties:
        ClientVpnEndpoints:
          allOf:
            - $ref: "#/components/schemas/EndpointSet"
            - xml:
                name: clientVpnEndpoint
              description: Information about the Client VPN endpoints.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    ClientVpnEndpointId:
      type: string
    DescribeClientVpnRoutesResult:
      type: object
      properties:
        Routes:
          allOf:
            - $ref: "#/components/schemas/ClientVpnRouteSet"
            - xml:
                name: routes
              description: Information about the Client VPN endpoint routes.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeClientVpnTargetNetworksResult:
      type: object
      properties:
        ClientVpnTargetNetworks:
          allOf:
            - $ref: "#/components/schemas/TargetNetworkSet"
            - xml:
                name: clientVpnTargetNetworks
              description: Information about the associated target networks.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeCoipPoolsResult:
      type: object
      properties:
        CoipPools:
          allOf:
            - $ref: "#/components/schemas/CoipPoolSet"
            - xml:
                name: coipPoolSet
              description: Information about the address pools.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    CoipPoolId:
      type: string
    DescribeConversionTasksResult:
      type: object
      properties:
        ConversionTasks:
          allOf:
            - $ref: "#/components/schemas/DescribeConversionTaskList"
            - xml:
                name: conversionTasks
              description: Information about the conversion tasks.
    ConversionTaskId:
      type: string
    DescribeCustomerGatewaysResult:
      type: object
      example:
        CustomerGateways:
          - BgpAsn: "65534"
            CustomerGatewayId: cgw-0e11f167
            IpAddress: 12.1.2.3
            State: available
            Type: ipsec.1
      properties:
        CustomerGateways:
          allOf:
            - $ref: "#/components/schemas/CustomerGatewayList"
            - xml:
                name: customerGatewaySet
              description: Information about one or more customer gateways.
      description: Contains the output of DescribeCustomerGateways.
    CustomerGatewayId:
      type: string
    DescribeDhcpOptionsResult:
      type: object
      example:
        DhcpOptions:
          - DhcpConfigurations:
              - Key: domain-name-servers
                Values:
                  - Value: 10.2.5.2
                  - Value: 10.2.5.1
            DhcpOptionsId: dopt-d9070ebb
      properties:
        DhcpOptions:
          allOf:
            - $ref: "#/components/schemas/DhcpOptionsList"
            - xml:
                name: dhcpOptionsSet
              description: Information about one or more DHCP options sets.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DhcpOptionsId:
      type: string
    DescribeEgressOnlyInternetGatewaysResult:
      type: object
      properties:
        EgressOnlyInternetGateways:
          allOf:
            - $ref: "#/components/schemas/EgressOnlyInternetGatewayList"
            - xml:
                name: egressOnlyInternetGatewaySet
              description: Information about the egress-only internet gateways.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    EgressOnlyInternetGatewayId:
      type: string
    DescribeElasticGpusResult:
      type: object
      properties:
        ElasticGpuSet:
          allOf:
            - $ref: "#/components/schemas/ElasticGpuSet"
            - xml:
                name: elasticGpuSet
              description: Information about the Elastic Graphics accelerators.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: maxResults
              description: The total number of items to return. If the total number of items available is more than the value specified in max-items then a Next-Token will be provided in the output that you can use to resume pagination.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    ElasticGpuId:
      type: string
    DescribeExportImageTasksResult:
      type: object
      properties:
        ExportImageTasks:
          allOf:
            - $ref: "#/components/schemas/ExportImageTaskList"
            - xml:
                name: exportImageTaskSet
              description: Information about the export image tasks.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - xml:
                name: nextToken
              description: The token to use to get the next page of results. This value is <code>null</code> when there are no more results to return.
    ExportImageTaskId:
      type: string
    DescribeExportTasksResult:
      type: object
      properties:
        ExportTasks:
          allOf:
            - $ref: "#/components/schemas/ExportTaskList"
            - xml:
                name: exportTaskSet
              description: Information about the export tasks.
    ExportTaskId:
      type: string
    DescribeFastSnapshotRestoresResult:
      type: object
      properties:
        FastSnapshotRestores:
          allOf:
            - $ref: "#/components/schemas/DescribeFastSnapshotRestoreSuccessSet"
            - xml:
                name: fastSnapshotRestoreSet
              description: Information about the state of fast snapshot restores.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeFleetHistoryResult:
      type: object
      properties:
        HistoryRecords:
          allOf:
            - $ref: "#/components/schemas/HistoryRecordSet"
            - xml:
                name: historyRecordSet
              description: Information about the events in the history of the EC2 Fleet.
        LastEvaluatedTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: lastEvaluatedTime
              description: <p>The last date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). All records up to this time were retrieved.</p> <p>If <code>nextToken</code> indicates that there are more results, this value is not present.</p>
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token for the next set of results.
        FleetId:
          allOf:
            - $ref: "#/components/schemas/FleetId"
            - xml:
                name: fleetId
              description: The ID of the EC Fleet.
        StartTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: startTime
              description: The start date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
    DescribeFleetInstancesResult:
      type: object
      properties:
        ActiveInstances:
          allOf:
            - $ref: "#/components/schemas/ActiveInstanceSet"
            - xml:
                name: activeInstanceSet
              description: The running instances. This list is refreshed periodically and might be out of date.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token for the next set of results.
        FleetId:
          allOf:
            - $ref: "#/components/schemas/FleetId"
            - xml:
                name: fleetId
              description: The ID of the EC2 Fleet.
    DescribeFleetsResult:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token for the next set of results.
        Fleets:
          allOf:
            - $ref: "#/components/schemas/FleetSet"
            - xml:
                name: fleetSet
              description: Information about the EC2 Fleets.
    DescribeFlowLogsResult:
      type: object
      properties:
        FlowLogs:
          allOf:
            - $ref: "#/components/schemas/FlowLogSet"
            - xml:
                name: flowLogSet
              description: Information about the flow logs.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeFpgaImageAttributeResult:
      type: object
      properties:
        FpgaImageAttribute:
          allOf:
            - $ref: "#/components/schemas/FpgaImageAttribute"
            - xml:
                name: fpgaImageAttribute
              description: Information about the attribute.
    DescribeFpgaImagesResult:
      type: object
      properties:
        FpgaImages:
          allOf:
            - $ref: "#/components/schemas/FpgaImageList"
            - xml:
                name: fpgaImageSet
              description: Information about the FPGA images.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    FpgaImageId:
      type: string
    DescribeHostReservationOfferingsResult:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        OfferingSet:
          allOf:
            - $ref: "#/components/schemas/HostOfferingSet"
            - xml:
                name: offeringSet
              description: Information about the offerings.
    DescribeHostReservationsResult:
      type: object
      properties:
        HostReservationSet:
          allOf:
            - $ref: "#/components/schemas/HostReservationSet"
            - xml:
                name: hostReservationSet
              description: Details about the reservation's configuration.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    HostReservationId:
      type: string
    DescribeHostsResult:
      type: object
      properties:
        Hosts:
          allOf:
            - $ref: "#/components/schemas/HostList"
            - xml:
                name: hostSet
              description: Information about the Dedicated Hosts.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DedicatedHostId:
      type: string
    DescribeIamInstanceProfileAssociationsResult:
      type: object
      example:
        IamInstanceProfileAssociations:
          - AssociationId: iip-assoc-0db249b1f25fa24b8
            IamInstanceProfile:
              Arn: arn:aws:iam::123456789012:instance-profile/admin-role
              Id: AIPAJVQN4F5WVLGCJDRGM
            InstanceId: i-09eb09efa73ec1dee
            State: associated
      properties:
        IamInstanceProfileAssociations:
          allOf:
            - $ref: "#/components/schemas/IamInstanceProfileAssociationSet"
            - xml:
                name: iamInstanceProfileAssociationSet
              description: Information about the IAM instance profile associations.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    IamInstanceProfileAssociationId:
      type: string
    DescribeIdFormatResult:
      type: object
      properties:
        Statuses:
          allOf:
            - $ref: "#/components/schemas/IdFormatList"
            - xml:
                name: statusSet
              description: Information about the ID format for the resource.
    DescribeIdentityIdFormatResult:
      type: object
      properties:
        Statuses:
          allOf:
            - $ref: "#/components/schemas/IdFormatList"
            - xml:
                name: statusSet
              description: Information about the ID format for the resources.
    ImageAttribute:
      type: object
      example:
        ImageId: ami-5731123e
        LaunchPermissions:
          - UserId: "123456789012"
      properties:
        BlockDeviceMappings:
          allOf:
            - $ref: "#/components/schemas/BlockDeviceMappingList"
            - xml:
                name: blockDeviceMapping
              description: The block device mapping entries.
        ImageId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: imageId
              description: The ID of the AMI.
        LaunchPermissions:
          allOf:
            - $ref: "#/components/schemas/LaunchPermissionList"
            - xml:
                name: launchPermission
              description: The launch permissions.
        ProductCodes:
          allOf:
            - $ref: "#/components/schemas/ProductCodeList"
            - xml:
                name: productCodes
              description: The product codes.
        Description:
          allOf:
            - $ref: "#/components/schemas/AttributeValue"
            - xml:
                name: description
              description: A description for the AMI.
        KernelId:
          allOf:
            - $ref: "#/components/schemas/AttributeValue"
            - xml:
                name: kernel
              description: The kernel ID.
        RamdiskId:
          allOf:
            - $ref: "#/components/schemas/AttributeValue"
            - xml:
                name: ramdisk
              description: The RAM disk ID.
        SriovNetSupport:
          allOf:
            - $ref: "#/components/schemas/AttributeValue"
            - xml:
                name: sriovNetSupport
              description: Indicates whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
        BootMode:
          allOf:
            - $ref: "#/components/schemas/AttributeValue"
            - xml:
                name: bootMode
      description: Describes an image attribute.
    DescribeImagesResult:
      type: object
      example:
        Images:
          - Architecture: x86_64
            BlockDeviceMappings:
              - DeviceName: /dev/sda1
                Ebs:
                  DeleteOnTermination: true
                  SnapshotId: snap-1234567890abcdef0
                  VolumeSize: 8
                  VolumeType: standard
            Description: An AMI for my server
            Hypervisor: xen
            ImageId: ami-5731123e
            ImageLocation: 123456789012/My server
            ImageType: machine
            KernelId: aki-88aa75e1
            Name: My server
            OwnerId: "123456789012"
            Public: false
            RootDeviceName: /dev/sda1
            RootDeviceType: ebs
            State: available
            VirtualizationType: paravirtual
      properties:
        Images:
          allOf:
            - $ref: "#/components/schemas/ImageList"
            - xml:
                name: imagesSet
              description: Information about the images.
    DescribeImportImageTasksResult:
      type: object
      properties:
        ImportImageTasks:
          allOf:
            - $ref: "#/components/schemas/ImportImageTaskList"
            - xml:
                name: importImageTaskSet
              description: A list of zero or more import image tasks that are currently active or were completed or canceled in the previous 7 days.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to get the next page of results. This value is <code>null</code> when there are no more results to return.
    ImportImageTaskId:
      type: string
    DescribeImportSnapshotTasksResult:
      type: object
      properties:
        ImportSnapshotTasks:
          allOf:
            - $ref: "#/components/schemas/ImportSnapshotTaskList"
            - xml:
                name: importSnapshotTaskSet
              description: A list of zero or more import snapshot tasks that are currently active or were completed or canceled in the previous 7 days.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to get the next page of results. This value is <code>null</code> when there are no more results to return.
    ImportSnapshotTaskId:
      type: string
    InstanceAttribute:
      type: object
      example:
        BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs:
              AttachTime: 2013-05-17T22:42:34.000Z
              DeleteOnTermination: true
              Status: attached
              VolumeId: vol-049df61146c4d7901
          - DeviceName: /dev/sdf
            Ebs:
              AttachTime: 2013-09-10T23:07:00.000Z
              DeleteOnTermination: false
              Status: attached
              VolumeId: vol-049df61146c4d7901
        InstanceId: i-1234567890abcdef0
      properties:
        Groups:
          allOf:
            - $ref: "#/components/schemas/GroupIdentifierList"
            - xml:
                name: groupSet
              description: The security groups associated with the instance.
        BlockDeviceMappings:
          allOf:
            - $ref: "#/components/schemas/InstanceBlockDeviceMappingList"
            - xml:
                name: blockDeviceMapping
              description: The block device mapping of the instance.
        DisableApiTermination:
          allOf:
            - $ref: "#/components/schemas/AttributeBooleanValue"
            - xml:
                name: disableApiTermination
              description: If the value is <code>true</code>, you can't terminate the instance through the Amazon EC2 console, CLI, or API; otherwise, you can.
        EnaSupport:
          allOf:
            - $ref: "#/components/schemas/AttributeBooleanValue"
            - xml:
                name: enaSupport
              description: Indicates whether enhanced networking with ENA is enabled.
        EnclaveOptions:
          allOf:
            - $ref: "#/components/schemas/EnclaveOptions"
            - xml:
                name: enclaveOptions
              description: To enable the instance for Amazon Web Services Nitro Enclaves, set this parameter to <code>true</code>; otherwise, set it to <code>false</code>.
        EbsOptimized:
          allOf:
            - $ref: "#/components/schemas/AttributeBooleanValue"
            - xml:
                name: ebsOptimized
              description: Indicates whether the instance is optimized for Amazon EBS I/O.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance.
        InstanceInitiatedShutdownBehavior:
          allOf:
            - $ref: "#/components/schemas/AttributeValue"
            - xml:
                name: instanceInitiatedShutdownBehavior
              description: Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/AttributeValue"
            - xml:
                name: instanceType
              description: The instance type.
        KernelId:
          allOf:
            - $ref: "#/components/schemas/AttributeValue"
            - xml:
                name: kernel
              description: The kernel ID.
        ProductCodes:
          allOf:
            - $ref: "#/components/schemas/ProductCodeList"
            - xml:
                name: productCodes
              description: A list of product codes.
        RamdiskId:
          allOf:
            - $ref: "#/components/schemas/AttributeValue"
            - xml:
                name: ramdisk
              description: The RAM disk ID.
        RootDeviceName:
          allOf:
            - $ref: "#/components/schemas/AttributeValue"
            - xml:
                name: rootDeviceName
              description: The device name of the root device volume (for example, <code>/dev/sda1</code>).
        SourceDestCheck:
          allOf:
            - $ref: "#/components/schemas/AttributeBooleanValue"
            - xml:
                name: sourceDestCheck
              description: Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives. If the value is <code>true</code>, source/destination checks are enabled; otherwise, they are disabled. The default value is <code>true</code>. You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.
        SriovNetSupport:
          allOf:
            - $ref: "#/components/schemas/AttributeValue"
            - xml:
                name: sriovNetSupport
              description: Indicates whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
        UserData:
          allOf:
            - $ref: "#/components/schemas/AttributeValue"
            - xml:
                name: userData
              description: The user data.
      description: Describes an instance attribute.
    DescribeInstanceCreditSpecificationsResult:
      type: object
      properties:
        InstanceCreditSpecifications:
          allOf:
            - $ref: "#/components/schemas/InstanceCreditSpecificationList"
            - xml:
                name: instanceCreditSpecificationSet
              description: Information about the credit option for CPU usage of an instance.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeInstanceEventNotificationAttributesResult:
      type: object
      properties:
        InstanceTagAttribute:
          allOf:
            - $ref: "#/components/schemas/InstanceTagNotificationAttribute"
            - xml:
                name: instanceTagAttribute
              description: Information about the registered tag keys.
    DescribeInstanceEventWindowsResult:
      type: object
      properties:
        InstanceEventWindows:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindowSet"
            - xml:
                name: instanceEventWindowSet
              description: Information about the event windows.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: "The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. "
    InstanceEventWindowId:
      type: string
    DescribeInstanceStatusResult:
      type: object
      example:
        InstanceStatuses:
          - AvailabilityZone: us-east-1d
            InstanceId: i-1234567890abcdef0
            InstanceState:
              Code: 16
              Name: running
            InstanceStatus:
              Details:
                - Name: reachability
                  Status: passed
              Status: ok
            SystemStatus:
              Details:
                - Name: reachability
                  Status: passed
              Status: ok
      properties:
        InstanceStatuses:
          allOf:
            - $ref: "#/components/schemas/InstanceStatusList"
            - xml:
                name: instanceStatusSet
              description: Information about the status of the instances.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeInstanceTypeOfferingsResult:
      type: object
      properties:
        InstanceTypeOfferings:
          allOf:
            - $ref: "#/components/schemas/InstanceTypeOfferingsList"
            - xml:
                name: instanceTypeOfferingSet
              description: The instance types offered.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeInstanceTypesResult:
      type: object
      properties:
        InstanceTypes:
          allOf:
            - $ref: "#/components/schemas/InstanceTypeInfoList"
            - xml:
                name: instanceTypeSet
              description: The instance type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide</i>.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeInstancesResult:
      type: object
      example: {}
      properties:
        Reservations:
          allOf:
            - $ref: "#/components/schemas/ReservationList"
            - xml:
                name: reservationSet
              description: Information about the reservations.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeInternetGatewaysResult:
      type: object
      example:
        InternetGateways:
          - Attachments:
              - State: available
                VpcId: vpc-a01106c2
            InternetGatewayId: igw-c0a643a9
            Tags: []
      properties:
        InternetGateways:
          allOf:
            - $ref: "#/components/schemas/InternetGatewayList"
            - xml:
                name: internetGatewaySet
              description: Information about one or more internet gateways.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    InternetGatewayId:
      type: string
    DescribeIpv6PoolsResult:
      type: object
      properties:
        Ipv6Pools:
          allOf:
            - $ref: "#/components/schemas/Ipv6PoolSet"
            - xml:
                name: ipv6PoolSet
              description: Information about the IPv6 address pools.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    Ipv6PoolEc2Id:
      type: string
    DescribeKeyPairsResult:
      type: object
      example:
        KeyPairs:
          - KeyFingerprint: 1f:51:ae:28:bf:89:e9:d8:1f:25:5d:37:2d:7d:b8:ca:9f:f5:f1:6f
            KeyName: my-key-pair
      properties:
        KeyPairs:
          allOf:
            - $ref: "#/components/schemas/KeyPairList"
            - xml:
                name: keySet
              description: Information about the key pairs.
    KeyPairId:
      type: string
    DescribeLaunchTemplateVersionsResult:
      type: object
      example:
        LaunchTemplateVersions:
          - CreateTime: 2017-11-20T13:12:32.000Z
            CreatedBy: arn:aws:iam::123456789102:root
            DefaultVersion: false
            LaunchTemplateData:
              ImageId: ami-6057e21a
              InstanceType: t2.medium
              KeyName: kp-us-east
              NetworkInterfaces:
                - DeviceIndex: 0
                  Groups:
                    - sg-7c227019
                  SubnetId: subnet-1a2b3c4d
            LaunchTemplateId: lt-068f72b72934aff71
            LaunchTemplateName: Webservers
            VersionNumber: 2
          - CreateTime: 2017-11-20T12:52:33.000Z
            CreatedBy: arn:aws:iam::123456789102:root
            DefaultVersion: true
            LaunchTemplateData:
              ImageId: ami-aabbcc11
              InstanceType: t2.medium
              KeyName: kp-us-east
              NetworkInterfaces:
                - AssociatePublicIpAddress: true
                  DeleteOnTermination: false
                  DeviceIndex: 0
                  Groups:
                    - sg-7c227019
                  SubnetId: subnet-7b16de0c
              UserData: ""
            LaunchTemplateId: lt-068f72b72934aff71
            LaunchTemplateName: Webservers
            VersionNumber: 1
      properties:
        LaunchTemplateVersions:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateVersionSet"
            - xml:
                name: launchTemplateVersionSet
              description: Information about the launch template versions.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeLaunchTemplatesResult:
      type: object
      example:
        LaunchTemplates:
          - CreateTime: 2018-01-16T04:32:57.000Z
            CreatedBy: arn:aws:iam::123456789012:root
            DefaultVersionNumber: 1
            LatestVersionNumber: 1
            LaunchTemplateId: lt-01238c059e3466abc
            LaunchTemplateName: my-template
      properties:
        LaunchTemplates:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateSet"
            - xml:
                name: launchTemplates
              description: Information about the launch templates.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    LaunchTemplateId:
      type: string
    LaunchTemplateName:
      type: string
      pattern: "[a-zA-Z0-9\\(\\)\\.\\-/_]+"
      minLength: 3
      maxLength: 128
    DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult:
      type: object
      properties:
        LocalGatewayRouteTableVirtualInterfaceGroupAssociations:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRouteTableVirtualInterfaceGroupAssociationSet"
            - xml:
                name: localGatewayRouteTableVirtualInterfaceGroupAssociationSet
              description: Information about the associations.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    LocalGatewayRouteTableVirtualInterfaceGroupAssociationId:
      type: string
    DescribeLocalGatewayRouteTableVpcAssociationsResult:
      type: object
      properties:
        LocalGatewayRouteTableVpcAssociations:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRouteTableVpcAssociationSet"
            - xml:
                name: localGatewayRouteTableVpcAssociationSet
              description: Information about the associations.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    LocalGatewayRouteTableVpcAssociationId:
      type: string
    DescribeLocalGatewayRouteTablesResult:
      type: object
      properties:
        LocalGatewayRouteTables:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRouteTableSet"
            - xml:
                name: localGatewayRouteTableSet
              description: Information about the local gateway route tables.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    LocalGatewayRoutetableId:
      type: string
    DescribeLocalGatewayVirtualInterfaceGroupsResult:
      type: object
      properties:
        LocalGatewayVirtualInterfaceGroups:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayVirtualInterfaceGroupSet"
            - xml:
                name: localGatewayVirtualInterfaceGroupSet
              description: The virtual interface groups.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    LocalGatewayVirtualInterfaceGroupId:
      type: string
    DescribeLocalGatewayVirtualInterfacesResult:
      type: object
      properties:
        LocalGatewayVirtualInterfaces:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayVirtualInterfaceSet"
            - xml:
                name: localGatewayVirtualInterfaceSet
              description: Information about the virtual interfaces.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    LocalGatewayVirtualInterfaceId:
      type: string
    DescribeLocalGatewaysResult:
      type: object
      properties:
        LocalGateways:
          allOf:
            - $ref: "#/components/schemas/LocalGatewaySet"
            - xml:
                name: localGatewaySet
              description: Information about the local gateways.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    LocalGatewayId:
      type: string
    DescribeManagedPrefixListsResult:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        PrefixLists:
          allOf:
            - $ref: "#/components/schemas/ManagedPrefixListSet"
            - xml:
                name: prefixListSet
              description: Information about the prefix lists.
    DescribeMovingAddressesResult:
      type: object
      example:
        MovingAddressStatuses:
          - MoveStatus: MovingToVpc
            PublicIp: 198.51.100.0
      properties:
        MovingAddressStatuses:
          allOf:
            - $ref: "#/components/schemas/MovingAddressStatusSet"
            - xml:
                name: movingAddressStatusSet
              description: The status for each Elastic IP address.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeNatGatewaysResult:
      type: object
      example:
        NatGateways:
          - CreateTime: 2015-12-01T12:26:55.983Z
            NatGatewayAddresses:
              - AllocationId: eipalloc-89c620ec
                NetworkInterfaceId: eni-9dec76cd
                PrivateIp: 10.0.0.149
                PublicIp: 198.11.222.333
            NatGatewayId: nat-05dba92075d71c408
            State: available
            SubnetId: subnet-847e4dc2
            VpcId: vpc-1a2b3c4d
      properties:
        NatGateways:
          allOf:
            - $ref: "#/components/schemas/NatGatewayList"
            - xml:
                name: natGatewaySet
              description: Information about the NAT gateways.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    NatGatewayId:
      type: string
    DescribeNetworkAclsResult:
      type: object
      example:
        NetworkAcls:
          - Associations:
              - NetworkAclAssociationId: aclassoc-66ea5f0b
                NetworkAclId: acl-9aeb5ef7
                SubnetId: subnet-65ea5f08
            Entries:
              - CidrBlock: 0.0.0.0/0
                Egress: true
                Protocol: "-1"
                RuleAction: deny
                RuleNumber: 32767
              - CidrBlock: 0.0.0.0/0
                Egress: false
                Protocol: "-1"
                RuleAction: deny
                RuleNumber: 32767
            IsDefault: false
            NetworkAclId: acl-5fb85d36
            Tags: []
            VpcId: vpc-a01106c2
      properties:
        NetworkAcls:
          allOf:
            - $ref: "#/components/schemas/NetworkAclList"
            - xml:
                name: networkAclSet
              description: Information about one or more network ACLs.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    NetworkAclId:
      type: string
    DescribeNetworkInsightsAnalysesResult:
      type: object
      properties:
        NetworkInsightsAnalyses:
          allOf:
            - $ref: "#/components/schemas/NetworkInsightsAnalysisList"
            - xml:
                name: networkInsightsAnalysisSet
              description: Information about the network insights analyses.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    NetworkInsightsAnalysisId:
      type: string
    DescribeNetworkInsightsPathsResult:
      type: object
      properties:
        NetworkInsightsPaths:
          allOf:
            - $ref: "#/components/schemas/NetworkInsightsPathList"
            - xml:
                name: networkInsightsPathSet
              description: Information about the paths.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    NetworkInsightsPathId:
      type: string
    DescribeNetworkInterfaceAttributeResult:
      type: object
      example:
        NetworkInterfaceId: eni-686ea200
        SourceDestCheck:
          Value: true
      properties:
        Attachment:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceAttachment"
            - xml:
                name: attachment
              description: The attachment (if any) of the network interface.
        Description:
          allOf:
            - $ref: "#/components/schemas/AttributeValue"
            - xml:
                name: description
              description: The description of the network interface.
        Groups:
          allOf:
            - $ref: "#/components/schemas/GroupIdentifierList"
            - xml:
                name: groupSet
              description: The security groups associated with the network interface.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkInterfaceId
              description: The ID of the network interface.
        SourceDestCheck:
          allOf:
            - $ref: "#/components/schemas/AttributeBooleanValue"
            - xml:
                name: sourceDestCheck
              description: Indicates whether source/destination checking is enabled.
      description: Contains the output of DescribeNetworkInterfaceAttribute.
    DescribeNetworkInterfacePermissionsResult:
      type: object
      properties:
        NetworkInterfacePermissions:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfacePermissionList"
            - xml:
                name: networkInterfacePermissions
              description: The network interface permissions.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results.
      description: Contains the output for DescribeNetworkInterfacePermissions.
    NetworkInterfacePermissionId:
      type: string
    DescribeNetworkInterfacesResult:
      type: object
      example:
        NetworkInterfaces:
          - Association:
              AssociationId: eipassoc-0fbb766a
              IpOwnerId: "123456789012"
              PublicDnsName: ec2-203-0-113-12.compute-1.amazonaws.com
              PublicIp: 203.0.113.12
            Attachment:
              AttachTime: 2013-11-30T23:36:42.000Z
              AttachmentId: eni-attach-66c4350a
              DeleteOnTermination: false
              DeviceIndex: 1
              InstanceId: i-1234567890abcdef0
              InstanceOwnerId: "123456789012"
              Status: attached
            AvailabilityZone: us-east-1d
            Description: my network interface
            Groups:
              - GroupId: sg-8637d3e3
                GroupName: default
            MacAddress: 02:2f:8f:b0:cf:75
            NetworkInterfaceId: eni-e5aa89a3
            OwnerId: "123456789012"
            PrivateDnsName: ip-10-0-1-17.ec2.internal
            PrivateIpAddress: 10.0.1.17
            PrivateIpAddresses:
              - Association:
                  AssociationId: eipassoc-0fbb766a
                  IpOwnerId: "123456789012"
                  PublicDnsName: ec2-203-0-113-12.compute-1.amazonaws.com
                  PublicIp: 203.0.113.12
                Primary: true
                PrivateDnsName: ip-10-0-1-17.ec2.internal
                PrivateIpAddress: 10.0.1.17
            RequesterManaged: false
            SourceDestCheck: true
            Status: in-use
            SubnetId: subnet-b61f49f0
            TagSet: []
            VpcId: vpc-a01106c2
      properties:
        NetworkInterfaces:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceList"
            - xml:
                name: networkInterfaceSet
              description: Information about one or more network interfaces.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
      description: Contains the output of DescribeNetworkInterfaces.
    DescribePlacementGroupsResult:
      type: object
      properties:
        PlacementGroups:
          allOf:
            - $ref: "#/components/schemas/PlacementGroupList"
            - xml:
                name: placementGroupSet
              description: Information about the placement groups.
    PlacementGroupName:
      type: string
    PlacementGroupId:
      type: string
    DescribePrefixListsResult:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        PrefixLists:
          allOf:
            - $ref: "#/components/schemas/PrefixListSet"
            - xml:
                name: prefixListSet
              description: All available prefix lists.
    PrefixListResourceId:
      type: string
    DescribePrincipalIdFormatResult:
      type: object
      properties:
        Principals:
          allOf:
            - $ref: "#/components/schemas/PrincipalIdFormatList"
            - xml:
                name: principalSet
              description: Information about the ID format settings for the ARN.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is null when there are no more results to return.
    DescribePublicIpv4PoolsResult:
      type: object
      properties:
        PublicIpv4Pools:
          allOf:
            - $ref: "#/components/schemas/PublicIpv4PoolSet"
            - xml:
                name: publicIpv4PoolSet
              description: Information about the address pools.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    Ipv4PoolEc2Id:
      type: string
    DescribeRegionsResult:
      type: object
      example:
        Regions:
          - Endpoint: ec2.ap-south-1.amazonaws.com
            RegionName: ap-south-1
          - Endpoint: ec2.eu-west-1.amazonaws.com
            RegionName: eu-west-1
          - Endpoint: ec2.ap-southeast-1.amazonaws.com
            RegionName: ap-southeast-1
          - Endpoint: ec2.ap-southeast-2.amazonaws.com
            RegionName: ap-southeast-2
          - Endpoint: ec2.eu-central-1.amazonaws.com
            RegionName: eu-central-1
          - Endpoint: ec2.ap-northeast-2.amazonaws.com
            RegionName: ap-northeast-2
          - Endpoint: ec2.ap-northeast-1.amazonaws.com
            RegionName: ap-northeast-1
          - Endpoint: ec2.us-east-1.amazonaws.com
            RegionName: us-east-1
          - Endpoint: ec2.sa-east-1.amazonaws.com
            RegionName: sa-east-1
          - Endpoint: ec2.us-west-1.amazonaws.com
            RegionName: us-west-1
          - Endpoint: ec2.us-west-2.amazonaws.com
            RegionName: us-west-2
      properties:
        Regions:
          allOf:
            - $ref: "#/components/schemas/RegionList"
            - xml:
                name: regionInfo
              description: Information about the Regions.
    DescribeReplaceRootVolumeTasksResult:
      type: object
      properties:
        ReplaceRootVolumeTasks:
          allOf:
            - $ref: "#/components/schemas/ReplaceRootVolumeTasks"
            - xml:
                name: replaceRootVolumeTaskSet
              description: Information about the root volume replacement task.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    ReplaceRootVolumeTaskId:
      type: string
    DescribeReservedInstancesResult:
      type: object
      properties:
        ReservedInstances:
          allOf:
            - $ref: "#/components/schemas/ReservedInstancesList"
            - xml:
                name: reservedInstancesSet
              description: A list of Reserved Instances.
      description: Contains the output for DescribeReservedInstances.
    DescribeReservedInstancesListingsResult:
      type: object
      properties:
        ReservedInstancesListings:
          allOf:
            - $ref: "#/components/schemas/ReservedInstancesListingList"
            - xml:
                name: reservedInstancesListingsSet
              description: Information about the Reserved Instance listing.
      description: Contains the output of DescribeReservedInstancesListings.
    DescribeReservedInstancesModificationsResult:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        ReservedInstancesModifications:
          allOf:
            - $ref: "#/components/schemas/ReservedInstancesModificationList"
            - xml:
                name: reservedInstancesModificationsSet
              description: The Reserved Instance modification information.
      description: Contains the output of DescribeReservedInstancesModifications.
    ReservedInstancesModificationId:
      type: string
    DescribeReservedInstancesOfferingsResult:
      type: object
      properties:
        ReservedInstancesOfferings:
          allOf:
            - $ref: "#/components/schemas/ReservedInstancesOfferingList"
            - xml:
                name: reservedInstancesOfferingsSet
              description: A list of Reserved Instances offerings.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
      description: Contains the output of DescribeReservedInstancesOfferings.
    ReservedInstancesOfferingId:
      type: string
    DescribeRouteTablesResult:
      type: object
      example:
        RouteTables:
          - Associations:
              - Main: true
                RouteTableAssociationId: rtbassoc-d8ccddba
                RouteTableId: rtb-1f382e7d
            PropagatingVgws: []
            RouteTableId: rtb-1f382e7d
            Routes:
              - DestinationCidrBlock: 10.0.0.0/16
                GatewayId: local
                State: active
            Tags: []
            VpcId: vpc-a01106c2
      properties:
        RouteTables:
          allOf:
            - $ref: "#/components/schemas/RouteTableList"
            - xml:
                name: routeTableSet
              description: Information about one or more route tables.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
      description: Contains the output of DescribeRouteTables.
    DescribeScheduledInstanceAvailabilityResult:
      type: object
      example:
        ScheduledInstanceAvailabilitySet:
          - AvailabilityZone: us-west-2b
            AvailableInstanceCount: 20
            FirstSlotStartTime: 2016-01-31T00:00:00Z
            HourlyPrice: "0.095"
            InstanceType: c4.large
            MaxTermDurationInDays: 366
            MinTermDurationInDays: 366
            NetworkPlatform: EC2-VPC
            Platform: Linux/UNIX
            PurchaseToken: eyJ2IjoiMSIsInMiOjEsImMiOi...
            Recurrence:
              Frequency: Weekly
              Interval: 1
              OccurrenceDaySet:
                - 1
              OccurrenceRelativeToEnd: false
            SlotDurationInHours: 23
            TotalScheduledInstanceHours: 1219
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.
        ScheduledInstanceAvailabilitySet:
          allOf:
            - $ref: "#/components/schemas/ScheduledInstanceAvailabilitySet"
            - xml:
                name: scheduledInstanceAvailabilitySet
              description: Information about the available Scheduled Instances.
      description: Contains the output of DescribeScheduledInstanceAvailability.
    DateTime:
      type: string
      format: date-time
    OccurrenceDayRequestSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Integer"
          - xml:
              name: OccurenceDay
    DescribeScheduledInstancesResult:
      type: object
      example:
        ScheduledInstanceSet:
          - AvailabilityZone: us-west-2b
            CreateDate: 2016-01-25T21:43:38.612Z
            HourlyPrice: "0.095"
            InstanceCount: 1
            InstanceType: c4.large
            NetworkPlatform: EC2-VPC
            NextSlotStartTime: 2016-01-31T09:00:00Z
            Platform: Linux/UNIX
            Recurrence:
              Frequency: Weekly
              Interval: 1
              OccurrenceDaySet:
                - 1
              OccurrenceRelativeToEnd: false
              OccurrenceUnit: ""
            ScheduledInstanceId: sci-1234-1234-1234-1234-123456789012
            SlotDurationInHours: 32
            TermEndDate: 2017-01-31T09:00:00Z
            TermStartDate: 2016-01-31T09:00:00Z
            TotalScheduledInstanceHours: 1696
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.
        ScheduledInstanceSet:
          allOf:
            - $ref: "#/components/schemas/ScheduledInstanceSet"
            - xml:
                name: scheduledInstanceSet
              description: Information about the Scheduled Instances.
      description: Contains the output of DescribeScheduledInstances.
    ScheduledInstanceId:
      type: string
    DescribeSecurityGroupReferencesResult:
      type: object
      example:
        SecurityGroupReferenceSet:
          - GroupId: sg-903004f8
            ReferencingVpcId: vpc-1a2b3c4d
            VpcPeeringConnectionId: pcx-b04deed9
      properties:
        SecurityGroupReferenceSet:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupReferences"
            - xml:
                name: securityGroupReferenceSet
              description: Information about the VPCs with the referencing security groups.
    DescribeSecurityGroupRulesResult:
      type: object
      properties:
        SecurityGroupRules:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupRuleList"
            - xml:
                name: securityGroupRuleSet
              description: Information about security group rules.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: "The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return. "
    DescribeSecurityGroupsResult:
      type: object
      example: {}
      properties:
        SecurityGroups:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupList"
            - xml:
                name: securityGroupInfo
              description: Information about the security groups.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    SecurityGroupName:
      type: string
    DescribeSnapshotAttributeResult:
      type: object
      example:
        CreateVolumePermissions: []
        SnapshotId: snap-066877671789bd71b
      properties:
        CreateVolumePermissions:
          allOf:
            - $ref: "#/components/schemas/CreateVolumePermissionList"
            - xml:
                name: createVolumePermission
              description: The users and groups that have the permissions for creating volumes from the snapshot.
        ProductCodes:
          allOf:
            - $ref: "#/components/schemas/ProductCodeList"
            - xml:
                name: productCodes
              description: The product codes.
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: snapshotId
              description: The ID of the EBS snapshot.
    DescribeSnapshotsResult:
      type: object
      example:
        NextToken: ""
        Snapshots:
          - Description: This is my copied snapshot.
            OwnerId: 12345678910
            Progress: 87%
            SnapshotId: snap-066877671789bd71b
            StartTime: 2014-02-28T21:37:27.000Z
            State: pending
            VolumeId: vol-1234567890abcdef0
            VolumeSize: 8
      properties:
        Snapshots:
          allOf:
            - $ref: "#/components/schemas/SnapshotList"
            - xml:
                name: snapshotSet
              description: Information about the snapshots.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The <code>NextToken</code> value to include in a future <code>DescribeSnapshots</code> request. When the results of a <code>DescribeSnapshots</code> request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    SnapshotId:
      type: string
    DescribeSpotDatafeedSubscriptionResult:
      type: object
      example:
        SpotDatafeedSubscription:
          Bucket: my-s3-bucket
          OwnerId: "123456789012"
          Prefix: spotdata
          State: Active
      properties:
        SpotDatafeedSubscription:
          allOf:
            - $ref: "#/components/schemas/SpotDatafeedSubscription"
            - xml:
                name: spotDatafeedSubscription
              description: The Spot Instance data feed subscription.
      description: Contains the output of DescribeSpotDatafeedSubscription.
    DescribeSpotFleetInstancesResponse:
      type: object
      example:
        ActiveInstances:
          - InstanceId: i-1234567890abcdef0
            InstanceType: m3.medium
            SpotInstanceRequestId: sir-08b93456
        SpotFleetRequestId: sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE
      properties:
        ActiveInstances:
          allOf:
            - $ref: "#/components/schemas/ActiveInstanceSet"
            - xml:
                name: activeInstanceSet
              description: The running instances. This list is refreshed periodically and might be out of date.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.
        SpotFleetRequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: spotFleetRequestId
              description: The ID of the Spot Fleet request.
      description: Contains the output of DescribeSpotFleetInstances.
    DescribeSpotFleetRequestHistoryResponse:
      type: object
      example:
        HistoryRecords:
          - EventInformation:
              EventSubType: submitted
            EventType: fleetRequestChange
            Timestamp: 2015-05-26T23:17:20.697Z
          - EventInformation:
              EventSubType: active
            EventType: fleetRequestChange
            Timestamp: 2015-05-26T23:17:20.873Z
          - EventInformation:
              EventSubType: launched
              InstanceId: i-1234567890abcdef0
            EventType: instanceChange
            Timestamp: 2015-05-26T23:21:21.712Z
          - EventInformation:
              EventSubType: launched
              InstanceId: i-1234567890abcdef1
            EventType: instanceChange
            Timestamp: 2015-05-26T23:21:21.816Z
        NextToken: CpHNsscimcV5oH7bSbub03CI2Qms5+ypNpNm+53MNlR0YcXAkp0xFlfKf91yVxSExmbtma3awYxMFzNA663ZskT0AHtJ6TCb2Z8bQC2EnZgyELbymtWPfpZ1ZbauVg+P+TfGlWxWWB/Vr5dk5d4LfdgA/DRAHUrYgxzrEXAMPLE=
        SpotFleetRequestId: sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE
        StartTime: 2015-05-26T00:00:00Z
      properties:
        HistoryRecords:
          allOf:
            - $ref: "#/components/schemas/HistoryRecords"
            - xml:
                name: historyRecordSet
              description: Information about the events in the history of the Spot Fleet request.
        LastEvaluatedTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: lastEvaluatedTime
              description: <p>The last date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). All records up to this time were retrieved.</p> <p>If <code>nextToken</code> indicates that there are more results, this value is not present.</p>
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.
        SpotFleetRequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: spotFleetRequestId
              description: The ID of the Spot Fleet request.
        StartTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: startTime
              description: The starting date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
      description: Contains the output of DescribeSpotFleetRequestHistory.
    DescribeSpotFleetRequestsResponse:
      type: object
      example:
        SpotFleetRequestConfigs:
          - SpotFleetRequestConfig:
              IamFleetRole: arn:aws:iam::123456789012:role/my-spot-fleet-role
              LaunchSpecifications:
                - EbsOptimized: false
                  ImageId: ami-1a2b3c4d
                  InstanceType: cc2.8xlarge
                  NetworkInterfaces:
                    - AssociatePublicIpAddress: true
                      DeleteOnTermination: false
                      DeviceIndex: 0
                      SecondaryPrivateIpAddressCount: 0
                      SubnetId: subnet-a61dafcf
                - EbsOptimized: false
                  ImageId: ami-1a2b3c4d
                  InstanceType: r3.8xlarge
                  NetworkInterfaces:
                    - AssociatePublicIpAddress: true
                      DeleteOnTermination: false
                      DeviceIndex: 0
                      SecondaryPrivateIpAddressCount: 0
                      SubnetId: subnet-a61dafcf
              SpotPrice: "0.05"
              TargetCapacity: 20
            SpotFleetRequestId: sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE
            SpotFleetRequestState: active
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token required to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.
        SpotFleetRequestConfigs:
          allOf:
            - $ref: "#/components/schemas/SpotFleetRequestConfigSet"
            - xml:
                name: spotFleetRequestConfigSet
              description: Information about the configuration of your Spot Fleet.
      description: Contains the output of DescribeSpotFleetRequests.
    DescribeSpotInstanceRequestsResult:
      type: object
      example:
        SpotInstanceRequests:
          - CreateTime: 2014-04-30T18:14:55.000Z
            InstanceId: i-1234567890abcdef0
            LaunchSpecification:
              BlockDeviceMappings:
                - DeviceName: /dev/sda1
                  Ebs:
                    DeleteOnTermination: true
                    VolumeSize: 8
                    VolumeType: standard
              EbsOptimized: false
              ImageId: ami-7aba833f
              InstanceType: m1.small
              KeyName: my-key-pair
              SecurityGroups:
                - GroupId: sg-e38f24a7
                  GroupName: my-security-group
            LaunchedAvailabilityZone: us-west-1b
            ProductDescription: Linux/UNIX
            SpotInstanceRequestId: sir-08b93456
            SpotPrice: "0.010000"
            State: active
            Status:
              Code: fulfilled
              Message: Your Spot request is fulfilled.
              UpdateTime: 2014-04-30T18:16:21.000Z
            Type: one-time
      properties:
        SpotInstanceRequests:
          allOf:
            - $ref: "#/components/schemas/SpotInstanceRequestList"
            - xml:
                name: spotInstanceRequestSet
              description: One or more Spot Instance requests.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next set of results. This value is <code>null</code> when there are no more results to return.
      description: Contains the output of DescribeSpotInstanceRequests.
    DescribeSpotPriceHistoryResult:
      type: object
      example:
        SpotPriceHistory:
          - AvailabilityZone: us-west-1a
            InstanceType: m1.xlarge
            ProductDescription: Linux/UNIX (Amazon VPC)
            SpotPrice: "0.080000"
            Timestamp: 2014-01-06T04:32:53.000Z
          - AvailabilityZone: us-west-1c
            InstanceType: m1.xlarge
            ProductDescription: Linux/UNIX (Amazon VPC)
            SpotPrice: "0.080000"
            Timestamp: 2014-01-05T11:28:26.000Z
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token required to retrieve the next set of results. This value is null or an empty string when there are no more results to return.
        SpotPriceHistory:
          allOf:
            - $ref: "#/components/schemas/SpotPriceHistoryList"
            - xml:
                name: spotPriceHistorySet
              description: The historical Spot prices.
      description: Contains the output of DescribeSpotPriceHistory.
    DescribeStaleSecurityGroupsResult:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
        StaleSecurityGroupSet:
          allOf:
            - $ref: "#/components/schemas/StaleSecurityGroupSet"
            - xml:
                name: staleSecurityGroupSet
              description: Information about the stale security groups.
    DescribeStoreImageTasksResult:
      type: object
      properties:
        StoreImageTaskResults:
          allOf:
            - $ref: "#/components/schemas/StoreImageTaskResultSet"
            - xml:
                name: storeImageTaskResultSet
              description: The information about the AMI store tasks.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeSubnetsResult:
      type: object
      example:
        Subnets:
          - AvailabilityZone: us-east-1c
            AvailableIpAddressCount: 251
            CidrBlock: 10.0.1.0/24
            DefaultForAz: false
            MapPublicIpOnLaunch: false
            State: available
            SubnetId: subnet-9d4a7b6c
            VpcId: vpc-a01106c2
      properties:
        Subnets:
          allOf:
            - $ref: "#/components/schemas/SubnetList"
            - xml:
                name: subnetSet
              description: Information about one or more subnets.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeTagsResult:
      type: object
      example:
        Tags:
          - Key: Stack
            ResourceId: i-1234567890abcdef8
            ResourceType: instance
            Value: test
          - Key: Name
            ResourceId: i-1234567890abcdef8
            ResourceType: instance
            Value: Beta Server
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagDescriptionList"
            - xml:
                name: tagSet
              description: The tags.
    DescribeTrafficMirrorFiltersResult:
      type: object
      properties:
        TrafficMirrorFilters:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorFilterSet"
            - xml:
                name: trafficMirrorFilterSet
              description: Information about one or more Traffic Mirror filters.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. The value is <code>null</code> when there are no more results to return.
    TrafficMirrorFilterId:
      type: string
    DescribeTrafficMirrorSessionsResult:
      type: object
      properties:
        TrafficMirrorSessions:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorSessionSet"
            - xml:
                name: trafficMirrorSessionSet
              description: Describes one or more Traffic Mirror sessions. By default, all Traffic Mirror sessions are described. Alternatively, you can filter the results.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. The value is <code>null</code> when there are no more results to return.
    TrafficMirrorSessionId:
      type: string
    DescribeTrafficMirrorTargetsResult:
      type: object
      properties:
        TrafficMirrorTargets:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorTargetSet"
            - xml:
                name: trafficMirrorTargetSet
              description: Information about one or more Traffic Mirror targets.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. The value is <code>null</code> when there are no more results to return.
    TrafficMirrorTargetId:
      type: string
    DescribeTransitGatewayAttachmentsResult:
      type: object
      properties:
        TransitGatewayAttachments:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentList"
            - xml:
                name: transitGatewayAttachments
              description: Information about the attachments.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    TransitGatewayAttachmentId:
      type: string
    DescribeTransitGatewayConnectPeersResult:
      type: object
      properties:
        TransitGatewayConnectPeers:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayConnectPeerList"
            - xml:
                name: transitGatewayConnectPeerSet
              description: Information about the Connect peers.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    TransitGatewayConnectPeerId:
      type: string
    DescribeTransitGatewayConnectsResult:
      type: object
      properties:
        TransitGatewayConnects:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayConnectList"
            - xml:
                name: transitGatewayConnectSet
              description: Information about the Connect attachments.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeTransitGatewayMulticastDomainsResult:
      type: object
      properties:
        TransitGatewayMulticastDomains:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomainList"
            - xml:
                name: transitGatewayMulticastDomains
              description: Information about the transit gateway multicast domains.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    TransitGatewayMulticastDomainId:
      type: string
    DescribeTransitGatewayPeeringAttachmentsResult:
      type: object
      properties:
        TransitGatewayPeeringAttachments:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayPeeringAttachmentList"
            - xml:
                name: transitGatewayPeeringAttachments
              description: The transit gateway peering attachments.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeTransitGatewayRouteTablesResult:
      type: object
      properties:
        TransitGatewayRouteTables:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableList"
            - xml:
                name: transitGatewayRouteTables
              description: Information about the transit gateway route tables.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    TransitGatewayRouteTableId:
      type: string
    DescribeTransitGatewayVpcAttachmentsResult:
      type: object
      properties:
        TransitGatewayVpcAttachments:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayVpcAttachmentList"
            - xml:
                name: transitGatewayVpcAttachments
              description: Information about the VPC attachments.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeTransitGatewaysResult:
      type: object
      properties:
        TransitGateways:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayList"
            - xml:
                name: transitGatewaySet
              description: Information about the transit gateways.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    TransitGatewayId:
      type: string
    DescribeTrunkInterfaceAssociationsResult:
      type: object
      properties:
        InterfaceAssociations:
          allOf:
            - $ref: "#/components/schemas/TrunkInterfaceAssociationList"
            - xml:
                name: interfaceAssociationSet
              description: Information about the trunk associations.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    TrunkInterfaceAssociationId:
      type: string
    DescribeVolumeAttributeResult:
      type: object
      example:
        AutoEnableIO:
          Value: false
        VolumeId: vol-049df61146c4d7901
      properties:
        AutoEnableIO:
          allOf:
            - $ref: "#/components/schemas/AttributeBooleanValue"
            - xml:
                name: autoEnableIO
              description: The state of <code>autoEnableIO</code> attribute.
        ProductCodes:
          allOf:
            - $ref: "#/components/schemas/ProductCodeList"
            - xml:
                name: productCodes
              description: A list of product codes.
        VolumeId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: volumeId
              description: The ID of the volume.
    DescribeVolumeStatusResult:
      type: object
      example:
        VolumeStatuses: []
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        VolumeStatuses:
          allOf:
            - $ref: "#/components/schemas/VolumeStatusList"
            - xml:
                name: volumeStatusSet
              description: Information about the status of the volumes.
    VolumeId:
      type: string
    DescribeVolumesResult:
      type: object
      example:
        Volumes:
          - Attachments:
              - AttachTime: 2013-12-18T22:35:00.000Z
                DeleteOnTermination: true
                Device: /dev/sda1
                InstanceId: i-1234567890abcdef0
                State: attached
                VolumeId: vol-049df61146c4d7901
            AvailabilityZone: us-east-1a
            CreateTime: 2013-12-18T22:35:00.084Z
            Size: 8
            SnapshotId: snap-1234567890abcdef0
            State: in-use
            VolumeId: vol-049df61146c4d7901
            VolumeType: standard
      properties:
        Volumes:
          allOf:
            - $ref: "#/components/schemas/VolumeList"
            - xml:
                name: volumeSet
              description: Information about the volumes.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The <code>NextToken</code> value to include in a future <code>DescribeVolumes</code> request. When the results of a <code>DescribeVolumes</code> request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeVolumesModificationsResult:
      type: object
      properties:
        VolumesModifications:
          allOf:
            - $ref: "#/components/schemas/VolumeModificationList"
            - xml:
                name: volumeModificationSet
              description: Information about the volume modifications.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: "Token for pagination, null if there are no more results "
    DescribeVpcAttributeResult:
      type: object
      example:
        EnableDnsHostnames:
          Value: true
        VpcId: vpc-a01106c2
      properties:
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC.
        EnableDnsHostnames:
          allOf:
            - $ref: "#/components/schemas/AttributeBooleanValue"
            - xml:
                name: enableDnsHostnames
              description: Indicates whether the instances launched in the VPC get DNS hostnames. If this attribute is <code>true</code>, instances in the VPC get DNS hostnames; otherwise, they do not.
        EnableDnsSupport:
          allOf:
            - $ref: "#/components/schemas/AttributeBooleanValue"
            - xml:
                name: enableDnsSupport
              description: Indicates whether DNS resolution is enabled for the VPC. If this attribute is <code>true</code>, the Amazon DNS server resolves DNS hostnames for your instances to their corresponding IP addresses; otherwise, it does not.
    DescribeVpcClassicLinkResult:
      type: object
      properties:
        Vpcs:
          allOf:
            - $ref: "#/components/schemas/VpcClassicLinkList"
            - xml:
                name: vpcSet
              description: The ClassicLink status of one or more VPCs.
    VpcId:
      type: string
    DescribeVpcClassicLinkDnsSupportResult:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/DescribeVpcClassicLinkDnsSupportNextToken"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        Vpcs:
          allOf:
            - $ref: "#/components/schemas/ClassicLinkDnsSupportList"
            - xml:
                name: vpcs
              description: Information about the ClassicLink DNS support status of the VPCs.
    DescribeVpcEndpointConnectionNotificationsResult:
      type: object
      properties:
        ConnectionNotificationSet:
          allOf:
            - $ref: "#/components/schemas/ConnectionNotificationSet"
            - xml:
                name: connectionNotificationSet
              description: One or more notifications.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeVpcEndpointConnectionsResult:
      type: object
      properties:
        VpcEndpointConnections:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointConnectionSet"
            - xml:
                name: vpcEndpointConnectionSet
              description: Information about one or more VPC endpoint connections.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeVpcEndpointServiceConfigurationsResult:
      type: object
      properties:
        ServiceConfigurations:
          allOf:
            - $ref: "#/components/schemas/ServiceConfigurationSet"
            - xml:
                name: serviceConfigurationSet
              description: Information about one or more services.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeVpcEndpointServicePermissionsResult:
      type: object
      properties:
        AllowedPrincipals:
          allOf:
            - $ref: "#/components/schemas/AllowedPrincipalSet"
            - xml:
                name: allowedPrincipals
              description: Information about one or more allowed principals.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeVpcEndpointServicesResult:
      type: object
      properties:
        ServiceNames:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: serviceNameSet
              description: A list of supported services.
        ServiceDetails:
          allOf:
            - $ref: "#/components/schemas/ServiceDetailSet"
            - xml:
                name: serviceDetailSet
              description: Information about the service.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
      description: Contains the output of DescribeVpcEndpointServices.
    DescribeVpcEndpointsResult:
      type: object
      properties:
        VpcEndpoints:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointSet"
            - xml:
                name: vpcEndpointSet
              description: Information about the endpoints.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.
      description: Contains the output of DescribeVpcEndpoints.
    DescribeVpcPeeringConnectionsResult:
      type: object
      properties:
        VpcPeeringConnections:
          allOf:
            - $ref: "#/components/schemas/VpcPeeringConnectionList"
            - xml:
                name: vpcPeeringConnectionSet
              description: Information about the VPC peering connections.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    VpcPeeringConnectionId:
      type: string
    DescribeVpcsResult:
      type: object
      example:
        Vpcs:
          - CidrBlock: 10.0.0.0/16
            DhcpOptionsId: dopt-7a8b9c2d
            InstanceTenancy: default
            IsDefault: false
            State: available
            Tags:
              - Key: Name
                Value: MyVPC
            VpcId: vpc-a01106c2
      properties:
        Vpcs:
          allOf:
            - $ref: "#/components/schemas/VpcList"
            - xml:
                name: vpcSet
              description: Information about one or more VPCs.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    DescribeVpnConnectionsResult:
      type: object
      properties:
        VpnConnections:
          allOf:
            - $ref: "#/components/schemas/VpnConnectionList"
            - xml:
                name: vpnConnectionSet
              description: Information about one or more VPN connections.
      description: Contains the output of DescribeVpnConnections.
    VpnConnectionId:
      type: string
    DescribeVpnGatewaysResult:
      type: object
      properties:
        VpnGateways:
          allOf:
            - $ref: "#/components/schemas/VpnGatewayList"
            - xml:
                name: vpnGatewaySet
              description: Information about one or more virtual private gateways.
      description: Contains the output of DescribeVpnGateways.
    VpnGatewayId:
      type: string
    DetachClassicLinkVpcResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    DisableEbsEncryptionByDefaultResult:
      type: object
      properties:
        EbsEncryptionByDefault:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: ebsEncryptionByDefault
              description: The updated status of encryption by default.
    DisableFastSnapshotRestoresResult:
      type: object
      properties:
        Successful:
          allOf:
            - $ref: "#/components/schemas/DisableFastSnapshotRestoreSuccessSet"
            - xml:
                name: successful
              description: Information about the snapshots for which fast snapshot restores were successfully disabled.
        Unsuccessful:
          allOf:
            - $ref: "#/components/schemas/DisableFastSnapshotRestoreErrorSet"
            - xml:
                name: unsuccessful
              description: Information about the snapshots for which fast snapshot restores could not be disabled.
    DisableImageDeprecationResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    DisableSerialConsoleAccessResult:
      type: object
      properties:
        SerialConsoleAccessEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: serialConsoleAccessEnabled
              description: If <code>true</code>, access to the EC2 serial console of all instances is enabled for your account. If <code>false</code>, access to the EC2 serial console of all instances is disabled for your account.
    DisableTransitGatewayRouteTablePropagationResult:
      type: object
      properties:
        Propagation:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayPropagation"
            - xml:
                name: propagation
              description: Information about route propagation.
    DisableVpcClassicLinkResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    DisableVpcClassicLinkDnsSupportResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    DisassociateClientVpnTargetNetworkResult:
      type: object
      properties:
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: associationId
              description: The ID of the target network association.
        Status:
          allOf:
            - $ref: "#/components/schemas/AssociationStatus"
            - xml:
                name: status
              description: The current state of the target network association.
    DisassociateEnclaveCertificateIamRoleResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    DisassociateIamInstanceProfileResult:
      type: object
      example:
        IamInstanceProfileAssociation:
          AssociationId: iip-assoc-05020b59952902f5f
          IamInstanceProfile:
            Arn: arn:aws:iam::123456789012:instance-profile/admin-role
            Id: AIPAI5IVIHMFFYY2DKV5Y
          InstanceId: i-123456789abcde123
          State: disassociating
      properties:
        IamInstanceProfileAssociation:
          allOf:
            - $ref: "#/components/schemas/IamInstanceProfileAssociation"
            - xml:
                name: iamInstanceProfileAssociation
              description: Information about the IAM instance profile association.
    DisassociateInstanceEventWindowResult:
      type: object
      properties:
        InstanceEventWindow:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindow"
            - xml:
                name: instanceEventWindow
              description: Information about the event window.
    DisassociateSubnetCidrBlockResult:
      type: object
      properties:
        Ipv6CidrBlockAssociation:
          allOf:
            - $ref: "#/components/schemas/SubnetIpv6CidrBlockAssociation"
            - xml:
                name: ipv6CidrBlockAssociation
              description: Information about the IPv6 CIDR block association.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: subnetId
              description: The ID of the subnet.
    DisassociateTransitGatewayMulticastDomainResult:
      type: object
      properties:
        Associations:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomainAssociations"
            - xml:
                name: associations
              description: Information about the association.
    DisassociateTransitGatewayRouteTableResult:
      type: object
      properties:
        Association:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAssociation"
            - xml:
                name: association
              description: Information about the association.
    DisassociateTrunkInterfaceResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
    DisassociateVpcCidrBlockResult:
      type: object
      properties:
        Ipv6CidrBlockAssociation:
          allOf:
            - $ref: "#/components/schemas/VpcIpv6CidrBlockAssociation"
            - xml:
                name: ipv6CidrBlockAssociation
              description: Information about the IPv6 CIDR block association.
        CidrBlockAssociation:
          allOf:
            - $ref: "#/components/schemas/VpcCidrBlockAssociation"
            - xml:
                name: cidrBlockAssociation
              description: Information about the IPv4 CIDR block association.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC.
    EnableEbsEncryptionByDefaultResult:
      type: object
      properties:
        EbsEncryptionByDefault:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: ebsEncryptionByDefault
              description: The updated status of encryption by default.
    EnableFastSnapshotRestoresResult:
      type: object
      properties:
        Successful:
          allOf:
            - $ref: "#/components/schemas/EnableFastSnapshotRestoreSuccessSet"
            - xml:
                name: successful
              description: Information about the snapshots for which fast snapshot restores were successfully enabled.
        Unsuccessful:
          allOf:
            - $ref: "#/components/schemas/EnableFastSnapshotRestoreErrorSet"
            - xml:
                name: unsuccessful
              description: Information about the snapshots for which fast snapshot restores could not be enabled.
    EnableImageDeprecationResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    EnableSerialConsoleAccessResult:
      type: object
      properties:
        SerialConsoleAccessEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: serialConsoleAccessEnabled
              description: If <code>true</code>, access to the EC2 serial console of all instances is enabled for your account. If <code>false</code>, access to the EC2 serial console of all instances is disabled for your account.
    EnableTransitGatewayRouteTablePropagationResult:
      type: object
      properties:
        Propagation:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayPropagation"
            - xml:
                name: propagation
              description: Information about route propagation.
    EnableVpcClassicLinkResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    EnableVpcClassicLinkDnsSupportResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    ExportClientVpnClientCertificateRevocationListResult:
      type: object
      properties:
        CertificateRevocationList:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: certificateRevocationList
              description: Information about the client certificate revocation list.
        Status:
          allOf:
            - $ref: "#/components/schemas/ClientCertificateRevocationListStatus"
            - xml:
                name: status
              description: The current state of the client certificate revocation list.
    ExportClientVpnClientConfigurationResult:
      type: object
      properties:
        ClientConfiguration:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientConfiguration
              description: The contents of the Client VPN endpoint configuration file.
    ExportImageResult:
      type: object
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description of the image being exported.
        DiskImageFormat:
          allOf:
            - $ref: "#/components/schemas/DiskImageFormat"
            - xml:
                name: diskImageFormat
              description: The disk image format for the exported image.
        ExportImageTaskId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: exportImageTaskId
              description: The ID of the export image task.
        ImageId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: imageId
              description: The ID of the image.
        RoleName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: roleName
              description: The name of the role that grants VM Import/Export permission to export images to your Amazon S3 bucket.
        Progress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: progress
              description: The percent complete of the export image task.
        S3ExportLocation:
          allOf:
            - $ref: "#/components/schemas/ExportTaskS3Location"
            - xml:
                name: s3ExportLocation
              description: Information about the destination Amazon S3 bucket.
        Status:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: status
              description: The status of the export image task. The possible values are <code>active</code>, <code>completed</code>, <code>deleting</code>, and <code>deleted</code>.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: statusMessage
              description: The status message for the export image task.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the export image task.
    ExportTransitGatewayRoutesResult:
      type: object
      properties:
        S3Location:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: s3Location
              description: The URL of the exported file in Amazon S3. For example, s3://<i>bucket_name</i>/VPCTransitGateway/TransitGatewayRouteTables/<i>file_name</i>.
    GetAssociatedEnclaveCertificateIamRolesResult:
      type: object
      properties:
        AssociatedRoles:
          allOf:
            - $ref: "#/components/schemas/AssociatedRolesList"
            - xml:
                name: associatedRoleSet
              description: Information about the associated IAM roles.
    GetAssociatedIpv6PoolCidrsResult:
      type: object
      properties:
        Ipv6CidrAssociations:
          allOf:
            - $ref: "#/components/schemas/Ipv6CidrAssociationSet"
            - xml:
                name: ipv6CidrAssociationSet
              description: Information about the IPv6 CIDR block associations.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetCapacityReservationUsageResult:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        CapacityReservationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: capacityReservationId
              description: The ID of the Capacity Reservation.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceType
              description: The type of instance for which the Capacity Reservation reserves capacity.
        TotalInstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: totalInstanceCount
              description: The number of instances for which the Capacity Reservation reserves capacity.
        AvailableInstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: availableInstanceCount
              description: The remaining capacity. Indicates the number of instances that can be launched in the Capacity Reservation.
        State:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationState"
            - xml:
                name: state
              description: <p>The current state of the Capacity Reservation. A Capacity Reservation can be in one of the following states:</p> <ul> <li> <p> <code>active</code> - The Capacity Reservation is active and the capacity is available for your use.</p> </li> <li> <p> <code>expired</code> - The Capacity Reservation expired automatically at the date and time specified in your request. The reserved capacity is no longer available for your use.</p> </li> <li> <p> <code>cancelled</code> - The Capacity Reservation was cancelled. The reserved capacity is no longer available for your use.</p> </li> <li> <p> <code>pending</code> - The Capacity Reservation request was successful but the capacity provisioning is still pending.</p> </li> <li> <p> <code>failed</code> - The Capacity Reservation request has failed. A request might fail due to invalid request parameters, capacity constraints, or instance limit constraints. Failed requests are retained for 60 minutes.</p> </li> </ul>
        InstanceUsages:
          allOf:
            - $ref: "#/components/schemas/InstanceUsageSet"
            - xml:
                name: instanceUsageSet
              description: Information about the Capacity Reservation usage.
    GetCoipPoolUsageResult:
      type: object
      properties:
        CoipPoolId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: coipPoolId
              description: The ID of the customer-owned address pool.
        CoipAddressUsages:
          allOf:
            - $ref: "#/components/schemas/CoipAddressUsageSet"
            - xml:
                name: coipAddressUsageSet
              description: Information about the address usage.
        LocalGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: localGatewayRouteTableId
              description: The ID of the local gateway route table.
    GetConsoleOutputResult:
      type: object
      example:
        InstanceId: i-1234567890abcdef0
        Output: ...
        Timestamp: 2018-05-25T21:23:53.000Z
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance.
        Output:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: output
              description: The console output, base64-encoded. If you are using a command line tool, the tool decodes the output for you.
        Timestamp:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: timestamp
              description: The time at which the output was last updated.
    GetConsoleScreenshotResult:
      type: object
      properties:
        ImageData:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: imageData
              description: The data that comprises the image.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance.
    GetDefaultCreditSpecificationResult:
      type: object
      properties:
        InstanceFamilyCreditSpecification:
          allOf:
            - $ref: "#/components/schemas/InstanceFamilyCreditSpecification"
            - xml:
                name: instanceFamilyCreditSpecification
              description: The default credit option for CPU usage of the instance family.
    GetEbsDefaultKmsKeyIdResult:
      type: object
      properties:
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: kmsKeyId
              description: The Amazon Resource Name (ARN) of the default KMS key for encryption by default.
    GetEbsEncryptionByDefaultResult:
      type: object
      properties:
        EbsEncryptionByDefault:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: ebsEncryptionByDefault
              description: Indicates whether encryption by default is enabled.
    GetFlowLogsIntegrationTemplateResult:
      type: object
      properties:
        Result:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: result
              description: The generated CloudFormation template.
    AthenaIntegrationsSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/AthenaIntegration"
          - xml:
              name: item
      minItems: 1
      maxItems: 10
    GetGroupsForCapacityReservationResult:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        CapacityReservationGroups:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationGroupSet"
            - xml:
                name: capacityReservationGroupSet
              description: Information about the resource groups to which the Capacity Reservation has been added.
    GetHostReservationPurchasePreviewResult:
      type: object
      properties:
        CurrencyCode:
          allOf:
            - $ref: "#/components/schemas/CurrencyCodeValues"
            - xml:
                name: currencyCode
              description: The currency in which the <code>totalUpfrontPrice</code> and <code>totalHourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.
        Purchase:
          allOf:
            - $ref: "#/components/schemas/PurchaseSet"
            - xml:
                name: purchase
              description: The purchase information of the Dedicated Host reservation and the Dedicated Hosts associated with it.
        TotalHourlyPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: totalHourlyPrice
              description: The potential total hourly price of the reservation per hour.
        TotalUpfrontPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: totalUpfrontPrice
              description: The potential total upfront price. This is billed immediately.
    GetLaunchTemplateDataResult:
      type: object
      example:
        LaunchTemplateData:
          BlockDeviceMappings:
            - DeviceName: /dev/xvda
              Ebs:
                DeleteOnTermination: true
                Encrypted: false
                Iops: 100
                SnapshotId: snap-02594938353ef77d3
                VolumeSize: 8
                VolumeType: gp2
          EbsOptimized: false
          ImageId: ami-32cf7b4a
          InstanceType: t2.medium
          KeyName: my-key-pair
          Monitoring:
            Enabled: false
          NetworkInterfaces:
            - AssociatePublicIpAddress: false
              DeleteOnTermination: true
              Description: ""
              DeviceIndex: 0
              Groups:
                - sg-d14e1bb4
              Ipv6Addresses: []
              NetworkInterfaceId: eni-4338b5a9
              PrivateIpAddress: 10.0.3.233
              PrivateIpAddresses:
                - Primary: true
                  PrivateIpAddress: 10.0.3.233
              SubnetId: subnet-5264e837
          Placement:
            AvailabilityZone: us-east-2b
            GroupName: ""
            Tenancy: default
      properties:
        LaunchTemplateData:
          allOf:
            - $ref: "#/components/schemas/ResponseLaunchTemplateData"
            - xml:
                name: launchTemplateData
              description: The instance data.
    GetManagedPrefixListAssociationsResult:
      type: object
      properties:
        PrefixListAssociations:
          allOf:
            - $ref: "#/components/schemas/PrefixListAssociationSet"
            - xml:
                name: prefixListAssociationSet
              description: Information about the associations.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetManagedPrefixListEntriesResult:
      type: object
      properties:
        Entries:
          allOf:
            - $ref: "#/components/schemas/PrefixListEntrySet"
            - xml:
                name: entrySet
              description: Information about the prefix list entries.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetPasswordDataResult:
      type: object
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the Windows instance.
        PasswordData:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: passwordData
              description: The password of the instance. Returns an empty string if the password is not available.
        Timestamp:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: timestamp
              description: The time the data was last updated.
    GetReservedInstancesExchangeQuoteResult:
      type: object
      properties:
        CurrencyCode:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: currencyCode
              description: The currency of the transaction.
        IsValidExchange:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: isValidExchange
              description: If <code>true</code>, the exchange is valid. If <code>false</code>, the exchange cannot be completed.
        OutputReservedInstancesWillExpireAt:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: outputReservedInstancesWillExpireAt
              description: The new end date of the reservation term.
        PaymentDue:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: paymentDue
              description: The total true upfront charge for the exchange.
        ReservedInstanceValueRollup:
          allOf:
            - $ref: "#/components/schemas/ReservationValue"
            - xml:
                name: reservedInstanceValueRollup
              description: The cost associated with the Reserved Instance.
        ReservedInstanceValueSet:
          allOf:
            - $ref: "#/components/schemas/ReservedInstanceReservationValueSet"
            - xml:
                name: reservedInstanceValueSet
              description: The configuration of your Convertible Reserved Instances.
        TargetConfigurationValueRollup:
          allOf:
            - $ref: "#/components/schemas/ReservationValue"
            - xml:
                name: targetConfigurationValueRollup
              description: The cost associated with the Reserved Instance.
        TargetConfigurationValueSet:
          allOf:
            - $ref: "#/components/schemas/TargetReservationValueSet"
            - xml:
                name: targetConfigurationValueSet
              description: The values of the target Convertible Reserved Instances.
        ValidationFailureReason:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: validationFailureReason
              description: Describes the reason why the exchange cannot be completed.
      description: Contains the output of GetReservedInstancesExchangeQuote.
    GetSerialConsoleAccessStatusResult:
      type: object
      properties:
        SerialConsoleAccessEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: serialConsoleAccessEnabled
              description: If <code>true</code>, access to the EC2 serial console of all instances is enabled for your account. If <code>false</code>, access to the EC2 serial console of all instances is disabled for your account.
    GetSubnetCidrReservationsResult:
      type: object
      properties:
        SubnetIpv4CidrReservations:
          allOf:
            - $ref: "#/components/schemas/SubnetCidrReservationList"
            - xml:
                name: subnetIpv4CidrReservationSet
              description: Information about the IPv4 subnet CIDR reservations.
        SubnetIpv6CidrReservations:
          allOf:
            - $ref: "#/components/schemas/SubnetCidrReservationList"
            - xml:
                name: subnetIpv6CidrReservationSet
              description: Information about the IPv6 subnet CIDR reservations.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetTransitGatewayAttachmentPropagationsResult:
      type: object
      properties:
        TransitGatewayAttachmentPropagations:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentPropagationList"
            - xml:
                name: transitGatewayAttachmentPropagations
              description: Information about the propagation route tables.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetTransitGatewayMulticastDomainAssociationsResult:
      type: object
      properties:
        MulticastDomainAssociations:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomainAssociationList"
            - xml:
                name: multicastDomainAssociations
              description: Information about the multicast domain associations.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetTransitGatewayPrefixListReferencesResult:
      type: object
      properties:
        TransitGatewayPrefixListReferences:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayPrefixListReferenceSet"
            - xml:
                name: transitGatewayPrefixListReferenceSet
              description: Information about the prefix list references.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetTransitGatewayRouteTableAssociationsResult:
      type: object
      properties:
        Associations:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableAssociationList"
            - xml:
                name: associations
              description: Information about the associations.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    GetTransitGatewayRouteTablePropagationsResult:
      type: object
      properties:
        TransitGatewayRouteTablePropagations:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTablePropagationList"
            - xml:
                name: transitGatewayRouteTablePropagations
              description: Information about the route table propagations.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    ImportClientVpnClientCertificateRevocationListResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    ImportImageResult:
      type: object
      properties:
        Architecture:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: architecture
              description: The architecture of the virtual machine.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description of the import task.
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: encrypted
              description: Indicates whether the AMI is encrypted.
        Hypervisor:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: hypervisor
              description: The target hypervisor of the import task.
        ImageId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: imageId
              description: The ID of the Amazon Machine Image (AMI) created by the import task.
        ImportTaskId:
          allOf:
            - $ref: "#/components/schemas/ImportImageTaskId"
            - xml:
                name: importTaskId
              description: The task ID of the import image task.
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/KmsKeyId"
            - xml:
                name: kmsKeyId
              description: The identifier for the symmetric KMS key that was used to create the encrypted AMI.
        LicenseType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: licenseType
              description: The license type of the virtual machine.
        Platform:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: platform
              description: The operating system of the virtual machine.
        Progress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: progress
              description: The progress of the task.
        SnapshotDetails:
          allOf:
            - $ref: "#/components/schemas/SnapshotDetailList"
            - xml:
                name: snapshotDetailSet
              description: Information about the snapshots.
        Status:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: status
              description: A brief status of the task.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: statusMessage
              description: A detailed status message of the import task.
        LicenseSpecifications:
          allOf:
            - $ref: "#/components/schemas/ImportImageLicenseSpecificationListResponse"
            - xml:
                name: licenseSpecifications
              description: The ARNs of the license configurations.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the import image task.
        UsageOperation:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: usageOperation
              description: The usage operation value.
    Double:
      type: number
      format: double
    ImageDiskContainer:
      type: object
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The description of the disk image.
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The block device mapping for the disk.
        Format:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The format of the disk image being imported.</p> <p>Valid values: <code>OVA</code> | <code>VHD</code> | <code>VHDX</code> | <code>VMDK</code> | <code>RAW</code> </p>"
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/SnapshotId"
            - description: The ID of the EBS snapshot to be used for importing the snapshot.
        Url:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The URL to the Amazon S3-based disk image being imported. The URL can either be a https URL (https://..) or an Amazon S3 URL (s3://..)
        UserBucket:
          allOf:
            - $ref: "#/components/schemas/UserBucket"
            - description: The S3 bucket for the disk image.
      description: Describes the disk container object for an import image task.
    ImportImageLicenseConfigurationRequest:
      type: object
      properties:
        LicenseConfigurationArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ARN of a license configuration.
      description: The request information of license configurations.
    ImportInstanceResult:
      type: object
      properties:
        ConversionTask:
          allOf:
            - $ref: "#/components/schemas/ConversionTask"
            - xml:
                name: conversionTask
              description: Information about the conversion task.
    DiskImage:
      type: object
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A description of the disk image.
        Image:
          allOf:
            - $ref: "#/components/schemas/DiskImageDetail"
            - description: Information about the disk image.
        Volume:
          allOf:
            - $ref: "#/components/schemas/VolumeDetail"
            - description: Information about the volume.
      description: Describes a disk image.
    ArchitectureValues:
      type: string
      enum:
        - i386
        - x86_64
        - arm64
        - x86_64_mac
    Placement:
      type: object
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: <p>The Availability Zone of the instance.</p> <p>If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>
        Affinity:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: affinity
              description: <p>The affinity setting for the instance on the Dedicated Host. This parameter is not supported for the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html">ImportInstance</a> command.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>
        GroupName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupName
              description: The name of the placement group the instance is in.
        PartitionNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: partitionNumber
              description: <p>The number of the partition the instance is in. Valid only if the placement group strategy is set to <code>partition</code>.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>
        HostId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: hostId
              description: <p>The ID of the Dedicated Host on which the instance resides. This parameter is not supported for the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html">ImportInstance</a> command.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>
        Tenancy:
          allOf:
            - $ref: "#/components/schemas/Tenancy"
            - xml:
                name: tenancy
              description: <p>The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware. The <code>host</code> tenancy is not supported for the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html">ImportInstance</a> command.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p> <p>T3 instances that use the <code>unlimited</code> CPU credit option do not support <code>host</code> tenancy.</p>
        SpreadDomain:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: spreadDomain
              description: <p>Reserved for future use.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>
        HostResourceGroupArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: hostResourceGroupArn
              description: <p>The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the <b>Tenancy</b> parameter or set it to <code>host</code>.</p> <p>This parameter is not supported by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet">CreateFleet</a>.</p>
      description: Describes the placement of an instance.
    UserData:
      type: object
      properties:
        Data:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: data
              description: The user data. If you are using an Amazon Web Services SDK or command line tool, Base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide Base64-encoded text.
      description: Describes the user data for an instance.
    ImportKeyPairResult:
      type: object
      properties:
        KeyFingerprint:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: keyFingerprint
              description: The MD5 public key fingerprint as specified in section 4 of RFC 4716.
        KeyName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: keyName
              description: The key pair name that you provided.
        KeyPairId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: keyPairId
              description: The ID of the resulting key pair.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags applied to the imported key pair.
    ImportSnapshotResult:
      type: object
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description of the import snapshot task.
        ImportTaskId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: importTaskId
              description: The ID of the import snapshot task.
        SnapshotTaskDetail:
          allOf:
            - $ref: "#/components/schemas/SnapshotTaskDetail"
            - xml:
                name: snapshotTaskDetail
              description: Information about the import snapshot task.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the import snapshot task.
    UserBucket:
      type: object
      properties:
        S3Bucket:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the Amazon S3 bucket where the disk image is located.
        S3Key:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The file name of the disk image.
      description: Describes the Amazon S3 bucket for the disk image.
    ImportVolumeResult:
      type: object
      properties:
        ConversionTask:
          allOf:
            - $ref: "#/components/schemas/ConversionTask"
            - xml:
                name: conversionTask
              description: Information about the conversion task.
    ModifyAddressAttributeResult:
      type: object
      properties:
        Address:
          allOf:
            - $ref: "#/components/schemas/AddressAttribute"
            - xml:
                name: address
              description: Information about the Elastic IP address.
    ModifyAvailabilityZoneGroupResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Is <code>true</code> if the request succeeds, and an error otherwise.
    ModifyCapacityReservationResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    ModifyClientVpnEndpointResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    ValueStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: item
    ModifyDefaultCreditSpecificationResult:
      type: object
      properties:
        InstanceFamilyCreditSpecification:
          allOf:
            - $ref: "#/components/schemas/InstanceFamilyCreditSpecification"
            - xml:
                name: instanceFamilyCreditSpecification
              description: The default credit option for CPU usage of the instance family.
    ModifyEbsDefaultKmsKeyIdResult:
      type: object
      properties:
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: kmsKeyId
              description: The Amazon Resource Name (ARN) of the default KMS key for encryption by default.
    ModifyFleetResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Is <code>true</code> if the request succeeds, and an error otherwise.
    ModifyFpgaImageAttributeResult:
      type: object
      properties:
        FpgaImageAttribute:
          allOf:
            - $ref: "#/components/schemas/FpgaImageAttribute"
            - xml:
                name: fpgaImageAttribute
              description: Information about the attribute.
    LoadPermissionListRequest:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LoadPermissionRequest"
          - xml:
              name: item
    ModifyHostsResult:
      type: object
      properties:
        Successful:
          allOf:
            - $ref: "#/components/schemas/ResponseHostIdList"
            - xml:
                name: successful
              description: The IDs of the Dedicated Hosts that were successfully modified.
        Unsuccessful:
          allOf:
            - $ref: "#/components/schemas/UnsuccessfulItemList"
            - xml:
                name: unsuccessful
              description: The IDs of the Dedicated Hosts that could not be modified. Check whether the setting you requested can be used.
    LaunchPermissionList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LaunchPermission"
          - xml:
              name: item
    InstanceBlockDeviceMappingSpecification:
      type: object
      properties:
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: deviceName
              description: The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).
        Ebs:
          allOf:
            - $ref: "#/components/schemas/EbsInstanceBlockDeviceSpecification"
            - xml:
                name: ebs
              description: Parameters used to automatically set up EBS volumes when the instance is launched.
        NoDevice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: noDevice
              description: suppress the specified device included in the block device mapping.
        VirtualName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: virtualName
              description: The virtual device name.
      description: Describes a block device mapping entry.
    Blob:
      type: string
    ModifyInstanceCapacityReservationAttributesResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    CapacityReservationPreference:
      type: string
      enum:
        - open
        - none
    CapacityReservationTarget:
      type: object
      properties:
        CapacityReservationId:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationId"
            - description: The ID of the Capacity Reservation in which to run the instance.
        CapacityReservationResourceGroupArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ARN of the Capacity Reservation resource group in which to run the instance.
      description: Describes a target Capacity Reservation or Capacity Reservation group.
    ModifyInstanceCreditSpecificationResult:
      type: object
      properties:
        SuccessfulInstanceCreditSpecifications:
          allOf:
            - $ref: "#/components/schemas/SuccessfulInstanceCreditSpecificationSet"
            - xml:
                name: successfulInstanceCreditSpecificationSet
              description: Information about the instances whose credit option for CPU usage was successfully modified.
        UnsuccessfulInstanceCreditSpecifications:
          allOf:
            - $ref: "#/components/schemas/UnsuccessfulInstanceCreditSpecificationSet"
            - xml:
                name: unsuccessfulInstanceCreditSpecificationSet
              description: Information about the instances whose credit option for CPU usage was not modified.
    InstanceCreditSpecificationRequest:
      type: object
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - description: The ID of the instance.
        CpuCredits:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The credit option for CPU usage of the instance. Valid values are <code>standard</code> and <code>unlimited</code>.</p> <p>T3 instances with <code>host</code> tenancy do not support the <code>unlimited</code> CPU credit option.</p>
      description: Describes the credit option for CPU usage of a burstable performance instance.
    ModifyInstanceEventStartTimeResult:
      type: object
      properties:
        Event:
          allOf:
            - $ref: "#/components/schemas/InstanceStatusEvent"
            - xml:
                name: event
    ModifyInstanceEventWindowResult:
      type: object
      properties:
        InstanceEventWindow:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindow"
            - xml:
                name: instanceEventWindow
              description: Information about the event window.
    ModifyInstanceMetadataOptionsResult:
      type: object
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance.
        InstanceMetadataOptions:
          allOf:
            - $ref: "#/components/schemas/InstanceMetadataOptionsResponse"
            - xml:
                name: instanceMetadataOptions
              description: The metadata options for the instance.
    ModifyInstancePlacementResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Is <code>true</code> if the request succeeds, and an error otherwise.
    ModifyLaunchTemplateResult:
      type: object
      example:
        LaunchTemplate:
          CreateTime: 2017-12-01T13:35:46.000Z
          CreatedBy: arn:aws:iam::123456789012:root
          DefaultVersionNumber: 2
          LatestVersionNumber: 2
          LaunchTemplateId: lt-0abcd290751193123
          LaunchTemplateName: WebServers
      properties:
        LaunchTemplate:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplate"
            - xml:
                name: launchTemplate
              description: Information about the launch template.
    ModifyManagedPrefixListResult:
      type: object
      properties:
        PrefixList:
          allOf:
            - $ref: "#/components/schemas/ManagedPrefixList"
            - xml:
                name: prefixList
              description: Information about the prefix list.
    RemovePrefixListEntry:
      type: object
      required:
        - Cidr
      properties:
        Cidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The CIDR block.
      description: An entry for a prefix list.
    NetworkInterfaceAttachmentId:
      type: string
    ModifyReservedInstancesResult:
      type: object
      properties:
        ReservedInstancesModificationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: reservedInstancesModificationId
              description: The ID for the modification.
      description: Contains the output of ModifyReservedInstances.
    ReservedInstancesConfiguration:
      type: object
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone for the modified Reserved Instances.
        InstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: instanceCount
              description: <p>The number of modified Reserved Instances.</p> <note> <p>This is a required field for a request.</p> </note>
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/InstanceType"
            - xml:
                name: instanceType
              description: The instance type for the modified Reserved Instances.
        Platform:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: platform
              description: The network platform of the modified Reserved Instances, which is either EC2-Classic or EC2-VPC.
        Scope:
          allOf:
            - $ref: "#/components/schemas/scope"
            - xml:
                name: scope
              description: Whether the Reserved Instance is applied to instances in a Region or instances in a specific Availability Zone.
      description: Describes the configuration settings for the modified Reserved Instances.
    ModifySecurityGroupRulesResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, returns an error.
    SecurityGroupRuleUpdate:
      type: object
      properties:
        SecurityGroupRuleId:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupRuleId"
            - description: The ID of the security group rule.
        SecurityGroupRule:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupRuleRequest"
            - description: Information about the security group rule.
      description: Describes an update to a security group rule.
    CreateVolumePermissionList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/CreateVolumePermission"
          - xml:
              name: item
    ModifySpotFleetRequestResponse:
      type: object
      example:
        Return: true
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Is <code>true</code> if the request succeeds, and an error otherwise.
      description: Contains the output of ModifySpotFleetRequest.
    LaunchTemplateConfig:
      type: object
      properties:
        LaunchTemplateSpecification:
          allOf:
            - $ref: "#/components/schemas/FleetLaunchTemplateSpecification"
            - xml:
                name: launchTemplateSpecification
              description: The launch template.
        Overrides:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateOverridesList"
            - xml:
                name: overrides
              description: Any parameters that you specify override the same parameters in the launch template.
      description: Describes a launch template and overrides.
    ModifyTrafficMirrorFilterNetworkServicesResult:
      type: object
      properties:
        TrafficMirrorFilter:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorFilter"
            - xml:
                name: trafficMirrorFilter
              description: The Traffic Mirror filter that the network service is associated with.
    TrafficMirrorNetworkService:
      type: string
      enum:
        - amazon-dns
    ModifyTrafficMirrorFilterRuleResult:
      type: object
      properties:
        TrafficMirrorFilterRule:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorFilterRule"
            - xml:
                name: trafficMirrorFilterRule
              description: Modifies a Traffic Mirror rule.
    TrafficMirrorFilterRuleField:
      type: string
      enum:
        - destination-port-range
        - source-port-range
        - protocol
        - description
    ModifyTrafficMirrorSessionResult:
      type: object
      properties:
        TrafficMirrorSession:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorSession"
            - xml:
                name: trafficMirrorSession
              description: Information about the Traffic Mirror session.
    TrafficMirrorSessionField:
      type: string
      enum:
        - packet-length
        - description
        - virtual-network-id
    ModifyTransitGatewayResult:
      type: object
      properties:
        TransitGateway:
          allOf:
            - $ref: "#/components/schemas/TransitGateway"
            - xml:
                name: transitGateway
    ModifyTransitGatewayPrefixListReferenceResult:
      type: object
      properties:
        TransitGatewayPrefixListReference:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayPrefixListReference"
            - xml:
                name: transitGatewayPrefixListReference
              description: Information about the prefix list reference.
    ModifyTransitGatewayVpcAttachmentResult:
      type: object
      properties:
        TransitGatewayVpcAttachment:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayVpcAttachment"
            - xml:
                name: transitGatewayVpcAttachment
              description: Information about the modified attachment.
    ModifyVolumeResult:
      type: object
      properties:
        VolumeModification:
          allOf:
            - $ref: "#/components/schemas/VolumeModification"
            - xml:
                name: volumeModification
              description: Information about the volume modification.
    ModifyVpcEndpointResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    ModifyVpcEndpointConnectionNotificationResult:
      type: object
      properties:
        ReturnValue:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    ModifyVpcEndpointServiceConfigurationResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    ModifyVpcEndpointServicePermissionsResult:
      type: object
      properties:
        ReturnValue:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    ModifyVpcPeeringConnectionOptionsResult:
      type: object
      properties:
        AccepterPeeringConnectionOptions:
          allOf:
            - $ref: "#/components/schemas/PeeringConnectionOptions"
            - xml:
                name: accepterPeeringConnectionOptions
              description: Information about the VPC peering connection options for the accepter VPC.
        RequesterPeeringConnectionOptions:
          allOf:
            - $ref: "#/components/schemas/PeeringConnectionOptions"
            - xml:
                name: requesterPeeringConnectionOptions
              description: Information about the VPC peering connection options for the requester VPC.
    ModifyVpcTenancyResult:
      type: object
      properties:
        ReturnValue:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, returns an error.
    ModifyVpnConnectionResult:
      type: object
      properties:
        VpnConnection:
          allOf:
            - $ref: "#/components/schemas/VpnConnection"
            - xml:
                name: vpnConnection
    ModifyVpnConnectionOptionsResult:
      type: object
      properties:
        VpnConnection:
          allOf:
            - $ref: "#/components/schemas/VpnConnection"
            - xml:
                name: vpnConnection
    ModifyVpnTunnelCertificateResult:
      type: object
      properties:
        VpnConnection:
          allOf:
            - $ref: "#/components/schemas/VpnConnection"
            - xml:
                name: vpnConnection
    ModifyVpnTunnelOptionsResult:
      type: object
      properties:
        VpnConnection:
          allOf:
            - $ref: "#/components/schemas/VpnConnection"
            - xml:
                name: vpnConnection
    Phase1EncryptionAlgorithmsRequestList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Phase1EncryptionAlgorithmsRequestListValue"
          - xml:
              name: item
    Phase2EncryptionAlgorithmsRequestList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Phase2EncryptionAlgorithmsRequestListValue"
          - xml:
              name: item
    Phase1IntegrityAlgorithmsRequestList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Phase1IntegrityAlgorithmsRequestListValue"
          - xml:
              name: item
    Phase2IntegrityAlgorithmsRequestList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Phase2IntegrityAlgorithmsRequestListValue"
          - xml:
              name: item
    Phase1DHGroupNumbersRequestList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Phase1DHGroupNumbersRequestListValue"
          - xml:
              name: item
    Phase2DHGroupNumbersRequestList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Phase2DHGroupNumbersRequestListValue"
          - xml:
              name: item
    IKEVersionsRequestList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/IKEVersionsRequestListValue"
          - xml:
              name: item
    MonitorInstancesResult:
      type: object
      properties:
        InstanceMonitorings:
          allOf:
            - $ref: "#/components/schemas/InstanceMonitoringList"
            - xml:
                name: instancesSet
              description: The monitoring information.
    MoveAddressToVpcResult:
      type: object
      example:
        Status: MoveInProgress
      properties:
        AllocationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: allocationId
              description: The allocation ID for the Elastic IP address.
        Status:
          allOf:
            - $ref: "#/components/schemas/Status"
            - xml:
                name: status
              description: The status of the move of the IP address.
    ProvisionByoipCidrResult:
      type: object
      properties:
        ByoipCidr:
          allOf:
            - $ref: "#/components/schemas/ByoipCidr"
            - xml:
                name: byoipCidr
              description: Information about the address range.
    PurchaseHostReservationResult:
      type: object
      properties:
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
        CurrencyCode:
          allOf:
            - $ref: "#/components/schemas/CurrencyCodeValues"
            - xml:
                name: currencyCode
              description: The currency in which the <code>totalUpfrontPrice</code> and <code>totalHourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.
        Purchase:
          allOf:
            - $ref: "#/components/schemas/PurchaseSet"
            - xml:
                name: purchase
              description: Describes the details of the purchase.
        TotalHourlyPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: totalHourlyPrice
              description: The total hourly price of the reservation calculated per hour.
        TotalUpfrontPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: totalUpfrontPrice
              description: The total amount charged to your account when you purchase the reservation.
    PurchaseReservedInstancesOfferingResult:
      type: object
      properties:
        ReservedInstancesId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: reservedInstancesId
              description: The IDs of the purchased Reserved Instances. If your purchase crosses into a discounted pricing tier, the final Reserved Instances IDs might change. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-reserved-instances-application.html#crossing-pricing-tiers">Crossing pricing tiers</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
      description: Contains the output of PurchaseReservedInstancesOffering.
    CurrencyCodeValues:
      type: string
      enum:
        - USD
    PurchaseScheduledInstancesResult:
      type: object
      example:
        ScheduledInstanceSet:
          - AvailabilityZone: us-west-2b
            CreateDate: 2016-01-25T21:43:38.612Z
            HourlyPrice: "0.095"
            InstanceCount: 1
            InstanceType: c4.large
            NetworkPlatform: EC2-VPC
            NextSlotStartTime: 2016-01-31T09:00:00Z
            Platform: Linux/UNIX
            Recurrence:
              Frequency: Weekly
              Interval: 1
              OccurrenceDaySet:
                - 1
              OccurrenceRelativeToEnd: false
              OccurrenceUnit: ""
            ScheduledInstanceId: sci-1234-1234-1234-1234-123456789012
            SlotDurationInHours: 32
            TermEndDate: 2017-01-31T09:00:00Z
            TermStartDate: 2016-01-31T09:00:00Z
            TotalScheduledInstanceHours: 1696
      properties:
        ScheduledInstanceSet:
          allOf:
            - $ref: "#/components/schemas/PurchasedScheduledInstanceSet"
            - xml:
                name: scheduledInstanceSet
              description: Information about the Scheduled Instances.
      description: Contains the output of PurchaseScheduledInstances.
    PurchaseRequest:
      type: object
      required:
        - InstanceCount
        - PurchaseToken
      properties:
        InstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of instances.
        PurchaseToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The purchase token.
      description: Describes a request to purchase Scheduled Instances.
    RegisterImageResult:
      type: object
      properties:
        ImageId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: imageId
              description: The ID of the newly registered AMI.
      description: Contains the output of RegisterImage.
    RegisterInstanceEventNotificationAttributesResult:
      type: object
      properties:
        InstanceTagAttribute:
          allOf:
            - $ref: "#/components/schemas/InstanceTagNotificationAttribute"
            - xml:
                name: instanceTagAttribute
              description: The resulting set of tag keys.
    RegisterTransitGatewayMulticastGroupMembersResult:
      type: object
      properties:
        RegisteredMulticastGroupMembers:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastRegisteredGroupMembers"
            - xml:
                name: registeredMulticastGroupMembers
              description: Information about the registered transit gateway multicast group members.
    RegisterTransitGatewayMulticastGroupSourcesResult:
      type: object
      properties:
        RegisteredMulticastGroupSources:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastRegisteredGroupSources"
            - xml:
                name: registeredMulticastGroupSources
              description: Information about the transit gateway multicast group sources.
    RejectTransitGatewayMulticastDomainAssociationsResult:
      type: object
      properties:
        Associations:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomainAssociations"
            - xml:
                name: associations
    RejectTransitGatewayPeeringAttachmentResult:
      type: object
      properties:
        TransitGatewayPeeringAttachment:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayPeeringAttachment"
            - xml:
                name: transitGatewayPeeringAttachment
              description: The transit gateway peering attachment.
    RejectTransitGatewayVpcAttachmentResult:
      type: object
      properties:
        TransitGatewayVpcAttachment:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayVpcAttachment"
            - xml:
                name: transitGatewayVpcAttachment
              description: Information about the attachment.
    RejectVpcEndpointConnectionsResult:
      type: object
      properties:
        Unsuccessful:
          allOf:
            - $ref: "#/components/schemas/UnsuccessfulItemSet"
            - xml:
                name: unsuccessful
              description: Information about the endpoints that were not rejected, if applicable.
    RejectVpcPeeringConnectionResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    ReleaseHostsResult:
      type: object
      properties:
        Successful:
          allOf:
            - $ref: "#/components/schemas/ResponseHostIdList"
            - xml:
                name: successful
              description: The IDs of the Dedicated Hosts that were successfully released.
        Unsuccessful:
          allOf:
            - $ref: "#/components/schemas/UnsuccessfulItemList"
            - xml:
                name: unsuccessful
              description: The IDs of the Dedicated Hosts that could not be released, including an error message.
    ReplaceIamInstanceProfileAssociationResult:
      type: object
      properties:
        IamInstanceProfileAssociation:
          allOf:
            - $ref: "#/components/schemas/IamInstanceProfileAssociation"
            - xml:
                name: iamInstanceProfileAssociation
              description: Information about the IAM instance profile association.
    ReplaceNetworkAclAssociationResult:
      type: object
      example:
        NewAssociationId: aclassoc-3999875b
      properties:
        NewAssociationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: newAssociationId
              description: The ID of the new association.
    ReplaceRouteTableAssociationResult:
      type: object
      example:
        NewAssociationId: rtbassoc-3a1f0f58
      properties:
        NewAssociationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: newAssociationId
              description: The ID of the new association.
        AssociationState:
          allOf:
            - $ref: "#/components/schemas/RouteTableAssociationState"
            - xml:
                name: associationState
              description: The state of the association.
    ReplaceTransitGatewayRouteResult:
      type: object
      properties:
        Route:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRoute"
            - xml:
                name: route
              description: Information about the modified route.
    ReportInstanceReasonCodes:
      type: string
      enum:
        - instance-stuck-in-state
        - unresponsive
        - not-accepting-credentials
        - password-not-available
        - performance-network
        - performance-instance-store
        - performance-ebs-volume
        - performance-other
        - other
    RequestSpotFleetResponse:
      type: object
      example:
        SpotFleetRequestId: sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE
      properties:
        SpotFleetRequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: spotFleetRequestId
              description: The ID of the Spot Fleet request.
      description: Contains the output of RequestSpotFleet.
    AllocationStrategy:
      type: string
      enum:
        - lowestPrice
        - diversified
        - capacityOptimized
        - capacityOptimizedPrioritized
    OnDemandAllocationStrategy:
      type: string
      enum:
        - lowestPrice
        - prioritized
    SpotMaintenanceStrategies:
      type: object
      properties:
        CapacityRebalance:
          allOf:
            - $ref: "#/components/schemas/SpotCapacityRebalance"
            - xml:
                name: capacityRebalance
              description: The strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted.
      description: The strategies for managing your Spot Instances that are at an elevated risk of being interrupted.
    ExcessCapacityTerminationPolicy:
      type: string
      enum:
        - noTermination
        - default
    LaunchSpecsList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SpotFleetLaunchSpecification"
          - xml:
              name: item
    LaunchTemplateConfigList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LaunchTemplateConfig"
          - xml:
              name: item
    FleetType:
      type: string
      enum:
        - request
        - maintain
        - instant
    InstanceInterruptionBehavior:
      type: string
      enum:
        - hibernate
        - stop
        - terminate
    LoadBalancersConfig:
      type: object
      properties:
        ClassicLoadBalancersConfig:
          allOf:
            - $ref: "#/components/schemas/ClassicLoadBalancersConfig"
            - xml:
                name: classicLoadBalancersConfig
              description: The Classic Load Balancers.
        TargetGroupsConfig:
          allOf:
            - $ref: "#/components/schemas/TargetGroupsConfig"
            - xml:
                name: targetGroupsConfig
              description: The target groups.
      description: Describes the Classic Load Balancers and target groups to attach to a Spot Fleet request.
    TagSpecificationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TagSpecification"
          - xml:
              name: item
    RequestSpotInstancesResult:
      type: object
      properties:
        SpotInstanceRequests:
          allOf:
            - $ref: "#/components/schemas/SpotInstanceRequestList"
            - xml:
                name: spotInstanceRequestSet
              description: One or more Spot Instance requests.
      description: Contains the output of RequestSpotInstances.
    RequestSpotLaunchSpecificationSecurityGroupIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SecurityGroupId"
          - xml:
              name: item
    RequestSpotLaunchSpecificationSecurityGroupList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: item
    BlockDeviceMappingList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/BlockDeviceMapping"
          - xml:
              name: item
    IamInstanceProfileSpecification:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: arn
              description: The Amazon Resource Name (ARN) of the instance profile.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: name
              description: The name of the instance profile.
      description: Describes an IAM instance profile.
    RunInstancesMonitoringEnabled:
      type: object
      required:
        - Enabled
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: enabled
              description: Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
      description: Describes the monitoring of an instance.
    InstanceNetworkInterfaceSpecificationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceNetworkInterfaceSpecification"
          - xml:
              name: item
    SpotPlacement:
      type: object
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: <p>The Availability Zone.</p> <p>[Spot Fleet only] To specify multiple Availability Zones, separate them using commas; for example, "us-west-2a, us-west-2b".</p>
        GroupName:
          allOf:
            - $ref: "#/components/schemas/PlacementGroupName"
            - xml:
                name: groupName
              description: The name of the placement group.
        Tenancy:
          allOf:
            - $ref: "#/components/schemas/Tenancy"
            - xml:
                name: tenancy
              description: The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware. The <code>host</code> tenancy is not supported for Spot Instances.
      description: Describes Spot Instance placement.
    ResetAddressAttributeResult:
      type: object
      properties:
        Address:
          allOf:
            - $ref: "#/components/schemas/AddressAttribute"
            - xml:
                name: address
              description: Information about the IP address.
    ResetEbsDefaultKmsKeyIdResult:
      type: object
      properties:
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: kmsKeyId
              description: The Amazon Resource Name (ARN) of the default KMS key for EBS encryption by default.
    ResetFpgaImageAttributeResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Is <code>true</code> if the request succeeds, and an error otherwise.
    RestoreAddressToClassicResult:
      type: object
      example:
        PublicIp: 198.51.100.0
        Status: MoveInProgress
      properties:
        PublicIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: publicIp
              description: The Elastic IP address.
        Status:
          allOf:
            - $ref: "#/components/schemas/Status"
            - xml:
                name: status
              description: The move status for the IP address.
    RestoreManagedPrefixListVersionResult:
      type: object
      properties:
        PrefixList:
          allOf:
            - $ref: "#/components/schemas/ManagedPrefixList"
            - xml:
                name: prefixList
              description: Information about the prefix list.
    RevokeClientVpnIngressResult:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/ClientVpnAuthorizationRuleStatus"
            - xml:
                name: status
              description: The current state of the authorization rule.
    RevokeSecurityGroupEgressResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, returns an error.
        UnknownIpPermissions:
          allOf:
            - $ref: "#/components/schemas/IpPermissionList"
            - xml:
                name: unknownIpPermissionSet
              description: "The outbound rules that were unknown to the service. In some cases, <code>unknownIpPermissionSet</code> might be in a different format from the request parameter. "
    RevokeSecurityGroupIngressResult:
      type: object
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, returns an error.
        UnknownIpPermissions:
          allOf:
            - $ref: "#/components/schemas/IpPermissionList"
            - xml:
                name: unknownIpPermissionSet
              description: "The inbound rules that were unknown to the service. In some cases, <code>unknownIpPermissionSet</code> might be in a different format from the request parameter. "
    Reservation:
      type: object
      example: {}
      properties:
        Groups:
          allOf:
            - $ref: "#/components/schemas/GroupIdentifierList"
            - xml:
                name: groupSet
              description: "[EC2-Classic only] The security groups."
        Instances:
          allOf:
            - $ref: "#/components/schemas/InstanceList"
            - xml:
                name: instancesSet
              description: The instances.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the Amazon Web Services account that owns the reservation.
        RequesterId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: requesterId
              description: The ID of the requester that launched the instances on your behalf (for example, Amazon Web Services Management Console or Auto Scaling).
        ReservationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: reservationId
              description: The ID of the reservation.
      description: Describes a launch request for one or more instances, and includes owner, requester, and security group information that applies to all instances in the launch request.
    Tenancy:
      type: string
      enum:
        - default
        - dedicated
        - host
    InstanceNetworkInterfaceSpecification:
      type: object
      properties:
        AssociatePublicIpAddress:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: associatePublicIpAddress
              description: Indicates whether to assign a public IPv4 address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is <code>true</code>.
        DeleteOnTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: deleteOnTermination
              description: If set to <code>true</code>, the interface is deleted when the instance is terminated. You can specify <code>true</code> only if creating a new network interface when launching an instance.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: The description of the network interface. Applies only if creating a network interface when launching an instance.
        DeviceIndex:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: deviceIndex
              description: <p>The position of the network interface in the attachment order. A primary network interface has a device index of 0.</p> <p>If you specify a network interface when launching an instance, you must specify the device index.</p>
        Groups:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupIdStringList"
            - xml:
                name: SecurityGroupId
              description: The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance.
        Ipv6AddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: ipv6AddressCount
              description: A number of IPv6 addresses to assign to the network interface. Amazon EC2 chooses the IPv6 addresses from the range of the subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch.
        Ipv6Addresses:
          allOf:
            - $ref: "#/components/schemas/InstanceIpv6AddressList"
            - xml:
                name: ipv6AddressesSet
              description: One or more IPv6 addresses to assign to the network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkInterfaceId
              description: <p>The ID of the network interface.</p> <p>If you are creating a Spot Fleet, omit this parameter because you can’t specify a network interface ID in a launch specification.</p>
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateIpAddress
              description: The private IPv4 address of the network interface. Applies only if creating a network interface when launching an instance. You cannot specify this option if you're launching more than one instance in a <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html">RunInstances</a> request.
        PrivateIpAddresses:
          allOf:
            - $ref: "#/components/schemas/PrivateIpAddressSpecificationList"
            - xml:
                name: privateIpAddressesSet
              description: One or more private IPv4 addresses to assign to the network interface. Only one private IPv4 address can be designated as primary. You cannot specify this option if you're launching more than one instance in a <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html">RunInstances</a> request.
        SecondaryPrivateIpAddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: secondaryPrivateIpAddressCount
              description: The number of secondary private IPv4 addresses. You can't specify this option and specify more than one private IP address using the private IP addresses option. You cannot specify this option if you're launching more than one instance in a <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html">RunInstances</a> request.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: subnetId
              description: The ID of the subnet associated with the network interface. Applies only if creating a network interface when launching an instance.
        AssociateCarrierIpAddress:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>Indicates whether to assign a carrier IP address to the network interface.</p> <p>You can only assign a carrier IP address to a network interface that is in a subnet in a Wavelength Zone. For more information about carrier IP addresses, see Carrier IP addresses in the Amazon Web Services Wavelength Developer Guide.</p>
        InterfaceType:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: '<p>The type of network interface.</p> <p>To create an Elastic Fabric Adapter (EFA), specify <code>efa</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/efa.html">Elastic Fabric Adapter</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Valid values: <code>interface</code> | <code>efa</code> </p>'
        NetworkCardIndex:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.</p> <p>If you are using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html">RequestSpotInstances</a> to create Spot Instances, omit this parameter because you can’t specify the network card index when using this API. To specify the network card index, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html">RunInstances</a>.</p>
        Ipv4Prefixes:
          allOf:
            - $ref: "#/components/schemas/Ipv4PrefixList"
            - xml:
                name: Ipv4Prefix
              description: One or more IPv4 delegated prefixes to be assigned to the network interface. You cannot use this option if you use the <code>Ipv4PrefixCount</code> option.
        Ipv4PrefixCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of IPv4 delegated prefixes to be automatically assigned to the network interface. You cannot use this option if you use the <code>Ipv4Prefix</code> option.
        Ipv6Prefixes:
          allOf:
            - $ref: "#/components/schemas/Ipv6PrefixList"
            - xml:
                name: Ipv6Prefix
              description: One or more IPv6 delegated prefixes to be assigned to the network interface. You cannot use this option if you use the <code>Ipv6PrefixCount</code> option.
        Ipv6PrefixCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of IPv6 delegated prefixes to be automatically assigned to the network interface. You cannot use this option if you use the <code>Ipv6Prefix</code> option.
      description: Describes a network interface.
    ElasticGpuSpecification:
      type: object
      required:
        - Type
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The type of Elastic Graphics accelerator. For more information about the values to specify for <code>Type</code>, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html#elastic-graphics-basics">Elastic Graphics Basics</a>, specifically the Elastic Graphics accelerator column, in the <i>Amazon Elastic Compute Cloud User Guide for Windows Instances</i>.
      description: A specification for an Elastic Graphics accelerator.
    ElasticInferenceAccelerator:
      type: object
      required:
        - Type
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: " The type of elastic inference accelerator. The possible values are <code>eia1.medium</code>, <code>eia1.large</code>, <code>eia1.xlarge</code>, <code>eia2.medium</code>, <code>eia2.large</code>, and <code>eia2.xlarge</code>. "
        Count:
          allOf:
            - $ref: "#/components/schemas/ElasticInferenceAcceleratorCount"
            - description: "<p> The number of elastic inference accelerators to attach to the instance. </p> <p>Default: 1</p>"
      description: " Describes an elastic inference accelerator. "
    MarketType:
      type: string
      enum:
        - spot
    SpotMarketOptions:
      type: object
      properties:
        MaxPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The maximum hourly price you're willing to pay for the Spot Instances. The default is the On-Demand price.
        SpotInstanceType:
          allOf:
            - $ref: "#/components/schemas/SpotInstanceType"
            - description: The Spot Instance request type. For <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances">RunInstances</a>, persistent Spot Instance requests are only supported when the instance interruption behavior is either <code>hibernate</code> or <code>stop</code>.
        BlockDurationMinutes:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: Deprecated.
        ValidUntil:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: <p>The end date of the request, in UTC format (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). Supported only for persistent requests.</p> <ul> <li> <p>For a persistent request, the request remains active until the <code>ValidUntil</code> date and time is reached. Otherwise, the request remains active until you cancel it.</p> </li> <li> <p>For a one-time request, <code>ValidUntil</code> is not supported. The request remains active until all instances launch or you cancel the request.</p> </li> </ul>
        InstanceInterruptionBehavior:
          allOf:
            - $ref: "#/components/schemas/InstanceInterruptionBehavior"
            - description: The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>.
      description: The options for Spot Instances.
    LicenseConfigurationRequest:
      type: object
      properties:
        LicenseConfigurationArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Resource Name (ARN) of the license configuration.
      description: Describes a license configuration.
    HttpTokensState:
      type: string
      enum:
        - optional
        - required
    InstanceMetadataEndpointState:
      type: string
      enum:
        - disabled
        - enabled
    InstanceMetadataProtocolState:
      type: string
      enum:
        - disabled
        - enabled
    RunScheduledInstancesResult:
      type: object
      example:
        InstanceIdSet:
          - i-1234567890abcdef0
      properties:
        InstanceIdSet:
          allOf:
            - $ref: "#/components/schemas/InstanceIdSet"
            - xml:
                name: instanceIdSet
              description: The IDs of the newly launched instances.
      description: Contains the output of RunScheduledInstances.
    ScheduledInstancesBlockDeviceMappingSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ScheduledInstancesBlockDeviceMapping"
          - xml:
              name: BlockDeviceMapping
    ScheduledInstancesIamInstanceProfile:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Resource Name (ARN).
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name.
      description: Describes an IAM instance profile for a Scheduled Instance.
    ScheduledInstancesMonitoring:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether monitoring is enabled.
      description: Describes whether monitoring is enabled for a Scheduled Instance.
    ScheduledInstancesNetworkInterfaceSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ScheduledInstancesNetworkInterface"
          - xml:
              name: NetworkInterface
    ScheduledInstancesPlacement:
      type: object
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Availability Zone.
        GroupName:
          allOf:
            - $ref: "#/components/schemas/PlacementGroupName"
            - description: The name of the placement group.
      description: Describes the placement for a Scheduled Instance.
    ScheduledInstancesSecurityGroupIdSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SecurityGroupId"
          - xml:
              name: SecurityGroupId
    SearchLocalGatewayRoutesResult:
      type: object
      properties:
        Routes:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRouteList"
            - xml:
                name: routeSet
              description: Information about the routes.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    SearchTransitGatewayMulticastGroupsResult:
      type: object
      properties:
        MulticastGroups:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastGroupList"
            - xml:
                name: multicastGroups
              description: Information about the transit gateway multicast group.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
    SearchTransitGatewayRoutesResult:
      type: object
      properties:
        Routes:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteList"
            - xml:
                name: routeSet
              description: Information about the routes.
        AdditionalRoutesAvailable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: additionalRoutesAvailable
              description: Indicates whether there are additional routes available.
    StartInstancesResult:
      type: object
      example:
        StartingInstances:
          - CurrentState:
              Code: 0
              Name: pending
            InstanceId: i-1234567890abcdef0
            PreviousState:
              Code: 80
              Name: stopped
      properties:
        StartingInstances:
          allOf:
            - $ref: "#/components/schemas/InstanceStateChangeList"
            - xml:
                name: instancesSet
              description: Information about the started instances.
    StartNetworkInsightsAnalysisResult:
      type: object
      properties:
        NetworkInsightsAnalysis:
          allOf:
            - $ref: "#/components/schemas/NetworkInsightsAnalysis"
            - xml:
                name: networkInsightsAnalysis
              description: Information about the network insights analysis.
    ResourceArn:
      type: string
      minLength: 1
      maxLength: 1283
    StartVpcEndpointServicePrivateDnsVerificationResult:
      type: object
      properties:
        ReturnValue:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, it returns an error.
    StopInstancesResult:
      type: object
      example:
        StoppingInstances:
          - CurrentState:
              Code: 64
              Name: stopping
            InstanceId: i-1234567890abcdef0
            PreviousState:
              Code: 16
              Name: running
      properties:
        StoppingInstances:
          allOf:
            - $ref: "#/components/schemas/InstanceStateChangeList"
            - xml:
                name: instancesSet
              description: Information about the stopped instances.
    TerminateClientVpnConnectionsResult:
      type: object
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientVpnEndpointId
              description: The ID of the Client VPN endpoint.
        Username:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: username
              description: The user who established the terminated client connections.
        ConnectionStatuses:
          allOf:
            - $ref: "#/components/schemas/TerminateConnectionStatusSet"
            - xml:
                name: connectionStatuses
              description: The current state of the client connections.
    TerminateInstancesResult:
      type: object
      example:
        TerminatingInstances:
          - CurrentState:
              Code: 32
              Name: shutting-down
            InstanceId: i-1234567890abcdef0
            PreviousState:
              Code: 16
              Name: running
      properties:
        TerminatingInstances:
          allOf:
            - $ref: "#/components/schemas/InstanceStateChangeList"
            - xml:
                name: instancesSet
              description: Information about the terminated instances.
    UnassignIpv6AddressesResult:
      type: object
      properties:
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkInterfaceId
              description: The ID of the network interface.
        UnassignedIpv6Addresses:
          allOf:
            - $ref: "#/components/schemas/Ipv6AddressList"
            - xml:
                name: unassignedIpv6Addresses
              description: The IPv6 addresses that have been unassigned from the network interface.
        UnassignedIpv6Prefixes:
          allOf:
            - $ref: "#/components/schemas/IpPrefixList"
            - xml:
                name: unassignedIpv6PrefixSet
              description: The IPv4 prefixes that have been unassigned from the network interface.
    UnmonitorInstancesResult:
      type: object
      properties:
        InstanceMonitorings:
          allOf:
            - $ref: "#/components/schemas/InstanceMonitoringList"
            - xml:
                name: instancesSet
              description: The monitoring information.
    UpdateSecurityGroupRuleDescriptionsEgressResult:
      type: object
      example: {}
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, returns an error.
    SecurityGroupRuleDescription:
      type: object
      properties:
        SecurityGroupRuleId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the security group rule.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The description of the security group rule.
      description: <p>Describes the description of a security group rule.</p> <p>You can use this when you want to update the security group rule description for either an inbound or outbound rule.</p>
    UpdateSecurityGroupRuleDescriptionsIngressResult:
      type: object
      example: {}
      properties:
        Return:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: return
              description: Returns <code>true</code> if the request succeeds; otherwise, returns an error.
    WithdrawByoipCidrResult:
      type: object
      properties:
        ByoipCidr:
          allOf:
            - $ref: "#/components/schemas/ByoipCidr"
            - xml:
                name: byoipCidr
              description: Information about the address pool.
    ReservedInstanceIdSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ReservationId"
          - xml:
              name: ReservedInstanceId
    TargetConfigurationRequestSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TargetConfigurationRequest"
          - xml:
              name: TargetConfigurationRequest
    AcceptReservedInstancesExchangeQuoteRequest:
      type: object
      required:
        - ReservedInstanceIds
      title: AcceptReservedInstancesExchangeQuoteRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ReservedInstanceIds:
          allOf:
            - $ref: "#/components/schemas/ReservedInstanceIdSet"
            - xml:
                name: ReservedInstanceId
              description: The IDs of the Convertible Reserved Instances to exchange for another Convertible Reserved Instance of the same or higher value.
        TargetConfigurations:
          allOf:
            - $ref: "#/components/schemas/TargetConfigurationRequestSet"
            - xml:
                name: TargetConfiguration
              description: The configuration of the target Convertible Reserved Instance to exchange for your current Convertible Reserved Instances.
      description: Contains the parameters for accepting the quote.
    AcceptTransitGatewayMulticastDomainAssociationsRequest:
      type: object
      title: AcceptTransitGatewayMulticastDomainAssociationsRequest
      properties:
        TransitGatewayMulticastDomainId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomainId"
            - description: The ID of the transit gateway multicast domain.
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the transit gateway attachment.
        SubnetIds:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - description: The IDs of the subnets to associate with the transit gateway multicast domain.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayMulticastDomainAssociations:
      type: object
      properties:
        TransitGatewayMulticastDomainId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayMulticastDomainId
              description: The ID of the transit gateway multicast domain.
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayAttachmentId
              description: The ID of the transit gateway attachment.
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resourceId
              description: The ID of the resource.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentResourceType"
            - xml:
                name: resourceType
              description: The type of resource, for example a VPC attachment.
        ResourceOwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resourceOwnerId
              description: " The ID of the Amazon Web Services account that owns the resource."
        Subnets:
          allOf:
            - $ref: "#/components/schemas/SubnetAssociationList"
            - xml:
                name: subnets
              description: The subnets associated with the multicast domain.
      description: Describes the multicast domain associations.
    AcceptTransitGatewayPeeringAttachmentRequest:
      type: object
      required:
        - TransitGatewayAttachmentId
      title: AcceptTransitGatewayPeeringAttachmentRequest
      properties:
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the transit gateway attachment.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayPeeringAttachment:
      type: object
      properties:
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayAttachmentId
              description: The ID of the transit gateway peering attachment.
        RequesterTgwInfo:
          allOf:
            - $ref: "#/components/schemas/PeeringTgwInfo"
            - xml:
                name: requesterTgwInfo
              description: Information about the requester transit gateway.
        AccepterTgwInfo:
          allOf:
            - $ref: "#/components/schemas/PeeringTgwInfo"
            - xml:
                name: accepterTgwInfo
              description: Information about the accepter transit gateway.
        Status:
          allOf:
            - $ref: "#/components/schemas/PeeringAttachmentStatus"
            - xml:
                name: status
              description: The status of the transit gateway peering attachment.
        State:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentState"
            - xml:
                name: state
              description: The state of the transit gateway peering attachment. Note that the <code>initiating</code> state has been deprecated.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: creationTime
              description: The time the transit gateway peering attachment was created.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags for the transit gateway peering attachment.
      description: Describes the transit gateway peering attachment.
    AcceptTransitGatewayVpcAttachmentRequest:
      type: object
      required:
        - TransitGatewayAttachmentId
      title: AcceptTransitGatewayVpcAttachmentRequest
      properties:
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the attachment.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayVpcAttachment:
      type: object
      properties:
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayAttachmentId
              description: The ID of the attachment.
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayId
              description: The ID of the transit gateway.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC.
        VpcOwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcOwnerId
              description: The ID of the Amazon Web Services account that owns the VPC.
        State:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentState"
            - xml:
                name: state
              description: The state of the VPC attachment. Note that the <code>initiating</code> state has been deprecated.
        SubnetIds:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: subnetIds
              description: The IDs of the subnets.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: creationTime
              description: The creation time.
        Options:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayVpcAttachmentOptions"
            - xml:
                name: options
              description: The VPC attachment options.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags for the VPC attachment.
      description: Describes a VPC attachment.
    VpcEndpointIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VpcEndpointId"
          - xml:
              name: item
    AcceptVpcEndpointConnectionsRequest:
      type: object
      required:
        - ServiceId
        - VpcEndpointIds
      title: AcceptVpcEndpointConnectionsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ServiceId:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointServiceId"
            - description: The ID of the VPC endpoint service.
        VpcEndpointIds:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointIdList"
            - xml:
                name: VpcEndpointId
              description: The IDs of one or more interface VPC endpoints.
    UnsuccessfulItemSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/UnsuccessfulItem"
          - xml:
              name: item
    AcceptVpcPeeringConnectionRequest:
      type: object
      title: AcceptVpcPeeringConnectionRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        VpcPeeringConnectionId:
          allOf:
            - $ref: "#/components/schemas/VpcPeeringConnectionId"
            - xml:
                name: vpcPeeringConnectionId
              description: The ID of the VPC peering connection. You must specify this parameter in the request.
    VpcPeeringConnection:
      type: object
      properties:
        AccepterVpcInfo:
          allOf:
            - $ref: "#/components/schemas/VpcPeeringConnectionVpcInfo"
            - xml:
                name: accepterVpcInfo
              description: Information about the accepter VPC. CIDR block information is only returned when describing an active VPC peering connection.
        ExpirationTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: expirationTime
              description: The time that an unaccepted VPC peering connection will expire.
        RequesterVpcInfo:
          allOf:
            - $ref: "#/components/schemas/VpcPeeringConnectionVpcInfo"
            - xml:
                name: requesterVpcInfo
              description: Information about the requester VPC. CIDR block information is only returned when describing an active VPC peering connection.
        Status:
          allOf:
            - $ref: "#/components/schemas/VpcPeeringConnectionStateReason"
            - xml:
                name: status
              description: The status of the VPC peering connection.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the resource.
        VpcPeeringConnectionId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcPeeringConnectionId
              description: The ID of the VPC peering connection.
      description: Describes a VPC peering connection.
    AccountAttributeValueList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/AccountAttributeValue"
          - xml:
              name: item
    AccountAttribute:
      type: object
      properties:
        AttributeName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: attributeName
              description: The name of the account attribute.
        AttributeValues:
          allOf:
            - $ref: "#/components/schemas/AccountAttributeValueList"
            - xml:
                name: attributeValueSet
              description: The values for the account attribute.
      description: Describes an account attribute.
    AccountAttributeList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/AccountAttribute"
          - xml:
              name: item
    AccountAttributeNameStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/AccountAttributeName"
          - xml:
              name: attributeName
    AccountAttributeValue:
      type: object
      properties:
        AttributeValue:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: attributeValue
              description: The value of the attribute.
      description: Describes a value of an account attribute.
    InstanceHealthStatus:
      type: string
      enum:
        - healthy
        - unhealthy
    ActiveInstance:
      type: object
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceType
              description: The instance type.
        SpotInstanceRequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: spotInstanceRequestId
              description: The ID of the Spot Instance request.
        InstanceHealth:
          allOf:
            - $ref: "#/components/schemas/InstanceHealthStatus"
            - xml:
                name: instanceHealth
              description: The health status of the instance. If the status of either the instance status check or the system status check is <code>impaired</code>, the health status of the instance is <code>unhealthy</code>. Otherwise, the health status is <code>healthy</code>.
      description: Describes a running instance in a Spot Fleet.
    ActiveInstanceSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ActiveInstance"
          - xml:
              name: item
    ActivityStatus:
      type: string
      enum:
        - error
        - pending_fulfillment
        - pending_termination
        - fulfilled
    AddPrefixListEntries:
      type: array
      items:
        $ref: "#/components/schemas/AddPrefixListEntry"
      minItems: 0
      maxItems: 100
    DomainType:
      type: string
      enum:
        - vpc
        - standard
    Address:
      type: object
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance that the address is associated with (if any).
        PublicIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: publicIp
              description: The Elastic IP address.
        AllocationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: allocationId
              description: The ID representing the allocation of the address for use with EC2-VPC.
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: associationId
              description: The ID representing the association of the address with an instance in a VPC.
        Domain:
          allOf:
            - $ref: "#/components/schemas/DomainType"
            - xml:
                name: domain
              description: Indicates whether this Elastic IP address is for use with instances in EC2-Classic (<code>standard</code>) or instances in a VPC (<code>vpc</code>).
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkInterfaceId
              description: The ID of the network interface.
        NetworkInterfaceOwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkInterfaceOwnerId
              description: The ID of the Amazon Web Services account that owns the network interface.
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateIpAddress
              description: The private IP address associated with the Elastic IP address.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the Elastic IP address.
        PublicIpv4Pool:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: publicIpv4Pool
              description: The ID of an address pool.
        NetworkBorderGroup:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkBorderGroup
              description: "The name of the unique set of Availability Zones, Local Zones, or Wavelength Zones from which AWS advertises IP addresses. "
        CustomerOwnedIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: customerOwnedIp
              description: The customer-owned IP address.
        CustomerOwnedIpv4Pool:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: customerOwnedIpv4Pool
              description: The ID of the customer-owned address pool.
        CarrierIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: carrierIp
              description: "The carrier IP address associated. This option is only available for network interfaces which reside in a subnet in a Wavelength Zone (for example an EC2 instance). "
      description: Describes an Elastic IP address, or a carrier IP address.
    PublicIpAddress:
      type: string
    PtrUpdateStatus:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: value
              description: The value for the PTR record update.
        Status:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: status
              description: The status of the PTR record update.
        Reason:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: reason
              description: The reason for the PTR record update.
      description: The status of an updated pointer (PTR) record for an Elastic IP address.
    AddressAttribute:
      type: object
      properties:
        PublicIp:
          allOf:
            - $ref: "#/components/schemas/PublicIpAddress"
            - xml:
                name: publicIp
              description: The public IP address.
        AllocationId:
          allOf:
            - $ref: "#/components/schemas/AllocationId"
            - xml:
                name: allocationId
              description: "[EC2-VPC] The allocation ID."
        PtrRecord:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ptrRecord
              description: The pointer (PTR) record for the IP address.
        PtrRecordUpdate:
          allOf:
            - $ref: "#/components/schemas/PtrUpdateStatus"
            - xml:
                name: ptrRecordUpdate
              description: The updated PTR record for the IP address.
      description: The attributes associated with an Elastic IP address.
    AddressAttributeName:
      type: string
      enum:
        - domain-name
    AddressList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Address"
          - xml:
              name: item
    AddressMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    AddressSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/AddressAttribute"
          - xml:
              name: item
    AdvertiseByoipCidrRequest:
      type: object
      required:
        - Cidr
      title: AdvertiseByoipCidrRequest
      properties:
        Cidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The address range, in CIDR notation. This must be the exact range that you provisioned. You can't advertise only a portion of the provisioned range.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ByoipCidr:
      type: object
      properties:
        Cidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cidr
              description: The address range, in CIDR notation.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: The description of the address range.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: statusMessage
              description: Upon success, contains the ID of the address pool. Otherwise, contains an error message.
        State:
          allOf:
            - $ref: "#/components/schemas/ByoipCidrState"
            - xml:
                name: state
              description: The state of the address pool.
      description: Information about an address range that is provisioned for use with your Amazon Web Services resources through bring your own IP addresses (BYOIP).
    Affinity:
      type: string
      enum:
        - default
        - host
    AllocateAddressRequest:
      type: object
      title: AllocateAddressRequest
      properties:
        Domain:
          allOf:
            - $ref: "#/components/schemas/DomainType"
            - description: "<p>Indicates whether the Elastic IP address is for use with instances in a VPC or instances in EC2-Classic.</p> <p>Default: If the Region supports EC2-Classic, the default is <code>standard</code>. Otherwise, the default is <code>vpc</code>.</p>"
        Address:
          allOf:
            - $ref: "#/components/schemas/PublicIpAddress"
            - description: "[EC2-VPC] The Elastic IP address to recover or an IPv4 address from an address pool."
        PublicIpv4Pool:
          allOf:
            - $ref: "#/components/schemas/Ipv4PoolEc2Id"
            - description: The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool. To specify a specific address from the address pool, use the <code>Address</code> parameter instead.
        NetworkBorderGroup:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p> A unique set of Availability Zones, Local Zones, or Wavelength Zones from which AWS advertises IP addresses. Use this parameter to limit the IP address to this location. IP addresses cannot move between network border groups.</p> <p>Use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeAvailabilityZones.html">DescribeAvailabilityZones</a> to view the network border groups.</p> <note> <p>You cannot use a network border group with EC2 Classic. If you attempt this operation on EC2 classic, you will receive an <code>InvalidParameterCombination</code> error. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html">Error Codes</a>.</p> </note>
        CustomerOwnedIpv4Pool:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of a customer-owned address pool. Use this parameter to let Amazon EC2 select an address from the address pool. Alternatively, specify a specific address from the address pool.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to assign to the Elastic IP address.
    AutoPlacement:
      type: string
      enum:
        - on
        - off
    HostRecovery:
      type: string
      enum:
        - on
        - off
    AllocateHostsRequest:
      type: object
      required:
        - AvailabilityZone
        - Quantity
      title: AllocateHostsRequest
      properties:
        AutoPlacement:
          allOf:
            - $ref: "#/components/schemas/AutoPlacement"
            - xml:
                name: autoPlacement
              description: '<p>Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/how-dedicated-hosts-work.html#dedicated-hosts-understanding"> Understanding auto-placement and affinity</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>Default: <code>on</code> </p>'
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone in which to allocate the Dedicated Host.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceType
              description: <p>Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only.</p> <p>If you want the Dedicated Hosts to support multiple instance types in a specific instance family, omit this parameter and specify <b>InstanceFamily</b> instead. You cannot specify <b>InstanceType</b> and <b>InstanceFamily</b> in the same request.</p>
        InstanceFamily:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>Specifies the instance family to be supported by the Dedicated Hosts. If you specify an instance family, the Dedicated Hosts support multiple instance types within that instance family.</p> <p>If you want the Dedicated Hosts to support a specific instance type only, omit this parameter and specify <b>InstanceType</b> instead. You cannot specify <b>InstanceFamily</b> and <b>InstanceType</b> in the same request.</p>
        Quantity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: quantity
              description: The number of Dedicated Hosts to allocate to your account with these parameters.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the Dedicated Host during creation.
        HostRecovery:
          allOf:
            - $ref: "#/components/schemas/HostRecovery"
            - description: '<p>Indicates whether to enable or disable host recovery for the Dedicated Host. Host recovery is disabled by default. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-recovery.html"> Host recovery</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>Default: <code>off</code> </p>'
    ResponseHostIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: item
    AllocationIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/AllocationId"
          - xml:
              name: AllocationId
    AllocationIds:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/AllocationId"
          - xml:
              name: item
    AllocationState:
      type: string
      enum:
        - available
        - under-assessment
        - permanent-failure
        - released
        - released-permanent-failure
        - pending
    PrincipalType:
      type: string
      enum:
        - All
        - Service
        - OrganizationUnit
        - Account
        - User
        - Role
    AllowedPrincipal:
      type: object
      properties:
        PrincipalType:
          allOf:
            - $ref: "#/components/schemas/PrincipalType"
            - xml:
                name: principalType
              description: The type of principal.
        Principal:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: principal
              description: The Amazon Resource Name (ARN) of the principal.
      description: Describes a principal.
    AllowedPrincipalSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/AllowedPrincipal"
          - xml:
              name: item
    AllowsMultipleInstanceTypes:
      type: string
      enum:
        - on
        - off
    AlternatePathHint:
      type: object
      properties:
        ComponentId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: componentId
              description: The ID of the component.
        ComponentArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: componentArn
              description: The Amazon Resource Name (ARN) of the component.
      description: Describes an potential intermediate component of a feasible path.
    AlternatePathHintList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/AlternatePathHint"
          - xml:
              name: item
    PortRange:
      type: object
      properties:
        From:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: from
              description: The first port in the range.
        To:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: to
              description: The last port in the range.
      description: Describes a range of ports.
    AnalysisAclRule:
      type: object
      properties:
        Cidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cidr
              description: The IPv4 address range, in CIDR notation.
        Egress:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: egress
              description: Indicates whether the rule is an outbound rule.
        PortRange:
          allOf:
            - $ref: "#/components/schemas/PortRange"
            - xml:
                name: portRange
              description: The range of ports.
        Protocol:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: protocol
              description: The protocol.
        RuleAction:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ruleAction
              description: Indicates whether to allow or deny traffic that matches the rule.
        RuleNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: ruleNumber
              description: The rule number.
      description: Describes a network access control (ACL) rule.
    AnalysisComponent:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: id
              description: The ID of the component.
        Arn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: arn
              description: The Amazon Resource Name (ARN) of the component.
      description: Describes a path component.
    AnalysisComponentList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/AnalysisComponent"
          - xml:
              name: item
    Port:
      type: integer
      minimum: 1
      maximum: 65535
    AnalysisLoadBalancerListener:
      type: object
      properties:
        LoadBalancerPort:
          allOf:
            - $ref: "#/components/schemas/Port"
            - xml:
                name: loadBalancerPort
              description: The port on which the load balancer is listening.
        InstancePort:
          allOf:
            - $ref: "#/components/schemas/Port"
            - xml:
                name: instancePort
              description: "[Classic Load Balancers] The back-end port for the listener."
      description: Describes a load balancer listener.
    IpAddress:
      type: string
      pattern: ^([0-9]{1,3}.){3}[0-9]{1,3}$
      minLength: 0
      maxLength: 15
    AnalysisLoadBalancerTarget:
      type: object
      properties:
        Address:
          allOf:
            - $ref: "#/components/schemas/IpAddress"
            - xml:
                name: address
              description: The IP address.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone.
        Instance:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: instance
              description: Information about the instance.
        Port:
          allOf:
            - $ref: "#/components/schemas/Port"
            - xml:
                name: port
              description: The port on which the target is listening.
      description: Describes a load balancer target.
    IpAddressList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/IpAddress"
          - xml:
              name: item
    PortRangeList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PortRange"
          - xml:
              name: item
    AnalysisPacketHeader:
      type: object
      properties:
        DestinationAddresses:
          allOf:
            - $ref: "#/components/schemas/IpAddressList"
            - xml:
                name: destinationAddressSet
              description: The destination addresses.
        DestinationPortRanges:
          allOf:
            - $ref: "#/components/schemas/PortRangeList"
            - xml:
                name: destinationPortRangeSet
              description: The destination port ranges.
        Protocol:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: protocol
              description: The protocol.
        SourceAddresses:
          allOf:
            - $ref: "#/components/schemas/IpAddressList"
            - xml:
                name: sourceAddressSet
              description: The source addresses.
        SourcePortRanges:
          allOf:
            - $ref: "#/components/schemas/PortRangeList"
            - xml:
                name: sourcePortRangeSet
              description: The source port ranges.
      description: Describes a header. Reflects any changes made by a component as traffic passes through. The fields of an inbound header are null except for the first component of a path.
    AnalysisRouteTableRoute:
      type: object
      properties:
        DestinationCidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: destinationCidr
              description: The destination IPv4 address, in CIDR notation.
        DestinationPrefixListId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: destinationPrefixListId
              description: The prefix of the Amazon Web Service.
        EgressOnlyInternetGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: egressOnlyInternetGatewayId
              description: The ID of an egress-only internet gateway.
        GatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: gatewayId
              description: The ID of the gateway, such as an internet gateway or virtual private gateway.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance, such as a NAT instance.
        NatGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: natGatewayId
              description: The ID of a NAT gateway.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkInterfaceId
              description: The ID of a network interface.
        Origin:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: origin
              description: <p>Describes how the route was created. The following are possible values:</p> <ul> <li> <p> <code>CreateRouteTable</code> - The route was automatically created when the route table was created.</p> </li> <li> <p> <code>CreateRoute</code> - The route was manually added to the route table.</p> </li> <li> <p> <code>EnableVgwRoutePropagation</code> - The route was propagated by route propagation.</p> </li> </ul>
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayId
              description: The ID of a transit gateway.
        VpcPeeringConnectionId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcPeeringConnectionId
              description: The ID of a VPC peering connection.
      description: Describes a route table route.
    AnalysisSecurityGroupRule:
      type: object
      properties:
        Cidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cidr
              description: The IPv4 address range, in CIDR notation.
        Direction:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: direction
              description: <p>The direction. The following are possible values:</p> <ul> <li> <p>egress</p> </li> <li> <p>ingress</p> </li> </ul>
        SecurityGroupId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: securityGroupId
              description: The security group ID.
        PortRange:
          allOf:
            - $ref: "#/components/schemas/PortRange"
            - xml:
                name: portRange
              description: The port range.
        PrefixListId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: prefixListId
              description: The prefix list ID.
        Protocol:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: protocol
              description: The protocol name.
      description: Describes a security group rule.
    AnalysisStatus:
      type: string
      enum:
        - running
        - succeeded
        - failed
    ClientVpnSecurityGroupIdSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SecurityGroupId"
          - xml:
              name: item
    ApplySecurityGroupsToClientVpnTargetNetworkRequest:
      type: object
      required:
        - ClientVpnEndpointId
        - VpcId
        - SecurityGroupIds
      title: ApplySecurityGroupsToClientVpnTargetNetworkRequest
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointId"
            - description: The ID of the Client VPN endpoint.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - description: The ID of the VPC in which the associated target network is located.
        SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/ClientVpnSecurityGroupIdSet"
            - xml:
                name: SecurityGroupId
              description: The IDs of the security groups to apply to the associated target network. Up to 5 security groups can be applied to an associated target network.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ArchitectureType:
      type: string
      enum:
        - i386
        - x86_64
        - arm64
    ArchitectureTypeList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ArchitectureType"
          - xml:
              name: item
    ArnList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ResourceArn"
          - xml:
              name: item
    Ipv6AddressList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: item
    IpPrefixList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: item
    AssignIpv6AddressesRequest:
      type: object
      required:
        - NetworkInterfaceId
      title: AssignIpv6AddressesRequest
      properties:
        Ipv6AddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: ipv6AddressCount
              description: The number of additional IPv6 addresses to assign to the network interface. The specified number of IPv6 addresses are assigned in addition to the existing IPv6 addresses that are already assigned to the network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can't use this option if specifying specific IPv6 addresses.
        Ipv6Addresses:
          allOf:
            - $ref: "#/components/schemas/Ipv6AddressList"
            - xml:
                name: ipv6Addresses
              description: One or more specific IPv6 addresses to be assigned to the network interface. You can't use this option if you're specifying a number of IPv6 addresses.
        Ipv6PrefixCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of IPv6 prefixes that Amazon Web Services automatically assigns to the network interface. You cannot use this option if you use the <code>Ipv6Prefixes</code> option.
        Ipv6Prefixes:
          allOf:
            - $ref: "#/components/schemas/IpPrefixList"
            - xml:
                name: Ipv6Prefix
              description: One or more IPv6 prefixes assigned to the network interface. You cannot use this option if you use the <code>Ipv6PrefixCount</code> option.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceId"
            - xml:
                name: networkInterfaceId
              description: The ID of the network interface.
    PrivateIpAddressStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: PrivateIpAddress
    AssignPrivateIpAddressesRequest:
      type: object
      required:
        - NetworkInterfaceId
      title: AssignPrivateIpAddressesRequest
      properties:
        AllowReassignment:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: allowReassignment
              description: Indicates whether to allow an IP address that is already assigned to another network interface or instance to be reassigned to the specified network interface.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceId"
            - xml:
                name: networkInterfaceId
              description: The ID of the network interface.
        PrivateIpAddresses:
          allOf:
            - $ref: "#/components/schemas/PrivateIpAddressStringList"
            - xml:
                name: privateIpAddress
              description: <p>One or more IP addresses to be assigned as a secondary private IP address to the network interface. You can't specify this parameter when also specifying a number of secondary IP addresses.</p> <p>If you don't specify an IP address, Amazon EC2 automatically selects an IP address within the subnet range.</p>
        SecondaryPrivateIpAddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: secondaryPrivateIpAddressCount
              description: The number of secondary IP addresses to assign to the network interface. You can't specify this parameter when also specifying private IP addresses.
        Ipv4Prefixes:
          allOf:
            - $ref: "#/components/schemas/IpPrefixList"
            - xml:
                name: Ipv4Prefix
              description: One or more IPv4 prefixes assigned to the network interface. You cannot use this option if you use the <code>Ipv4PrefixCount</code> option.
        Ipv4PrefixCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of IPv4 prefixes that Amazon Web Services automatically assigns to the network interface. You cannot use this option if you use the <code>Ipv4 Prefixes</code> option.
      description: Contains the parameters for AssignPrivateIpAddresses.
    AssignedPrivateIpAddressList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/AssignedPrivateIpAddress"
          - xml:
              name: item
    Ipv4PrefixesList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Ipv4PrefixSpecification"
          - xml:
              name: item
    AssignedPrivateIpAddress:
      type: object
      properties:
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateIpAddress
              description: The private IP address assigned to the network interface.
      description: Describes the private IP addresses assigned to a network interface.
    AssociateAddressRequest:
      type: object
      title: AssociateAddressRequest
      properties:
        AllocationId:
          allOf:
            - $ref: "#/components/schemas/AllocationId"
            - description: "[EC2-VPC] The allocation ID. This is required for EC2-VPC."
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - description: The ID of the instance. The instance must have exactly one attached network interface. For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. For EC2-Classic, you must specify an instance ID and the instance must be in the running state.
        PublicIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "[EC2-Classic] The Elastic IP address to associate with the instance. This is required for EC2-Classic."
        AllowReassociation:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: allowReassociation
              description: "[EC2-VPC] For a VPC in an EC2-Classic account, specify true to allow an Elastic IP address that is already associated with an instance or network interface to be reassociated with the specified instance or network interface. Otherwise, the operation fails. In a VPC in an EC2-VPC-only account, reassociation is automatic, therefore you can specify false to ensure the operation fails if the Elastic IP address is already associated with another resource."
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceId"
            - xml:
                name: networkInterfaceId
              description: <p>[EC2-VPC] The ID of the network interface. If the instance has more than one network interface, you must specify a network interface ID.</p> <p>For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. </p>
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateIpAddress
              description: "[EC2-VPC] The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address."
    AssociateClientVpnTargetNetworkRequest:
      type: object
      required:
        - ClientVpnEndpointId
        - SubnetId
      title: AssociateClientVpnTargetNetworkRequest
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointId"
            - description: The ID of the Client VPN endpoint.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - description: The ID of the subnet to associate with the Client VPN endpoint.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    AssociationStatus:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/AssociationStatusCode"
            - xml:
                name: code
              description: The state of the target network association.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: A message about the status of the target network association, if applicable.
      description: Describes the state of a target network association.
    DefaultingDhcpOptionsId:
      type: string
    AssociateDhcpOptionsRequest:
      type: object
      required:
        - DhcpOptionsId
        - VpcId
      title: AssociateDhcpOptionsRequest
      properties:
        DhcpOptionsId:
          allOf:
            - $ref: "#/components/schemas/DefaultingDhcpOptionsId"
            - description: The ID of the DHCP options set, or <code>default</code> to associate no DHCP options with the VPC.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - description: The ID of the VPC.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    AssociateEnclaveCertificateIamRoleRequest:
      type: object
      title: AssociateEnclaveCertificateIamRoleRequest
      properties:
        CertificateArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The ARN of the ACM certificate with which to associate the IAM role.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The ARN of the IAM role to associate with the ACM certificate. You can associate up to 16 IAM roles with an ACM certificate.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    AssociateIamInstanceProfileRequest:
      type: object
      required:
        - IamInstanceProfile
        - InstanceId
      title: AssociateIamInstanceProfileRequest
      properties:
        IamInstanceProfile:
          allOf:
            - $ref: "#/components/schemas/IamInstanceProfileSpecification"
            - description: The IAM instance profile.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - description: The ID of the instance.
    IamInstanceProfileAssociation:
      type: object
      properties:
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: associationId
              description: The ID of the association.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance.
        IamInstanceProfile:
          allOf:
            - $ref: "#/components/schemas/IamInstanceProfile"
            - xml:
                name: iamInstanceProfile
              description: The IAM instance profile.
        State:
          allOf:
            - $ref: "#/components/schemas/IamInstanceProfileAssociationState"
            - xml:
                name: state
              description: The state of the association.
        Timestamp:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: timestamp
              description: The time the IAM instance profile was associated with the instance.
      description: Describes an association between an IAM instance profile and an instance.
    InstanceEventWindowAssociationRequest:
      type: object
      properties:
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIdList"
            - xml:
                name: InstanceId
              description: The IDs of the instances to associate with the event window. If the instance is on a Dedicated Host, you can't specify the Instance ID parameter; you must use the Dedicated Host ID parameter.
        InstanceTags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: InstanceTag
              description: The instance tags to associate with the event window. Any instances associated with the tags will be associated with the event window.
        DedicatedHostIds:
          allOf:
            - $ref: "#/components/schemas/DedicatedHostIdList"
            - xml:
                name: DedicatedHostId
              description: The IDs of the Dedicated Hosts to associate with the event window.
      description: One or more targets associated with the specified event window. Only one <i>type</i> of target (instance ID, instance tag, or Dedicated Host ID) can be associated with an event window.
    AssociateInstanceEventWindowRequest:
      type: object
      required:
        - InstanceEventWindowId
        - AssociationTarget
      title: AssociateInstanceEventWindowRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceEventWindowId:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindowId"
            - description: The ID of the event window.
        AssociationTarget:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindowAssociationRequest"
            - description: One or more targets associated with the specified event window.
    InstanceEventWindow:
      type: object
      properties:
        InstanceEventWindowId:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindowId"
            - xml:
                name: instanceEventWindowId
              description: The ID of the event window.
        TimeRanges:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindowTimeRangeList"
            - xml:
                name: timeRangeSet
              description: One or more time ranges defined for the event window.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: name
              description: The name of the event window.
        CronExpression:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindowCronExpression"
            - xml:
                name: cronExpression
              description: The cron expression defined for the event window.
        AssociationTarget:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindowAssociationTarget"
            - xml:
                name: associationTarget
              description: One or more targets associated with the event window.
        State:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindowState"
            - xml:
                name: state
              description: The current state of the event window.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The instance tags associated with the event window.
      description: The event window.
    RouteGatewayId:
      type: string
    AssociateRouteTableRequest:
      type: object
      required:
        - RouteTableId
      title: AssociateRouteTableRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        RouteTableId:
          allOf:
            - $ref: "#/components/schemas/RouteTableId"
            - xml:
                name: routeTableId
              description: The ID of the route table.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - xml:
                name: subnetId
              description: The ID of the subnet.
        GatewayId:
          allOf:
            - $ref: "#/components/schemas/RouteGatewayId"
            - description: The ID of the internet gateway or virtual private gateway.
    RouteTableAssociationState:
      type: object
      properties:
        State:
          allOf:
            - $ref: "#/components/schemas/RouteTableAssociationStateCode"
            - xml:
                name: state
              description: The state of the association.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: statusMessage
              description: The status message, if applicable.
      description: Describes the state of an association between a route table and a subnet or gateway.
    AssociateSubnetCidrBlockRequest:
      type: object
      required:
        - Ipv6CidrBlock
        - SubnetId
      title: AssociateSubnetCidrBlockRequest
      properties:
        Ipv6CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipv6CidrBlock
              description: The IPv6 CIDR block for your subnet. The subnet must have a /64 prefix length.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - xml:
                name: subnetId
              description: The ID of your subnet.
    SubnetIpv6CidrBlockAssociation:
      type: object
      properties:
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/SubnetCidrAssociationId"
            - xml:
                name: associationId
              description: The association ID for the CIDR block.
        Ipv6CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipv6CidrBlock
              description: The IPv6 CIDR block.
        Ipv6CidrBlockState:
          allOf:
            - $ref: "#/components/schemas/SubnetCidrBlockState"
            - xml:
                name: ipv6CidrBlockState
              description: Information about the state of the CIDR block.
      description: Describes an IPv6 CIDR block associated with a subnet.
    TransitGatewaySubnetIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SubnetId"
          - xml:
              name: item
    AssociateTransitGatewayMulticastDomainRequest:
      type: object
      title: AssociateTransitGatewayMulticastDomainRequest
      properties:
        TransitGatewayMulticastDomainId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomainId"
            - description: The ID of the transit gateway multicast domain.
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the transit gateway attachment to associate with the transit gateway multicast domain.
        SubnetIds:
          allOf:
            - $ref: "#/components/schemas/TransitGatewaySubnetIdList"
            - description: The IDs of the subnets to associate with the transit gateway multicast domain.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    AssociateTransitGatewayRouteTableRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
        - TransitGatewayAttachmentId
      title: AssociateTransitGatewayRouteTableRequest
      properties:
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableId"
            - description: The ID of the transit gateway route table.
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the attachment.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayAssociation:
      type: object
      properties:
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableId"
            - xml:
                name: transitGatewayRouteTableId
              description: The ID of the transit gateway route table.
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - xml:
                name: transitGatewayAttachmentId
              description: The ID of the attachment.
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resourceId
              description: The ID of the resource.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentResourceType"
            - xml:
                name: resourceType
              description: The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated.
        State:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAssociationState"
            - xml:
                name: state
              description: The state of the association.
      description: Describes an association between a resource attachment and a transit gateway route table.
    AssociateTrunkInterfaceRequest:
      type: object
      required:
        - BranchInterfaceId
        - TrunkInterfaceId
      title: AssociateTrunkInterfaceRequest
      properties:
        BranchInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceId"
            - description: The ID of the branch network interface.
        TrunkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceId"
            - description: The ID of the trunk network interface.
        VlanId:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The ID of the VLAN. This applies to the VLAN protocol.
        GreKey:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The application key. This applies to the GRE protocol.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TrunkInterfaceAssociation:
      type: object
      properties:
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/TrunkInterfaceAssociationId"
            - xml:
                name: associationId
              description: The ID of the association.
        BranchInterfaceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: branchInterfaceId
              description: The ID of the branch network interface.
        TrunkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: trunkInterfaceId
              description: The ID of the trunk network interface.
        InterfaceProtocol:
          allOf:
            - $ref: "#/components/schemas/InterfaceProtocolType"
            - xml:
                name: interfaceProtocol
              description: The interface protocol. Valid values are <code>VLAN</code> and <code>GRE</code>.
        VlanId:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: vlanId
              description: The ID of the VLAN when you use the VLAN protocol.
        GreKey:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: greKey
              description: The application key when you use the GRE protocol.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags for the trunk interface association.
      description: <note> <p>Currently available in <b>limited preview only</b>. If you are interested in using this feature, contact your account manager.</p> </note> <p>Information about an association between a branch network interface with a trunk network interface.</p>
    AssociateVpcCidrBlockRequest:
      type: object
      required:
        - VpcId
      title: AssociateVpcCidrBlockRequest
      properties:
        AmazonProvidedIpv6CidrBlock:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: amazonProvidedIpv6CidrBlock
              description: Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IPv6 addresses, or the size of the CIDR block.
        CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: An IPv4 CIDR block to associate with the VPC.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - xml:
                name: vpcId
              description: The ID of the VPC.
        Ipv6CidrBlockNetworkBorderGroup:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The name of the location from which we advertise the IPV6 CIDR block. Use this parameter to limit the CIDR block to this location.</p> <p> You must set <code>AmazonProvidedIpv6CidrBlock</code> to <code>true</code> to use this parameter.</p> <p> You can have one IPv6 CIDR block association per network border group.</p>
        Ipv6Pool:
          allOf:
            - $ref: "#/components/schemas/Ipv6PoolEc2Id"
            - description: The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.
        Ipv6CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>An IPv6 CIDR block from the IPv6 address pool. You must also specify <code>Ipv6Pool</code> in the request.</p> <p>To let Amazon choose the IPv6 CIDR block for you, omit this parameter.</p>
    VpcIpv6CidrBlockAssociation:
      type: object
      properties:
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: associationId
              description: The association ID for the IPv6 CIDR block.
        Ipv6CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipv6CidrBlock
              description: The IPv6 CIDR block.
        Ipv6CidrBlockState:
          allOf:
            - $ref: "#/components/schemas/VpcCidrBlockState"
            - xml:
                name: ipv6CidrBlockState
              description: Information about the state of the CIDR block.
        NetworkBorderGroup:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkBorderGroup
              description: The name of the unique set of Availability Zones, Local Zones, or Wavelength Zones from which AWS advertises IP addresses, for example, <code>us-east-1-wl1-bos-wlz-1</code>.
        Ipv6Pool:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipv6Pool
              description: The ID of the IPv6 address pool from which the IPv6 CIDR block is allocated.
      description: Describes an IPv6 CIDR block associated with a VPC.
    VpcCidrBlockAssociation:
      type: object
      properties:
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: associationId
              description: The association ID for the IPv4 CIDR block.
        CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cidrBlock
              description: The IPv4 CIDR block.
        CidrBlockState:
          allOf:
            - $ref: "#/components/schemas/VpcCidrBlockState"
            - xml:
                name: cidrBlockState
              description: Information about the state of the CIDR block.
      description: Describes an IPv4 CIDR block associated with a VPC.
    AssociatedNetworkType:
      type: string
      enum:
        - vpc
    AssociatedRole:
      type: object
      properties:
        AssociatedRoleArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - xml:
                name: associatedRoleArn
              description: The ARN of the associated IAM role.
        CertificateS3BucketName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: certificateS3BucketName
              description: The name of the Amazon S3 bucket in which the Amazon S3 object is stored.
        CertificateS3ObjectKey:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: certificateS3ObjectKey
              description: "The key of the Amazon S3 object ey where the certificate, certificate chain, and encrypted private key bundle is stored. The object key is formated as follows: <code>role_arn</code>/<code>certificate_arn</code>. "
        EncryptionKmsKeyId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: encryptionKmsKeyId
              description: The ID of the KMS customer master key (CMK) used to encrypt the private key.
      description: Information about the associated IAM roles.
    AssociatedRolesList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/AssociatedRole"
          - xml:
              name: item
    AssociatedTargetNetwork:
      type: object
      properties:
        NetworkId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkId
              description: The ID of the subnet.
        NetworkType:
          allOf:
            - $ref: "#/components/schemas/AssociatedNetworkType"
            - xml:
                name: networkType
              description: The target network type.
      description: Describes a target network that is associated with a Client VPN endpoint. A target network is a subnet in a VPC.
    AssociatedTargetNetworkSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/AssociatedTargetNetwork"
          - xml:
              name: item
    AssociationIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/IamInstanceProfileAssociationId"
          - xml:
              name: AssociationId
    AssociationStatusCode:
      type: string
      enum:
        - associating
        - associated
        - association-failed
        - disassociating
        - disassociated
    PartitionLoadFrequency:
      type: string
      enum:
        - none
        - daily
        - weekly
        - monthly
    MillisecondDateTime:
      type: string
      format: date-time
    AthenaIntegration:
      type: object
      required:
        - IntegrationResultS3DestinationArn
        - PartitionLoadFrequency
      properties:
        IntegrationResultS3DestinationArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The location in Amazon S3 to store the generated CloudFormation template.
        PartitionLoadFrequency:
          allOf:
            - $ref: "#/components/schemas/PartitionLoadFrequency"
            - description: The schedule for adding new partitions to the table.
        PartitionStartDate:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - description: The start date for the partition.
        PartitionEndDate:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - description: The end date for the partition.
      description: Describes integration options for Amazon Athena.
    GroupIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: groupId
    AttachClassicLinkVpcRequest:
      type: object
      required:
        - Groups
        - InstanceId
        - VpcId
      title: AttachClassicLinkVpcRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Groups:
          allOf:
            - $ref: "#/components/schemas/GroupIdStringList"
            - xml:
                name: SecurityGroupId
              description: The ID of one or more of the VPC's security groups. You cannot specify security groups from a different VPC.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - xml:
                name: instanceId
              description: The ID of an EC2-Classic instance to link to the ClassicLink-enabled VPC.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - xml:
                name: vpcId
              description: The ID of a ClassicLink-enabled VPC.
    AttachInternetGatewayRequest:
      type: object
      required:
        - InternetGatewayId
        - VpcId
      title: AttachInternetGatewayRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InternetGatewayId:
          allOf:
            - $ref: "#/components/schemas/InternetGatewayId"
            - xml:
                name: internetGatewayId
              description: The ID of the internet gateway.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - xml:
                name: vpcId
              description: The ID of the VPC.
    AttachNetworkInterfaceRequest:
      type: object
      required:
        - DeviceIndex
        - InstanceId
        - NetworkInterfaceId
      title: AttachNetworkInterfaceRequest
      properties:
        DeviceIndex:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: deviceIndex
              description: The index of the device for the network interface attachment.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - xml:
                name: instanceId
              description: The ID of the instance.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceId"
            - xml:
                name: networkInterfaceId
              description: The ID of the network interface.
        NetworkCardIndex:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.
      description: Contains the parameters for AttachNetworkInterface.
    AttachVolumeRequest:
      type: object
      required:
        - Device
        - InstanceId
        - VolumeId
      title: AttachVolumeRequest
      properties:
        Device:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - description: The ID of the instance.
        VolumeId:
          allOf:
            - $ref: "#/components/schemas/VolumeId"
            - description: The ID of the EBS volume. The volume and instance must be within the same Availability Zone.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    AttachVpnGatewayRequest:
      type: object
      required:
        - VpcId
        - VpnGatewayId
      title: AttachVpnGatewayRequest
      properties:
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - description: The ID of the VPC.
        VpnGatewayId:
          allOf:
            - $ref: "#/components/schemas/VpnGatewayId"
            - description: The ID of the virtual private gateway.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for AttachVpnGateway.
    VpcAttachment:
      type: object
      properties:
        State:
          allOf:
            - $ref: "#/components/schemas/AttachmentStatus"
            - xml:
                name: state
              description: The current state of the attachment.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC.
      description: Describes an attachment between a virtual private gateway and a VPC.
    AttachmentStatus:
      type: string
      enum:
        - attaching
        - attached
        - detaching
        - detached
    AttributeBooleanValue:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: value
              description: The attribute value. The valid values are <code>true</code> or <code>false</code>.
      description: Describes a value for a resource attribute that is a Boolean value.
    AttributeValue:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: value
              description: The attribute value. The value is case-sensitive.
      description: Describes a value for a resource attribute that is a String.
    ClientVpnAuthorizationRuleStatus:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/ClientVpnAuthorizationRuleStatusCode"
            - xml:
                name: code
              description: The state of the authorization rule.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: A message about the status of the authorization rule, if applicable.
      description: Describes the state of an authorization rule.
    AuthorizationRule:
      type: object
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientVpnEndpointId
              description: The ID of the Client VPN endpoint with which the authorization rule is associated.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A brief description of the authorization rule.
        GroupId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupId
              description: The ID of the Active Directory group to which the authorization rule grants access.
        AccessAll:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: accessAll
              description: Indicates whether the authorization rule grants access to all clients.
        DestinationCidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: destinationCidr
              description: The IPv4 address range, in CIDR notation, of the network to which the authorization rule applies.
        Status:
          allOf:
            - $ref: "#/components/schemas/ClientVpnAuthorizationRuleStatus"
            - xml:
                name: status
              description: The current state of the authorization rule.
      description: Information about an authorization rule.
    AuthorizationRuleSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/AuthorizationRule"
          - xml:
              name: item
    AuthorizeClientVpnIngressRequest:
      type: object
      required:
        - ClientVpnEndpointId
        - TargetNetworkCidr
      title: AuthorizeClientVpnIngressRequest
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointId"
            - description: The ID of the Client VPN endpoint.
        TargetNetworkCidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IPv4 address range, in CIDR notation, of the network for which access is being authorized.
        AccessGroupId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the group to grant access to, for example, the Active Directory group or identity provider (IdP) group. Required if <code>AuthorizeAllGroups</code> is <code>false</code> or not specified.
        AuthorizeAllGroups:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether to grant access to all clients. Specify <code>true</code> to grant all clients who successfully establish a VPN connection access to the network. Must be set to <code>true</code> if <code>AccessGroupId</code> is not specified.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A brief description of the authorization rule.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    IpPermissionList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/IpPermission"
          - xml:
              name: item
    AuthorizeSecurityGroupEgressRequest:
      type: object
      required:
        - GroupId
      title: AuthorizeSecurityGroupEgressRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        GroupId:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupId"
            - xml:
                name: groupId
              description: The ID of the security group.
        IpPermissions:
          allOf:
            - $ref: "#/components/schemas/IpPermissionList"
            - xml:
                name: ipPermissions
              description: The sets of IP permissions. You can't specify a destination security group and a CIDR IP address range in the same set of permissions.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags applied to the security group rule.
        CidrIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cidrIp
              description: Not supported. Use a set of IP permissions to specify the CIDR.
        FromPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: fromPort
              description: Not supported. Use a set of IP permissions to specify the port.
        IpProtocol:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipProtocol
              description: Not supported. Use a set of IP permissions to specify the protocol name or number.
        ToPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: toPort
              description: Not supported. Use a set of IP permissions to specify the port.
        SourceSecurityGroupName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: sourceSecurityGroupName
              description: Not supported. Use a set of IP permissions to specify a destination security group.
        SourceSecurityGroupOwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: sourceSecurityGroupOwnerId
              description: Not supported. Use a set of IP permissions to specify a destination security group.
    SecurityGroupRuleList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SecurityGroupRule"
          - xml:
              name: item
    AuthorizeSecurityGroupIngressRequest:
      type: object
      title: AuthorizeSecurityGroupIngressRequest
      properties:
        CidrIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The IPv4 address range, in CIDR format. You can't specify this parameter when specifying a source security group. To specify an IPv6 address range, use a set of IP permissions.</p> <p>Alternatively, use a set of IP permissions to specify multiple rules and a description for the rule.</p>
        FromPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use <code>-1</code> to specify all types. If you specify all ICMP types, you must specify all codes.</p> <p>Alternatively, use a set of IP permissions to specify multiple rules and a description for the rule.</p>
        GroupId:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupId"
            - description: The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.
        GroupName:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupName"
            - description: "[EC2-Classic, default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request."
        IpPermissions:
          allOf:
            - $ref: "#/components/schemas/IpPermissionList"
            - description: The sets of IP permissions.
        IpProtocol:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>) or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a>). To specify <code>icmpv6</code>, use a set of IP permissions.</p> <p>[VPC only] Use <code>-1</code> to specify all protocols. If you specify <code>-1</code> or a protocol other than <code>tcp</code>, <code>udp</code>, or <code>icmp</code>, traffic on all ports is allowed, regardless of any ports you specify.</p> <p>Alternatively, use a set of IP permissions to specify multiple rules and a description for the rule.</p>
        SourceSecurityGroupName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "[EC2-Classic, default VPC] The name of the source security group. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. Creates rules that grant full ICMP, UDP, and TCP access. To create a rule with a specific IP protocol and port range, use a set of IP permissions instead. For EC2-VPC, the source security group must be in the same VPC."
        SourceSecurityGroupOwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "[nondefault VPC] The Amazon Web Services account ID for the source security group, if the source security group is in a different account. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range. Creates rules that grant full ICMP, UDP, and TCP access. To create a rule with a specific IP protocol and port range, use a set of IP permissions instead."
        ToPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use <code>-1</code> to specify all codes. If you specify all ICMP types, you must specify all codes.</p> <p>Alternatively, use a set of IP permissions to specify multiple rules and a description for the rule.</p>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: "[VPC Only] The tags applied to the security group rule."
    AutoRecoveryFlag:
      type: boolean
    AvailabilityZoneState:
      type: string
      enum:
        - available
        - information
        - impaired
        - unavailable
    AvailabilityZoneOptInStatus:
      type: string
      enum:
        - opt-in-not-required
        - opted-in
        - not-opted-in
    AvailabilityZoneMessageList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/AvailabilityZoneMessage"
          - xml:
              name: item
    AvailabilityZone:
      type: object
      properties:
        State:
          allOf:
            - $ref: "#/components/schemas/AvailabilityZoneState"
            - xml:
                name: zoneState
              description: The state of the Availability Zone, Local Zone, or Wavelength Zone.
        OptInStatus:
          allOf:
            - $ref: "#/components/schemas/AvailabilityZoneOptInStatus"
            - xml:
                name: optInStatus
              description: <p>For Availability Zones, this parameter always has the value of <code>opt-in-not-required</code>.</p> <p>For Local Zones and Wavelength Zones, this parameter is the opt-in status. The possible values are <code>opted-in</code>, and <code>not-opted-in</code>.</p>
        Messages:
          allOf:
            - $ref: "#/components/schemas/AvailabilityZoneMessageList"
            - xml:
                name: messageSet
              description: Any messages about the Availability Zone, Local Zone, or Wavelength Zone.
        RegionName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: regionName
              description: The name of the Region.
        ZoneName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: zoneName
              description: The name of the Availability Zone, Local Zone, or Wavelength Zone.
        ZoneId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: zoneId
              description: The ID of the Availability Zone, Local Zone, or Wavelength Zone.
        GroupName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupName
              description: <p> For Availability Zones, this parameter has the same value as the Region name.</p> <p>For Local Zones, the name of the associated group, for example <code>us-west-2-lax-1</code>.</p> <p>For Wavelength Zones, the name of the associated group, for example <code>us-east-1-wl1-bos-wlz-1</code>.</p>
        NetworkBorderGroup:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkBorderGroup
              description: The name of the network border group.
        ZoneType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: zoneType
              description: The type of zone. The valid values are <code>availability-zone</code>, <code>local-zone</code>, and <code>wavelength-zone</code>.
        ParentZoneName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: parentZoneName
              description: The name of the zone that handles some of the Local Zone or Wavelength Zone control plane operations, such as API calls.
        ParentZoneId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: parentZoneId
              description: The ID of the zone that handles some of the Local Zone or Wavelength Zone control plane operations, such as API calls.
      description: Describes Availability Zones, Local Zones, and Wavelength Zones.
    AvailabilityZoneList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/AvailabilityZone"
          - xml:
              name: item
    AvailabilityZoneMessage:
      type: object
      properties:
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: The message about the Availability Zone, Local Zone, or Wavelength Zone.
      description: Describes a message about an Availability Zone, Local Zone, or Wavelength Zone.
    AvailabilityZoneStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: AvailabilityZone
    AvailableInstanceCapacityList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceCapacity"
          - xml:
              name: item
    AvailableCapacity:
      type: object
      properties:
        AvailableInstanceCapacity:
          allOf:
            - $ref: "#/components/schemas/AvailableInstanceCapacityList"
            - xml:
                name: availableInstanceCapacity
              description: The number of instances that can be launched onto the Dedicated Host depending on the host's available capacity. For Dedicated Hosts that support multiple instance types, this parameter represents the number of instances for each instance size that is supported on the host.
        AvailableVCpus:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: availableVCpus
              description: The number of vCPUs available for launching instances onto the Dedicated Host.
      description: "The capacity information for instances that can be launched onto the Dedicated Host. "
    InstanceCapacity:
      type: object
      properties:
        AvailableCapacity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: availableCapacity
              description: The number of instances that can be launched onto the Dedicated Host based on the host's available capacity.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceType
              description: The instance type supported by the Dedicated Host.
        TotalCapacity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: totalCapacity
              description: The total number of instances that can be launched onto the Dedicated Host if there are no instances running on it.
      description: Information about the number of instances that can be launched onto the Dedicated Host.
    BareMetalFlag:
      type: boolean
    BaselineBandwidthInMbps:
      type: integer
    BaselineIops:
      type: integer
    BaselineThroughputInMBps:
      type: number
      format: double
    BatchState:
      type: string
      enum:
        - submitted
        - active
        - cancelled
        - failed
        - cancelled_running
        - cancelled_terminating
        - modifying
    BgpStatus:
      type: string
      enum:
        - up
        - down
    BillingProductList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: item
    BlobAttributeValue:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/Blob"
            - xml:
                name: value
    EbsBlockDevice:
      type: object
      properties:
        DeleteOnTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: deleteOnTermination
              description: Indicates whether the EBS volume is deleted on instance termination. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination">Preserving Amazon EBS volumes on instance termination</a> in the <i>Amazon EC2 User Guide</i>.
        Iops:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: iops
              description: '<p>The number of I/O operations per second (IOPS). For <code>gp3</code>, <code>io1</code>, and <code>io2</code> volumes, this represents the number of IOPS that are provisioned for the volume. For <code>gp2</code> volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.</p> <p>The following are the supported values for each volume type:</p> <ul> <li> <p> <code>gp3</code>: 3,000-16,000 IOPS</p> </li> <li> <p> <code>io1</code>: 100-64,000 IOPS</p> </li> <li> <p> <code>io2</code>: 100-64,000 IOPS</p> </li> </ul> <p>For <code>io1</code> and <code>io2</code> volumes, we guarantee 64,000 IOPS only for <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances">Instances built on the Nitro System</a>. Other instance families guarantee performance up to 32,000 IOPS.</p> <p>This parameter is required for <code>io1</code> and <code>io2</code> volumes. The default for <code>gp3</code> volumes is 3,000 IOPS. This parameter is not supported for <code>gp2</code>, <code>st1</code>, <code>sc1</code>, or <code>standard</code> volumes.</p>'
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/SnapshotId"
            - xml:
                name: snapshotId
              description: The ID of the snapshot.
        VolumeSize:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: volumeSize
              description: "<p>The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size.</p> <p>The following are the supported volumes sizes for each volume type:</p> <ul> <li> <p> <code>gp2</code> and <code>gp3</code>:1-16,384</p> </li> <li> <p> <code>io1</code> and <code>io2</code>: 4-16,384</p> </li> <li> <p> <code>st1</code> and <code>sc1</code>: 125-16,384</p> </li> <li> <p> <code>standard</code>: 1-1,024</p> </li> </ul>"
        VolumeType:
          allOf:
            - $ref: "#/components/schemas/VolumeType"
            - xml:
                name: volumeType
              description: The volume type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS volume types</a> in the <i>Amazon EC2 User Guide</i>. If the volume type is <code>io1</code> or <code>io2</code>, you must specify the IOPS that the volume supports.
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted.</p> <p>This parameter is only supported on <code>BlockDeviceMapping</code> objects called by <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html">RunInstances</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html">RequestSpotFleet</a>, and <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html">RequestSpotInstances</a>.</p>
        Throughput:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: throughput
              description: "<p>The throughput that the volume supports, in MiB/s.</p> <p>This parameter is valid only for <code>gp3</code> volumes.</p> <p>Valid Range: Minimum value of 125. Maximum value of 1000.</p>"
        OutpostArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: outpostArn
              description: The ARN of the Outpost on which the snapshot is stored.
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: encrypted
              description: <p>Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to <code>true</code> depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-parameters">Amazon EBS encryption</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>In no case can you remove encryption from an encrypted volume.</p> <p>Encrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances">Supported instance types</a>.</p> <p>This parameter is not returned by .</p>
      description: Describes a block device for an EBS volume.
    BlockDeviceMappingRequestList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/BlockDeviceMapping"
          - xml:
              name: BlockDeviceMapping
    BootModeType:
      type: string
      enum:
        - legacy-bios
        - uefi
    BootModeTypeList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/BootModeType"
          - xml:
              name: item
    BootModeValues:
      type: string
      enum:
        - legacy-bios
        - uefi
    BundleIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/BundleId"
          - xml:
              name: BundleId
    Storage:
      type: object
      properties:
        S3:
          allOf:
            - $ref: "#/components/schemas/S3Storage"
            - description: An Amazon S3 storage location.
      description: Describes the storage location for an instance store-backed AMI.
    BundleInstanceRequest:
      type: object
      required:
        - InstanceId
        - Storage
      title: BundleInstanceRequest
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - description: "<p>The ID of the instance to bundle.</p> <p>Type: String</p> <p>Default: None</p> <p>Required: Yes</p>"
        Storage:
          allOf:
            - $ref: "#/components/schemas/Storage"
            - description: The bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for BundleInstance.
    BundleTask:
      type: object
      properties:
        BundleId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: bundleId
              description: The ID of the bundle task.
        BundleTaskError:
          allOf:
            - $ref: "#/components/schemas/BundleTaskError"
            - xml:
                name: error
              description: If the task fails, a description of the error.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance associated with this bundle task.
        Progress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: progress
              description: The level of task completion, as a percent (for example, 20%).
        StartTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: startTime
              description: The time this task started.
        State:
          allOf:
            - $ref: "#/components/schemas/BundleTaskState"
            - xml:
                name: state
              description: The state of the task.
        Storage:
          allOf:
            - $ref: "#/components/schemas/Storage"
            - xml:
                name: storage
              description: The Amazon S3 storage locations.
        UpdateTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: updateTime
              description: The time of the most recent update for the task.
      description: Describes a bundle task.
    BundleTaskError:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: code
              description: The error code.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: The error message.
      description: Describes an error for <a>BundleInstance</a>.
    BundleTaskState:
      type: string
      enum:
        - pending
        - waiting-for-shutdown
        - bundling
        - storing
        - cancelling
        - complete
        - failed
    BundleTaskList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/BundleTask"
          - xml:
              name: item
    BurstablePerformanceFlag:
      type: boolean
    ByoipCidrState:
      type: string
      enum:
        - advertised
        - deprovisioned
        - failed-deprovision
        - failed-provision
        - pending-deprovision
        - pending-provision
        - provisioned
        - provisioned-not-publicly-advertisable
    ByoipCidrSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ByoipCidr"
          - xml:
              name: item
    CancelBatchErrorCode:
      type: string
      enum:
        - fleetRequestIdDoesNotExist
        - fleetRequestIdMalformed
        - fleetRequestNotInCancellableState
        - unexpectedError
    CancelBundleTaskRequest:
      type: object
      required:
        - BundleId
      title: CancelBundleTaskRequest
      properties:
        BundleId:
          allOf:
            - $ref: "#/components/schemas/BundleId"
            - description: The ID of the bundle task.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for CancelBundleTask.
    CancelCapacityReservationRequest:
      type: object
      required:
        - CapacityReservationId
      title: CancelCapacityReservationRequest
      properties:
        CapacityReservationId:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationId"
            - description: The ID of the Capacity Reservation to be cancelled.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    CancelConversionRequest:
      type: object
      required:
        - ConversionTaskId
      title: CancelConversionRequest
      properties:
        ConversionTaskId:
          allOf:
            - $ref: "#/components/schemas/ConversionTaskId"
            - xml:
                name: conversionTaskId
              description: The ID of the conversion task.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ReasonMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: reasonMessage
              description: The reason for canceling the conversion task.
    ExportVmTaskId:
      type: string
    CancelExportTaskRequest:
      type: object
      required:
        - ExportTaskId
      title: CancelExportTaskRequest
      properties:
        ExportTaskId:
          allOf:
            - $ref: "#/components/schemas/ExportVmTaskId"
            - xml:
                name: exportTaskId
              description: The ID of the export task. This is the ID returned by <code>CreateInstanceExportTask</code>.
    ImportTaskId:
      type: string
    CancelImportTaskRequest:
      type: object
      title: CancelImportTaskRequest
      properties:
        CancelReason:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The reason for canceling the task.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ImportTaskId:
          allOf:
            - $ref: "#/components/schemas/ImportTaskId"
            - description: The ID of the import image or import snapshot task to be canceled.
    ReservedInstancesListingId:
      type: string
    CancelReservedInstancesListingRequest:
      type: object
      required:
        - ReservedInstancesListingId
      title: CancelReservedInstancesListingRequest
      properties:
        ReservedInstancesListingId:
          allOf:
            - $ref: "#/components/schemas/ReservedInstancesListingId"
            - xml:
                name: reservedInstancesListingId
              description: The ID of the Reserved Instance listing.
      description: Contains the parameters for CancelReservedInstancesListing.
    ReservedInstancesListingList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ReservedInstancesListing"
          - xml:
              name: item
    CancelSpotFleetRequestsError:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/CancelBatchErrorCode"
            - xml:
                name: code
              description: The error code.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: The description for the error code.
      description: Describes a Spot Fleet error.
    CancelSpotFleetRequestsErrorItem:
      type: object
      properties:
        Error:
          allOf:
            - $ref: "#/components/schemas/CancelSpotFleetRequestsError"
            - xml:
                name: error
              description: The error.
        SpotFleetRequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: spotFleetRequestId
              description: The ID of the Spot Fleet request.
      description: Describes a Spot Fleet request that was not successfully canceled.
    CancelSpotFleetRequestsErrorSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/CancelSpotFleetRequestsErrorItem"
          - xml:
              name: item
    SpotFleetRequestIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SpotFleetRequestId"
          - xml:
              name: item
    CancelSpotFleetRequestsRequest:
      type: object
      required:
        - SpotFleetRequestIds
        - TerminateInstances
      title: CancelSpotFleetRequestsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        SpotFleetRequestIds:
          allOf:
            - $ref: "#/components/schemas/SpotFleetRequestIdList"
            - xml:
                name: spotFleetRequestId
              description: The IDs of the Spot Fleet requests.
        TerminateInstances:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: terminateInstances
              description: Indicates whether to terminate instances for a Spot Fleet request if it is canceled successfully.
      description: Contains the parameters for CancelSpotFleetRequests.
    CancelSpotFleetRequestsSuccessSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/CancelSpotFleetRequestsSuccessItem"
          - xml:
              name: item
    CancelSpotFleetRequestsSuccessItem:
      type: object
      properties:
        CurrentSpotFleetRequestState:
          allOf:
            - $ref: "#/components/schemas/BatchState"
            - xml:
                name: currentSpotFleetRequestState
              description: The current state of the Spot Fleet request.
        PreviousSpotFleetRequestState:
          allOf:
            - $ref: "#/components/schemas/BatchState"
            - xml:
                name: previousSpotFleetRequestState
              description: The previous state of the Spot Fleet request.
        SpotFleetRequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: spotFleetRequestId
              description: The ID of the Spot Fleet request.
      description: Describes a Spot Fleet request that was successfully canceled.
    CancelSpotInstanceRequestState:
      type: string
      enum:
        - active
        - open
        - closed
        - cancelled
        - completed
    SpotInstanceRequestIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SpotInstanceRequestId"
          - xml:
              name: SpotInstanceRequestId
    CancelSpotInstanceRequestsRequest:
      type: object
      required:
        - SpotInstanceRequestIds
      title: CancelSpotInstanceRequestsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        SpotInstanceRequestIds:
          allOf:
            - $ref: "#/components/schemas/SpotInstanceRequestIdList"
            - xml:
                name: SpotInstanceRequestId
              description: One or more Spot Instance request IDs.
      description: Contains the parameters for CancelSpotInstanceRequests.
    CancelledSpotInstanceRequestList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/CancelledSpotInstanceRequest"
          - xml:
              name: item
    CancelledSpotInstanceRequest:
      type: object
      properties:
        SpotInstanceRequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: spotInstanceRequestId
              description: The ID of the Spot Instance request.
        State:
          allOf:
            - $ref: "#/components/schemas/CancelSpotInstanceRequestState"
            - xml:
                name: state
              description: The state of the Spot Instance request.
      description: Describes a request to cancel a Spot Instance.
    CapacityReservationInstancePlatform:
      type: string
      enum:
        - Linux/UNIX
        - Red Hat Enterprise Linux
        - SUSE Linux
        - Windows
        - Windows with SQL Server
        - Windows with SQL Server Enterprise
        - Windows with SQL Server Standard
        - Windows with SQL Server Web
        - Linux with SQL Server Standard
        - Linux with SQL Server Web
        - Linux with SQL Server Enterprise
    CapacityReservationTenancy:
      type: string
      enum:
        - default
        - dedicated
    CapacityReservationState:
      type: string
      enum:
        - active
        - expired
        - cancelled
        - pending
        - failed
    EndDateType:
      type: string
      enum:
        - unlimited
        - limited
    InstanceMatchCriteria:
      type: string
      enum:
        - open
        - targeted
    OutpostArn:
      type: string
      pattern: ^arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:outpost/op-[a-f0-9]{17}$
    CapacityReservation:
      type: object
      properties:
        CapacityReservationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: capacityReservationId
              description: The ID of the Capacity Reservation.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the Amazon Web Services account that owns the Capacity Reservation.
        CapacityReservationArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: capacityReservationArn
              description: The Amazon Resource Name (ARN) of the Capacity Reservation.
        AvailabilityZoneId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZoneId
              description: The Availability Zone ID of the Capacity Reservation.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceType
              description: The type of instance for which the Capacity Reservation reserves capacity.
        InstancePlatform:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationInstancePlatform"
            - xml:
                name: instancePlatform
              description: The type of operating system for which the Capacity Reservation reserves capacity.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone in which the capacity is reserved.
        Tenancy:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationTenancy"
            - xml:
                name: tenancy
              description: <p>Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:</p> <ul> <li> <p> <code>default</code> - The Capacity Reservation is created on hardware that is shared with other Amazon Web Services accounts.</p> </li> <li> <p> <code>dedicated</code> - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single Amazon Web Services account.</p> </li> </ul>
        TotalInstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: totalInstanceCount
              description: The total number of instances for which the Capacity Reservation reserves capacity.
        AvailableInstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: availableInstanceCount
              description: The remaining capacity. Indicates the number of instances that can be launched in the Capacity Reservation.
        EbsOptimized:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: ebsOptimized
              description: Indicates whether the Capacity Reservation supports EBS-optimized instances. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS- optimized instance.
        EphemeralStorage:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: ephemeralStorage
              description: Indicates whether the Capacity Reservation supports instances with temporary, block-level storage.
        State:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationState"
            - xml:
                name: state
              description: <p>The current state of the Capacity Reservation. A Capacity Reservation can be in one of the following states:</p> <ul> <li> <p> <code>active</code> - The Capacity Reservation is active and the capacity is available for your use.</p> </li> <li> <p> <code>expired</code> - The Capacity Reservation expired automatically at the date and time specified in your request. The reserved capacity is no longer available for your use.</p> </li> <li> <p> <code>cancelled</code> - The Capacity Reservation was cancelled. The reserved capacity is no longer available for your use.</p> </li> <li> <p> <code>pending</code> - The Capacity Reservation request was successful but the capacity provisioning is still pending.</p> </li> <li> <p> <code>failed</code> - The Capacity Reservation request has failed. A request might fail due to invalid request parameters, capacity constraints, or instance limit constraints. Failed requests are retained for 60 minutes.</p> </li> </ul>
        StartDate:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: startDate
              description: The date and time at which the Capacity Reservation was started.
        EndDate:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: endDate
              description: The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to <code>expired</code> when it reaches its end date and time.
        EndDateType:
          allOf:
            - $ref: "#/components/schemas/EndDateType"
            - xml:
                name: endDateType
              description: <p>Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:</p> <ul> <li> <p> <code>unlimited</code> - The Capacity Reservation remains active until you explicitly cancel it.</p> </li> <li> <p> <code>limited</code> - The Capacity Reservation expires automatically at a specified date and time.</p> </li> </ul>
        InstanceMatchCriteria:
          allOf:
            - $ref: "#/components/schemas/InstanceMatchCriteria"
            - xml:
                name: instanceMatchCriteria
              description: <p>Indicates the type of instance launches that the Capacity Reservation accepts. The options include:</p> <ul> <li> <p> <code>open</code> - The Capacity Reservation accepts all instances that have matching attributes (instance type, platform, and Availability Zone). Instances that have matching attributes launch into the Capacity Reservation automatically without specifying any additional parameters.</p> </li> <li> <p> <code>targeted</code> - The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, and Availability Zone), and explicitly target the Capacity Reservation. This ensures that only permitted instances can use the reserved capacity. </p> </li> </ul>
        CreateDate:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: createDate
              description: The date and time at which the Capacity Reservation was created.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the Capacity Reservation.
        OutpostArn:
          allOf:
            - $ref: "#/components/schemas/OutpostArn"
            - xml:
                name: outpostArn
              description: The Amazon Resource Name (ARN) of the Outpost on which the Capacity Reservation was created.
      description: Describes a Capacity Reservation.
    CapacityReservationGroup:
      type: object
      properties:
        GroupArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupArn
              description: The ARN of the resource group.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the Amazon Web Services account that owns the resource group.
      description: Describes a resource group to which a Capacity Reservation has been added.
    CapacityReservationGroupSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/CapacityReservationGroup"
          - xml:
              name: item
    CapacityReservationIdSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/CapacityReservationId"
          - xml:
              name: item
    FleetCapacityReservationUsageStrategy:
      type: string
      enum:
        - use-capacity-reservations-first
    CapacityReservationOptions:
      type: object
      properties:
        UsageStrategy:
          allOf:
            - $ref: "#/components/schemas/FleetCapacityReservationUsageStrategy"
            - xml:
                name: usageStrategy
              description: <p>Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity.</p> <p>If you specify <code>use-capacity-reservations-first</code>, the fleet uses unused Capacity Reservations to fulfill On-Demand capacity up to the target On-Demand capacity. If multiple instance pools have unused Capacity Reservations, the On-Demand allocation strategy (<code>lowest-price</code> or <code>prioritized</code>) is applied. If the number of unused Capacity Reservations is less than the On-Demand target capacity, the remaining On-Demand target capacity is launched according to the On-Demand allocation strategy (<code>lowest-price</code> or <code>prioritized</code>).</p> <p>If you do not specify a value, the fleet fulfils the On-Demand capacity according to the chosen On-Demand allocation strategy.</p>
      description: <p>Describes the strategy for using unused Capacity Reservations for fulfilling On-Demand capacity.</p> <note> <p>This strategy can only be used if the EC2 Fleet is of type <code>instant</code>.</p> </note> <p>For more information about Capacity Reservations, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-capacity-reservations.html">On-Demand Capacity Reservations</a> in the <i>Amazon EC2 User Guide</i>. For examples of using Capacity Reservations in an EC2 Fleet, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-examples.html">EC2 Fleet example configurations</a> in the <i>Amazon EC2 User Guide</i>.</p>
    CapacityReservationSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/CapacityReservation"
          - xml:
              name: item
    CapacityReservationSpecification:
      type: object
      properties:
        CapacityReservationPreference:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationPreference"
            - description: <p>Indicates the instance's Capacity Reservation preferences. Possible preferences include:</p> <ul> <li> <p> <code>open</code> - The instance can run in any <code>open</code> Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).</p> </li> <li> <p> <code>none</code> - The instance avoids running in a Capacity Reservation even if one is available. The instance runs as an On-Demand Instance.</p> </li> </ul>
        CapacityReservationTarget:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationTarget"
            - description: Information about the target Capacity Reservation or Capacity Reservation group.
      description: <p>Describes an instance's Capacity Reservation targeting option. You can specify only one parameter at a time. If you specify <code>CapacityReservationPreference</code> and <code>CapacityReservationTarget</code>, the request fails.</p> <p>Use the <code>CapacityReservationPreference</code> parameter to configure the instance to run as an On-Demand Instance or to run in any <code>open</code> Capacity Reservation that has matching attributes (instance type, platform, Availability Zone). Use the <code>CapacityReservationTarget</code> parameter to explicitly target a specific Capacity Reservation or a Capacity Reservation group.</p>
    CapacityReservationTargetResponse:
      type: object
      properties:
        CapacityReservationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: capacityReservationId
              description: The ID of the targeted Capacity Reservation.
        CapacityReservationResourceGroupArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: capacityReservationResourceGroupArn
              description: The ARN of the targeted Capacity Reservation group.
      description: Describes a target Capacity Reservation or Capacity Reservation group.
    CapacityReservationSpecificationResponse:
      type: object
      properties:
        CapacityReservationPreference:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationPreference"
            - xml:
                name: capacityReservationPreference
              description: <p>Describes the instance's Capacity Reservation preferences. Possible preferences include:</p> <ul> <li> <p> <code>open</code> - The instance can run in any <code>open</code> Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).</p> </li> <li> <p> <code>none</code> - The instance avoids running in a Capacity Reservation even if one is available. The instance runs in On-Demand capacity.</p> </li> </ul>
        CapacityReservationTarget:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationTargetResponse"
            - xml:
                name: capacityReservationTarget
              description: Information about the targeted Capacity Reservation or Capacity Reservation group.
      description: Describes the instance's Capacity Reservation targeting preferences. The action returns the <code>capacityReservationPreference</code> response element if the instance is configured to run in On-Demand capacity, or if it is configured in run in any <code>open</code> Capacity Reservation that has matching attributes (instance type, platform, Availability Zone). The action returns the <code>capacityReservationTarget</code> response element if the instance explicily targets a specific Capacity Reservation or Capacity Reservation group.
    CarrierGatewayState:
      type: string
      enum:
        - pending
        - available
        - deleting
        - deleted
    CarrierGateway:
      type: object
      properties:
        CarrierGatewayId:
          allOf:
            - $ref: "#/components/schemas/CarrierGatewayId"
            - xml:
                name: carrierGatewayId
              description: The ID of the carrier gateway.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - xml:
                name: vpcId
              description: The ID of the VPC associated with the carrier gateway.
        State:
          allOf:
            - $ref: "#/components/schemas/CarrierGatewayState"
            - xml:
                name: state
              description: The state of the carrier gateway.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The Amazon Web Services account ID of the owner of the carrier gateway.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags assigned to the carrier gateway.
      description: Describes a carrier gateway.
    CarrierGatewayIdSet:
      type: array
      items:
        $ref: "#/components/schemas/CarrierGatewayId"
    CarrierGatewayMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    CarrierGatewaySet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/CarrierGateway"
          - xml:
              name: item
    CertificateAuthentication:
      type: object
      properties:
        ClientRootCertificateChain:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientRootCertificateChain
              description: "The ARN of the client certificate. "
      description: Information about the client certificate used for authentication.
    CertificateAuthenticationRequest:
      type: object
      properties:
        ClientRootCertificateChainArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ARN of the client certificate. The certificate must be signed by a certificate authority (CA) and it must be provisioned in AWS Certificate Manager (ACM).
      description: Information about the client certificate to be used for authentication.
    CidrAuthorizationContext:
      type: object
      required:
        - Message
        - Signature
      properties:
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The plain-text authorization message for the prefix and account.
        Signature:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The signed authorization message for the prefix and account.
      description: Provides authorization for Amazon to bring a specific IP address range to a specific Amazon Web Services account using bring your own IP addresses (BYOIP). For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html#prepare-for-byoip">Configuring your BYOIP address range</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    CidrBlock:
      type: object
      properties:
        CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cidrBlock
              description: The IPv4 CIDR block.
      description: Describes an IPv4 CIDR block.
    CidrBlockSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/CidrBlock"
          - xml:
              name: item
    ClassicLinkDnsSupport:
      type: object
      properties:
        ClassicLinkDnsSupported:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: classicLinkDnsSupported
              description: Indicates whether ClassicLink DNS support is enabled for the VPC.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC.
      description: Describes the ClassicLink DNS support status of a VPC.
    ClassicLinkDnsSupportList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ClassicLinkDnsSupport"
          - xml:
              name: item
    GroupIdentifierList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/GroupIdentifier"
          - xml:
              name: item
    ClassicLinkInstance:
      type: object
      properties:
        Groups:
          allOf:
            - $ref: "#/components/schemas/GroupIdentifierList"
            - xml:
                name: groupSet
              description: A list of security groups.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the instance.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC.
      description: Describes a linked EC2-Classic instance.
    ClassicLinkInstanceList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ClassicLinkInstance"
          - xml:
              name: item
    ClassicLoadBalancer:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: name
              description: The name of the load balancer.
      description: Describes a Classic Load Balancer.
    ClassicLoadBalancers:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ClassicLoadBalancer"
          - xml:
              name: item
      minItems: 1
      maxItems: 5
    ClassicLoadBalancersConfig:
      type: object
      properties:
        ClassicLoadBalancers:
          allOf:
            - $ref: "#/components/schemas/ClassicLoadBalancers"
            - xml:
                name: classicLoadBalancers
              description: One or more Classic Load Balancers.
      description: Describes the Classic Load Balancers to attach to a Spot Fleet. Spot Fleet registers the running Spot Instances with these Classic Load Balancers.
    ClientCertificateRevocationListStatusCode:
      type: string
      enum:
        - pending
        - active
    ClientCertificateRevocationListStatus:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/ClientCertificateRevocationListStatusCode"
            - xml:
                name: code
              description: The state of the client certificate revocation list.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: A message about the status of the client certificate revocation list, if applicable.
      description: Describes the state of a client certificate revocation list.
    ClientConnectOptions:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether client connect options are enabled. The default is <code>false</code> (not enabled).
        LambdaFunctionArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Resource Name (ARN) of the AWS Lambda function used for connection authorization.
      description: The options for managing connection authorization for new client connections.
    ClientVpnEndpointAttributeStatus:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointAttributeStatusCode"
            - xml:
                name: code
              description: The status code.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: The status message.
      description: Describes the status of the Client VPN endpoint attribute.
    ClientConnectResponseOptions:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: enabled
              description: Indicates whether client connect options are enabled.
        LambdaFunctionArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: lambdaFunctionArn
              description: The Amazon Resource Name (ARN) of the AWS Lambda function used for connection authorization.
        Status:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointAttributeStatus"
            - xml:
                name: status
              description: The status of any updates to the client connect options.
      description: The options for managing connection authorization for new client connections.
    ClientData:
      type: object
      properties:
        Comment:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A user-defined comment about the disk upload.
        UploadEnd:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The time that the disk upload ends.
        UploadSize:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The size of the uploaded disk image, in GiB.
        UploadStart:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The time that the disk upload starts.
      description: Describes the client-specific data.
    ClientVpnAssociationId:
      type: string
    ClientVpnAuthenticationType:
      type: string
      enum:
        - certificate-authentication
        - directory-service-authentication
        - federated-authentication
    DirectoryServiceAuthentication:
      type: object
      properties:
        DirectoryId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: directoryId
              description: The ID of the Active Directory used for authentication.
      description: Describes an Active Directory.
    FederatedAuthentication:
      type: object
      properties:
        SamlProviderArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: samlProviderArn
              description: The Amazon Resource Name (ARN) of the IAM SAML identity provider.
        SelfServiceSamlProviderArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: selfServiceSamlProviderArn
              description: The Amazon Resource Name (ARN) of the IAM SAML identity provider for the self-service portal.
      description: Describes the IAM SAML identity providers used for federated authentication.
    ClientVpnAuthentication:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/ClientVpnAuthenticationType"
            - xml:
                name: type
              description: The authentication type used.
        ActiveDirectory:
          allOf:
            - $ref: "#/components/schemas/DirectoryServiceAuthentication"
            - xml:
                name: activeDirectory
              description: Information about the Active Directory, if applicable.
        MutualAuthentication:
          allOf:
            - $ref: "#/components/schemas/CertificateAuthentication"
            - xml:
                name: mutualAuthentication
              description: Information about the authentication certificates, if applicable.
        FederatedAuthentication:
          allOf:
            - $ref: "#/components/schemas/FederatedAuthentication"
            - xml:
                name: federatedAuthentication
              description: Information about the IAM SAML identity provider, if applicable.
      description: Describes the authentication methods used by a Client VPN endpoint. For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/client-authentication.html">Authentication</a> in the <i>AWS Client VPN Administrator Guide</i>.
    ClientVpnAuthenticationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ClientVpnAuthentication"
          - xml:
              name: item
    DirectoryServiceAuthenticationRequest:
      type: object
      properties:
        DirectoryId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the Active Directory to be used for authentication.
      description: Describes the Active Directory to be used for client authentication.
    FederatedAuthenticationRequest:
      type: object
      properties:
        SAMLProviderArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Resource Name (ARN) of the IAM SAML identity provider.
        SelfServiceSAMLProviderArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Resource Name (ARN) of the IAM SAML identity provider for the self-service portal.
      description: The IAM SAML identity provider used for federated authentication.
    ClientVpnAuthenticationRequestList:
      type: array
      items:
        $ref: "#/components/schemas/ClientVpnAuthenticationRequest"
    ClientVpnAuthorizationRuleStatusCode:
      type: string
      enum:
        - authorizing
        - active
        - failed
        - revoking
    ClientVpnConnectionStatus:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/ClientVpnConnectionStatusCode"
            - xml:
                name: code
              description: The state of the client connection.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: A message about the status of the client connection, if applicable.
      description: Describes the status of a client connection.
    ClientVpnConnection:
      type: object
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientVpnEndpointId
              description: The ID of the Client VPN endpoint to which the client is connected.
        Timestamp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: timestamp
              description: The current date and time.
        ConnectionId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: connectionId
              description: The ID of the client connection.
        Username:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: username
              description: The username of the client who established the client connection. This information is only provided if Active Directory client authentication is used.
        ConnectionEstablishedTime:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: connectionEstablishedTime
              description: The date and time the client connection was established.
        IngressBytes:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ingressBytes
              description: The number of bytes sent by the client.
        EgressBytes:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: egressBytes
              description: The number of bytes received by the client.
        IngressPackets:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ingressPackets
              description: The number of packets sent by the client.
        EgressPackets:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: egressPackets
              description: The number of packets received by the client.
        ClientIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientIp
              description: The IP address of the client.
        CommonName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: commonName
              description: The common name associated with the client. This is either the name of the client certificate, or the Active Directory user name.
        Status:
          allOf:
            - $ref: "#/components/schemas/ClientVpnConnectionStatus"
            - xml:
                name: status
              description: The current state of the client connection.
        ConnectionEndTime:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: connectionEndTime
              description: The date and time the client connection was terminated.
        PostureComplianceStatuses:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: postureComplianceStatusSet
              description: The statuses returned by the client connect handler for posture compliance, if applicable.
      description: Describes a client connection.
    ClientVpnConnectionSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ClientVpnConnection"
          - xml:
              name: item
    ClientVpnConnectionStatusCode:
      type: string
      enum:
        - active
        - failed-to-terminate
        - terminating
        - terminated
    ClientVpnEndpointStatus:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointStatusCode"
            - xml:
                name: code
              description: <p>The state of the Client VPN endpoint. Possible states include:</p> <ul> <li> <p> <code>pending-associate</code> - The Client VPN endpoint has been created but no target networks have been associated. The Client VPN endpoint cannot accept connections.</p> </li> <li> <p> <code>available</code> - The Client VPN endpoint has been created and a target network has been associated. The Client VPN endpoint can accept connections.</p> </li> <li> <p> <code>deleting</code> - The Client VPN endpoint is being deleted. The Client VPN endpoint cannot accept connections.</p> </li> <li> <p> <code>deleted</code> - The Client VPN endpoint has been deleted. The Client VPN endpoint cannot accept connections.</p> </li> </ul>
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: A message about the status of the Client VPN endpoint.
      description: Describes the state of a Client VPN endpoint.
    VpnProtocol:
      type: string
      enum:
        - openvpn
    TransportProtocol:
      type: string
      enum:
        - tcp
        - udp
    ConnectionLogResponseOptions:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether client connection logging is enabled for the Client VPN endpoint.
        CloudwatchLogGroup:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the Amazon CloudWatch Logs log group to which connection logging data is published.
        CloudwatchLogStream:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the Amazon CloudWatch Logs log stream to which connection logging data is published.
      description: Information about the client connection logging options for a Client VPN endpoint.
    ClientVpnEndpoint:
      type: object
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientVpnEndpointId
              description: The ID of the Client VPN endpoint.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A brief description of the endpoint.
        Status:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointStatus"
            - xml:
                name: status
              description: The current state of the Client VPN endpoint.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: creationTime
              description: The date and time the Client VPN endpoint was created.
        DeletionTime:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: deletionTime
              description: The date and time the Client VPN endpoint was deleted, if applicable.
        DnsName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: dnsName
              description: The DNS name to be used by clients when connecting to the Client VPN endpoint.
        ClientCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientCidrBlock
              description: The IPv4 address range, in CIDR notation, from which client IP addresses are assigned.
        DnsServers:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: dnsServer
              description: "Information about the DNS servers to be used for DNS resolution. "
        SplitTunnel:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: splitTunnel
              description: <p>Indicates whether split-tunnel is enabled in the AWS Client VPN endpoint.</p> <p>For information about split-tunnel VPN endpoints, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html">Split-Tunnel AWS Client VPN Endpoint</a> in the <i>AWS Client VPN Administrator Guide</i>.</p>
        VpnProtocol:
          allOf:
            - $ref: "#/components/schemas/VpnProtocol"
            - xml:
                name: vpnProtocol
              description: The protocol used by the VPN session.
        TransportProtocol:
          allOf:
            - $ref: "#/components/schemas/TransportProtocol"
            - xml:
                name: transportProtocol
              description: The transport protocol used by the Client VPN endpoint.
        VpnPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: vpnPort
              description: The port number for the Client VPN endpoint.
        AssociatedTargetNetworks:
          allOf:
            - $ref: "#/components/schemas/AssociatedTargetNetworkSet"
            - deprecated: true
              xml:
                name: associatedTargetNetwork
              description: Information about the associated target networks. A target network is a subnet in a VPC.This property is deprecated. To view the target networks associated with a Client VPN endpoint, call DescribeClientVpnTargetNetworks and inspect the clientVpnTargetNetworks response element.
        ServerCertificateArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: serverCertificateArn
              description: The ARN of the server certificate.
        AuthenticationOptions:
          allOf:
            - $ref: "#/components/schemas/ClientVpnAuthenticationList"
            - xml:
                name: authenticationOptions
              description: Information about the authentication method used by the Client VPN endpoint.
        ConnectionLogOptions:
          allOf:
            - $ref: "#/components/schemas/ConnectionLogResponseOptions"
            - xml:
                name: connectionLogOptions
              description: Information about the client connection logging options for the Client VPN endpoint.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the Client VPN endpoint.
        SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/ClientVpnSecurityGroupIdSet"
            - xml:
                name: securityGroupIdSet
              description: The IDs of the security groups for the target network.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - xml:
                name: vpcId
              description: The ID of the VPC.
        SelfServicePortalUrl:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: selfServicePortalUrl
              description: The URL of the self-service portal.
        ClientConnectOptions:
          allOf:
            - $ref: "#/components/schemas/ClientConnectResponseOptions"
            - xml:
                name: clientConnectOptions
              description: The options for managing connection authorization for new client connections.
      description: Describes a Client VPN endpoint.
    ClientVpnEndpointAttributeStatusCode:
      type: string
      enum:
        - applying
        - applied
    ClientVpnEndpointIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ClientVpnEndpointId"
          - xml:
              name: item
    ClientVpnEndpointStatusCode:
      type: string
      enum:
        - pending-associate
        - available
        - deleting
        - deleted
    ClientVpnRouteStatus:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/ClientVpnRouteStatusCode"
            - xml:
                name: code
              description: The state of the Client VPN endpoint route.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: A message about the status of the Client VPN endpoint route, if applicable.
      description: Describes the state of a Client VPN endpoint route.
    ClientVpnRoute:
      type: object
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientVpnEndpointId
              description: The ID of the Client VPN endpoint with which the route is associated.
        DestinationCidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: destinationCidr
              description: The IPv4 address range, in CIDR notation, of the route destination.
        TargetSubnet:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: targetSubnet
              description: The ID of the subnet through which traffic is routed.
        Type:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: type
              description: The route type.
        Origin:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: origin
              description: Indicates how the route was associated with the Client VPN endpoint. <code>associate</code> indicates that the route was automatically added when the target network was associated with the Client VPN endpoint. <code>add-route</code> indicates that the route was manually added using the <b>CreateClientVpnRoute</b> action.
        Status:
          allOf:
            - $ref: "#/components/schemas/ClientVpnRouteStatus"
            - xml:
                name: status
              description: The current state of the route.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A brief description of the route.
      description: Information about a Client VPN endpoint route.
    ClientVpnRouteSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ClientVpnRoute"
          - xml:
              name: item
    ClientVpnRouteStatusCode:
      type: string
      enum:
        - creating
        - active
        - failed
        - deleting
    CoipAddressUsage:
      type: object
      properties:
        AllocationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: allocationId
              description: The allocation ID of the address.
        AwsAccountId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: awsAccountId
              description: The AWS account ID.
        AwsService:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: awsService
              description: The AWS service.
        CoIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: coIp
              description: The customer-owned IP address.
      description: Describes address usage for a customer-owned address pool.
    CoipAddressUsageSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/CoipAddressUsage"
          - xml:
              name: item
    CoipPool:
      type: object
      properties:
        PoolId:
          allOf:
            - $ref: "#/components/schemas/CoipPoolId"
            - xml:
                name: poolId
              description: The ID of the address pool.
        PoolCidrs:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: poolCidrSet
              description: The address ranges of the address pool.
        LocalGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRoutetableId"
            - xml:
                name: localGatewayRouteTableId
              description: The ID of the local gateway route table.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags.
        PoolArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - xml:
                name: poolArn
              description: The ARN of the address pool.
      description: Describes a customer-owned address pool.
    CoipPoolIdSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/CoipPoolId"
          - xml:
              name: item
    CoipPoolMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    CoipPoolSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/CoipPool"
          - xml:
              name: item
    ConfirmProductInstanceRequest:
      type: object
      required:
        - InstanceId
        - ProductCode
      title: ConfirmProductInstanceRequest
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - description: The ID of the instance.
        ProductCode:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The product code. This must be a product code that you own.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ConnectionLogOptions:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether connection logging is enabled.
        CloudwatchLogGroup:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the CloudWatch Logs log group. Required if connection logging is enabled.
        CloudwatchLogStream:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the CloudWatch Logs log stream to which the connection data is published.
      description: Describes the client connection logging options for the Client VPN endpoint.
    ConnectionNotificationType:
      type: string
      enum:
        - Topic
    ConnectionNotificationState:
      type: string
      enum:
        - Enabled
        - Disabled
    ConnectionNotification:
      type: object
      properties:
        ConnectionNotificationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: connectionNotificationId
              description: The ID of the notification.
        ServiceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: serviceId
              description: The ID of the endpoint service.
        VpcEndpointId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcEndpointId
              description: The ID of the VPC endpoint.
        ConnectionNotificationType:
          allOf:
            - $ref: "#/components/schemas/ConnectionNotificationType"
            - xml:
                name: connectionNotificationType
              description: The type of notification.
        ConnectionNotificationArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: connectionNotificationArn
              description: The ARN of the SNS topic for the notification.
        ConnectionEvents:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: connectionEvents
              description: The events for the notification. Valid values are <code>Accept</code>, <code>Connect</code>, <code>Delete</code>, and <code>Reject</code>.
        ConnectionNotificationState:
          allOf:
            - $ref: "#/components/schemas/ConnectionNotificationState"
            - xml:
                name: connectionNotificationState
              description: The state of the notification.
      description: Describes a connection notification for a VPC endpoint or VPC endpoint service.
    ConnectionNotificationIdsList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ConnectionNotificationId"
          - xml:
              name: item
    ConnectionNotificationSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ConnectionNotification"
          - xml:
              name: item
    ConnectivityType:
      type: string
      enum:
        - private
        - public
    ConversionIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ConversionTaskId"
          - xml:
              name: item
    ImportInstanceTaskDetails:
      type: object
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description of the task.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance.
        Platform:
          allOf:
            - $ref: "#/components/schemas/PlatformValues"
            - xml:
                name: platform
              description: The instance operating system.
        Volumes:
          allOf:
            - $ref: "#/components/schemas/ImportInstanceVolumeDetailSet"
            - xml:
                name: volumes
              description: The volumes.
      description: Describes an import instance task.
    ImportVolumeTaskDetails:
      type: object
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone where the resulting volume will reside.
        BytesConverted:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: bytesConverted
              description: The number of bytes converted so far.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: The description you provided when starting the import volume task.
        Image:
          allOf:
            - $ref: "#/components/schemas/DiskImageDescription"
            - xml:
                name: image
              description: The image.
        Volume:
          allOf:
            - $ref: "#/components/schemas/DiskImageVolumeDescription"
            - xml:
                name: volume
              description: The volume.
      description: Describes an import volume task.
    ConversionTaskState:
      type: string
      enum:
        - active
        - cancelling
        - cancelled
        - completed
    ConversionTask:
      type: object
      properties:
        ConversionTaskId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: conversionTaskId
              description: The ID of the conversion task.
        ExpirationTime:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: expirationTime
              description: The time when the task expires. If the upload isn't complete before the expiration time, we automatically cancel the task.
        ImportInstance:
          allOf:
            - $ref: "#/components/schemas/ImportInstanceTaskDetails"
            - xml:
                name: importInstance
              description: If the task is for importing an instance, this contains information about the import instance task.
        ImportVolume:
          allOf:
            - $ref: "#/components/schemas/ImportVolumeTaskDetails"
            - xml:
                name: importVolume
              description: If the task is for importing a volume, this contains information about the import volume task.
        State:
          allOf:
            - $ref: "#/components/schemas/ConversionTaskState"
            - xml:
                name: state
              description: The state of the conversion task.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: statusMessage
              description: The status message related to the conversion task.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the task.
      description: Describes a conversion task.
    CopyFpgaImageRequest:
      type: object
      required:
        - SourceFpgaImageId
        - SourceRegion
      title: CopyFpgaImageRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        SourceFpgaImageId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the source AFI.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The description for the new AFI.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name for the new AFI. The default is the name of the source AFI.
        SourceRegion:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Region that contains the source AFI.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
    KmsKeyId:
      type: string
    CopyImageRequest:
      type: object
      required:
        - Name
        - SourceImageId
        - SourceRegion
      title: CopyImageRequest
      properties:
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A description for the new AMI in the destination Region.
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: encrypted
              description: Specifies whether the destination snapshots of the copied image should be encrypted. You can encrypt a copy of an unencrypted snapshot, but you cannot create an unencrypted copy of an encrypted snapshot. The default KMS key for Amazon EBS is used unless you specify a non-default Key Management Service (KMS) KMS key using <code>KmsKeyId</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/KmsKeyId"
            - xml:
                name: kmsKeyId
              description: <p>The identifier of the symmetric Key Management Service (KMS) KMS key to use when creating encrypted volumes. If this parameter is not specified, your Amazon Web Services managed KMS key for Amazon EBS is used. If you specify a KMS key, you must also set the encrypted state to <code>true</code>.</p> <p>You can specify a KMS key using any of the following:</p> <ul> <li> <p>Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.</p> </li> <li> <p>Key alias. For example, alias/ExampleAlias.</p> </li> <li> <p>Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.</p> </li> <li> <p>Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.</p> </li> </ul> <p>Amazon Web Services authenticates the KMS key asynchronously. Therefore, if you specify an identifier that is not valid, the action can appear to complete, but eventually fails.</p> <p>The specified KMS key must exist in the destination Region.</p> <p>Amazon EBS does not support asymmetric KMS keys.</p>
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the new AMI in the destination Region.
        SourceImageId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the AMI to copy.
        SourceRegion:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the Region that contains the AMI to copy.
        DestinationOutpostArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The Amazon Resource Name (ARN) of the Outpost to which to copy the AMI. Only specify this parameter when copying an AMI from an Amazon Web Services Region to an Outpost. The AMI must be in the Region of the destination Outpost. You cannot copy an AMI from an Outpost to a Region, from one Outpost to another, or within the same Outpost.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#copy-amis"> Copying AMIs from an Amazon Web Services Region to an Outpost</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for CopyImage.
    CopySnapshotRequest:
      type: object
      required:
        - SourceRegion
        - SourceSnapshotId
      title: CopySnapshotRequest
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A description for the EBS snapshot.
        DestinationOutpostArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The Amazon Resource Name (ARN) of the Outpost to which to copy the snapshot. Only specify this parameter when copying a snapshot from an Amazon Web Services Region to an Outpost. The snapshot must be in the Region for the destination Outpost. You cannot copy a snapshot from an Outpost to a Region, from one Outpost to another, or within the same Outpost.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#copy-snapshots"> Copy snapshots from an Amazon Web Services Region to an Outpost</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
        DestinationRegion:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: destinationRegion
              description: <p>The destination Region to use in the <code>PresignedUrl</code> parameter of a snapshot copy operation. This parameter is only valid for specifying the destination Region in a <code>PresignedUrl</code> parameter, where it is required.</p> <p>The snapshot copy is sent to the regional endpoint that you sent the HTTP request to (for example, <code>ec2.us-east-1.amazonaws.com</code>). With the CLI, this is specified using the <code>--region</code> parameter or the default Region in your Amazon Web Services configuration file.</p>
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: encrypted
              description: To encrypt a copy of an unencrypted snapshot if encryption by default is not enabled, enable encryption using this parameter. Otherwise, omit this parameter. Encrypted snapshots are encrypted, even if you omit this parameter and encryption by default is not enabled. You cannot set this parameter to false. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/KmsKeyId"
            - xml:
                name: kmsKeyId
              description: <p>The identifier of the Key Management Service (KMS) KMS key to use for Amazon EBS encryption. If this parameter is not specified, your KMS key for Amazon EBS is used. If <code>KmsKeyId</code> is specified, the encrypted state must be <code>true</code>.</p> <p>You can specify the KMS key using any of the following:</p> <ul> <li> <p>Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.</p> </li> <li> <p>Key alias. For example, alias/ExampleAlias.</p> </li> <li> <p>Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.</p> </li> <li> <p>Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.</p> </li> </ul> <p>Amazon Web Services authenticates the KMS key asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails.</p>
        PresignedUrl:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: presignedUrl
              description: '<p>When you copy an encrypted source snapshot using the Amazon EC2 Query API, you must supply a pre-signed URL. This parameter is optional for unencrypted snapshots. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html">Query requests</a>.</p> <p>The <code>PresignedUrl</code> should use the snapshot source endpoint, the <code>CopySnapshot</code> action, and include the <code>SourceRegion</code>, <code>SourceSnapshotId</code>, and <code>DestinationRegion</code> parameters. The <code>PresignedUrl</code> must be signed using Amazon Web Services Signature Version 4. Because EBS snapshots are stored in Amazon S3, the signing algorithm for this parameter uses the same logic that is described in <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html">Authenticating Requests: Using Query Parameters (Amazon Web Services Signature Version 4)</a> in the <i>Amazon Simple Storage Service API Reference</i>. An invalid or improperly signed <code>PresignedUrl</code> will cause the copy operation to fail asynchronously, and the snapshot will move to an <code>error</code> state.</p>'
        SourceRegion:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the Region that contains the snapshot to be copied.
        SourceSnapshotId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the EBS snapshot to copy.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the new snapshot.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    CopyTagsFromSource:
      type: string
      enum:
        - volume
    CoreCount:
      type: integer
    CoreCountList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/CoreCount"
          - xml:
              name: item
    CpuOptions:
      type: object
      properties:
        CoreCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: coreCount
              description: The number of CPU cores for the instance.
        ThreadsPerCore:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: threadsPerCore
              description: The number of threads per CPU core.
      description: The CPU options for the instance.
    CpuOptionsRequest:
      type: object
      properties:
        CoreCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of CPU cores for the instance.
        ThreadsPerCore:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of threads per CPU core. To disable multithreading for the instance, specify a value of <code>1</code>. Otherwise, specify the default value of <code>2</code>.
      description: The CPU options for the instance. Both the core count and threads per core must be specified in the request.
    CreateCapacityReservationRequest:
      type: object
      required:
        - InstanceType
        - InstancePlatform
        - InstanceCount
      title: CreateCapacityReservationRequest
      properties:
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensure Idempotency</a>.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The instance type for which to reserve capacity. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide</i>.
        InstancePlatform:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationInstancePlatform"
            - description: The type of operating system for which to reserve capacity.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Availability Zone in which to create the Capacity Reservation.
        AvailabilityZoneId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the Availability Zone in which to create the Capacity Reservation.
        Tenancy:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationTenancy"
            - description: <p>Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:</p> <ul> <li> <p> <code>default</code> - The Capacity Reservation is created on hardware that is shared with other Amazon Web Services accounts.</p> </li> <li> <p> <code>dedicated</code> - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single Amazon Web Services account.</p> </li> </ul>
        InstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The number of instances for which to reserve capacity.</p> <p>Valid range: 1 - 1000</p>"
        EbsOptimized:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the Capacity Reservation supports EBS-optimized instances. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS- optimized instance.
        EphemeralStorage:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the Capacity Reservation supports instances with temporary, block-level storage.
        EndDate:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: <p>The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to <code>expired</code> when it reaches its end date and time.</p> <p>You must provide an <code>EndDate</code> value if <code>EndDateType</code> is <code>limited</code>. Omit <code>EndDate</code> if <code>EndDateType</code> is <code>unlimited</code>.</p> <p>If the <code>EndDateType</code> is <code>limited</code>, the Capacity Reservation is cancelled within an hour from the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55 on 5/31/2019.</p>
        EndDateType:
          allOf:
            - $ref: "#/components/schemas/EndDateType"
            - description: <p>Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:</p> <ul> <li> <p> <code>unlimited</code> - The Capacity Reservation remains active until you explicitly cancel it. Do not provide an <code>EndDate</code> if the <code>EndDateType</code> is <code>unlimited</code>.</p> </li> <li> <p> <code>limited</code> - The Capacity Reservation expires automatically at a specified date and time. You must provide an <code>EndDate</code> value if the <code>EndDateType</code> value is <code>limited</code>.</p> </li> </ul>
        InstanceMatchCriteria:
          allOf:
            - $ref: "#/components/schemas/InstanceMatchCriteria"
            - description: "<p>Indicates the type of instance launches that the Capacity Reservation accepts. The options include:</p> <ul> <li> <p> <code>open</code> - The Capacity Reservation automatically matches all instances that have matching attributes (instance type, platform, and Availability Zone). Instances that have matching attributes run in the Capacity Reservation automatically without specifying any additional parameters.</p> </li> <li> <p> <code>targeted</code> - The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, and Availability Zone), and explicitly target the Capacity Reservation. This ensures that only permitted instances can use the reserved capacity. </p> </li> </ul> <p>Default: <code>open</code> </p>"
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - description: The tags to apply to the Capacity Reservation during launch.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        OutpostArn:
          allOf:
            - $ref: "#/components/schemas/OutpostArn"
            - description: The Amazon Resource Name (ARN) of the Outpost on which to create the Capacity Reservation.
    CreateCarrierGatewayRequest:
      type: object
      required:
        - VpcId
      title: CreateCarrierGatewayRequest
      properties:
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - description: The ID of the VPC to associate with the carrier gateway.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to associate with the carrier gateway.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.
    SelfServicePortal:
      type: string
      enum:
        - enabled
        - disabled
    CreateClientVpnEndpointRequest:
      type: object
      required:
        - ClientCidrBlock
        - ServerCertificateArn
        - AuthenticationOptions
        - ConnectionLogOptions
      title: CreateClientVpnEndpointRequest
      properties:
        ClientCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IPv4 address range, in CIDR notation, from which to assign client IP addresses. The address range cannot overlap with the local CIDR of the VPC in which the associated subnet is located, or the routes that you add manually. The address range cannot be changed after the Client VPN endpoint has been created. The CIDR block should be /22 or greater.
        ServerCertificateArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ARN of the server certificate. For more information, see the <a href="https://docs.aws.amazon.com/acm/latest/userguide/">AWS Certificate Manager User Guide</a>.
        AuthenticationOptions:
          allOf:
            - $ref: "#/components/schemas/ClientVpnAuthenticationRequestList"
            - xml:
                name: Authentication
              description: Information about the authentication method to be used to authenticate clients.
        ConnectionLogOptions:
          allOf:
            - $ref: "#/components/schemas/ConnectionLogOptions"
            - description: <p>Information about the client connection logging options.</p> <p>If you enable client connection logging, data about client connections is sent to a Cloudwatch Logs log stream. The following information is logged:</p> <ul> <li> <p>Client connection requests</p> </li> <li> <p>Client connection results (successful and unsuccessful)</p> </li> <li> <p>Reasons for unsuccessful client connection requests</p> </li> <li> <p>Client connection termination time</p> </li> </ul>
        DnsServers:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - description: Information about the DNS servers to be used for DNS resolution. A Client VPN endpoint can have up to two DNS servers. If no DNS server is specified, the DNS address configured on the device is used for the DNS server.
        TransportProtocol:
          allOf:
            - $ref: "#/components/schemas/TransportProtocol"
            - description: "<p>The transport protocol to be used by the VPN session.</p> <p>Default value: <code>udp</code> </p>"
        VpnPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The port number to assign to the Client VPN endpoint for TCP and UDP traffic.</p> <p>Valid Values: <code>443</code> | <code>1194</code> </p> <p>Default Value: <code>443</code> </p>"
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A brief description of the Client VPN endpoint.
        SplitTunnel:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>Indicates whether split-tunnel is enabled on the AWS Client VPN endpoint.</p> <p>By default, split-tunnel on a VPN endpoint is disabled.</p> <p>For information about split-tunnel VPN endpoints, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html">Split-Tunnel AWS Client VPN Endpoint</a> in the <i>AWS Client VPN Administrator Guide</i>.</p>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the Client VPN endpoint during creation.
        SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/ClientVpnSecurityGroupIdSet"
            - xml:
                name: SecurityGroupId
              description: The IDs of one or more security groups to apply to the target network. You must also specify the ID of the VPC that contains the security groups.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - description: The ID of the VPC to associate with the Client VPN endpoint. If no security group IDs are specified in the request, the default security group for the VPC is applied.
        SelfServicePortal:
          allOf:
            - $ref: "#/components/schemas/SelfServicePortal"
            - description: "<p>Specify whether to enable the self-service portal for the Client VPN endpoint.</p> <p>Default Value: <code>enabled</code> </p>"
        ClientConnectOptions:
          allOf:
            - $ref: "#/components/schemas/ClientConnectOptions"
            - description: The options for managing connection authorization for new client connections.
    CreateClientVpnRouteRequest:
      type: object
      required:
        - ClientVpnEndpointId
        - DestinationCidrBlock
        - TargetVpcSubnetId
      title: CreateClientVpnRouteRequest
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointId"
            - description: The ID of the Client VPN endpoint to which to add the route.
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The IPv4 address range, in CIDR notation, of the route destination. For example:</p> <ul> <li> <p>To add a route for Internet access, enter <code>0.0.0.0/0</code> </p> </li> <li> <p>To add a route for a peered VPC, enter the peered VPC's IPv4 CIDR range</p> </li> <li> <p>To add a route for an on-premises network, enter the AWS Site-to-Site VPN connection's IPv4 CIDR range</p> </li> <li> <p>To add a route for the local network, enter the client CIDR range</p> </li> </ul>
        TargetVpcSubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - description: <p>The ID of the subnet through which you want to route traffic. The specified subnet must be an existing target network of the Client VPN endpoint.</p> <p>Alternatively, if you're adding a route for the local network, specify <code>local</code>.</p>
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A brief description of the route.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    GatewayType:
      type: string
      enum:
        - ipsec.1
    CreateCustomerGatewayRequest:
      type: object
      required:
        - BgpAsn
        - Type
      title: CreateCustomerGatewayRequest
      properties:
        BgpAsn:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>For devices that support BGP, the customer gateway's BGP ASN.</p> <p>Default: 65000</p>"
        PublicIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: IpAddress
              description: The Internet-routable IP address for the customer gateway's outside interface. The address must be static.
        CertificateArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Resource Name (ARN) for the customer gateway certificate.
        Type:
          allOf:
            - $ref: "#/components/schemas/GatewayType"
            - description: The type of VPN connection that this customer gateway supports (<code>ipsec.1</code>).
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the customer gateway.
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>A name for the customer gateway device.</p> <p>Length Constraints: Up to 255 characters.</p>"
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for CreateCustomerGateway.
    CustomerGateway:
      type: object
      properties:
        BgpAsn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: bgpAsn
              description: The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).
        CustomerGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: customerGatewayId
              description: The ID of the customer gateway.
        IpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipAddress
              description: The Internet-routable IP address of the customer gateway's outside interface.
        CertificateArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: certificateArn
              description: The Amazon Resource Name (ARN) for the customer gateway certificate.
        State:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: state
              description: The current state of the customer gateway (<code>pending | available | deleting | deleted</code>).
        Type:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: type
              description: The type of VPN connection the customer gateway supports (<code>ipsec.1</code>).
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: deviceName
              description: The name of customer gateway device.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the customer gateway.
      description: Describes a customer gateway.
    CreateDefaultSubnetRequest:
      type: object
      required:
        - AvailabilityZone
      title: CreateDefaultSubnetRequest
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Availability Zone in which to create the default subnet.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    Subnet:
      type: object
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone of the subnet.
        AvailabilityZoneId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZoneId
              description: The AZ ID of the subnet.
        AvailableIpAddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: availableIpAddressCount
              description: The number of unused private IPv4 addresses in the subnet. The IPv4 addresses for any stopped instances are considered unavailable.
        CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cidrBlock
              description: The IPv4 CIDR block assigned to the subnet.
        DefaultForAz:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: defaultForAz
              description: Indicates whether this is the default subnet for the Availability Zone.
        MapPublicIpOnLaunch:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: mapPublicIpOnLaunch
              description: Indicates whether instances launched in this subnet receive a public IPv4 address.
        MapCustomerOwnedIpOnLaunch:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: mapCustomerOwnedIpOnLaunch
              description: Indicates whether a network interface created in this subnet (including a network interface created by <a>RunInstances</a>) receives a customer-owned IPv4 address.
        CustomerOwnedIpv4Pool:
          allOf:
            - $ref: "#/components/schemas/CoipPoolId"
            - xml:
                name: customerOwnedIpv4Pool
              description: The customer-owned IPv4 address pool associated with the subnet.
        State:
          allOf:
            - $ref: "#/components/schemas/SubnetState"
            - xml:
                name: state
              description: The current state of the subnet.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: subnetId
              description: The ID of the subnet.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC the subnet is in.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the Amazon Web Services account that owns the subnet.
        AssignIpv6AddressOnCreation:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: assignIpv6AddressOnCreation
              description: Indicates whether a network interface created in this subnet (including a network interface created by <a>RunInstances</a>) receives an IPv6 address.
        Ipv6CidrBlockAssociationSet:
          allOf:
            - $ref: "#/components/schemas/SubnetIpv6CidrBlockAssociationSet"
            - xml:
                name: ipv6CidrBlockAssociationSet
              description: Information about the IPv6 CIDR blocks associated with the subnet.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the subnet.
        SubnetArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: subnetArn
              description: The Amazon Resource Name (ARN) of the subnet.
        OutpostArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: outpostArn
              description: The Amazon Resource Name (ARN) of the Outpost.
      description: Describes a subnet.
    CreateDefaultVpcRequest:
      type: object
      title: CreateDefaultVpcRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    Vpc:
      type: object
      properties:
        CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cidrBlock
              description: The primary IPv4 CIDR block for the VPC.
        DhcpOptionsId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: dhcpOptionsId
              description: The ID of the set of DHCP options you've associated with the VPC.
        State:
          allOf:
            - $ref: "#/components/schemas/VpcState"
            - xml:
                name: state
              description: The current state of the VPC.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the Amazon Web Services account that owns the VPC.
        InstanceTenancy:
          allOf:
            - $ref: "#/components/schemas/Tenancy"
            - xml:
                name: instanceTenancy
              description: The allowed tenancy of instances launched into the VPC.
        Ipv6CidrBlockAssociationSet:
          allOf:
            - $ref: "#/components/schemas/VpcIpv6CidrBlockAssociationSet"
            - xml:
                name: ipv6CidrBlockAssociationSet
              description: Information about the IPv6 CIDR blocks associated with the VPC.
        CidrBlockAssociationSet:
          allOf:
            - $ref: "#/components/schemas/VpcCidrBlockAssociationSet"
            - xml:
                name: cidrBlockAssociationSet
              description: Information about the IPv4 CIDR blocks associated with the VPC.
        IsDefault:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: isDefault
              description: Indicates whether the VPC is the default VPC.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the VPC.
      description: Describes a VPC.
    NewDhcpConfigurationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/NewDhcpConfiguration"
          - xml:
              name: item
    CreateDhcpOptionsRequest:
      type: object
      required:
        - DhcpConfigurations
      title: CreateDhcpOptionsRequest
      properties:
        DhcpConfigurations:
          allOf:
            - $ref: "#/components/schemas/NewDhcpConfigurationList"
            - xml:
                name: dhcpConfiguration
              description: A DHCP configuration option.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to assign to the DHCP option.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DhcpOptions:
      type: object
      properties:
        DhcpConfigurations:
          allOf:
            - $ref: "#/components/schemas/DhcpConfigurationList"
            - xml:
                name: dhcpConfigurationSet
              description: One or more DHCP options in the set.
        DhcpOptionsId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: dhcpOptionsId
              description: The ID of the set of DHCP options.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the Amazon Web Services account that owns the DHCP options set.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the DHCP options set.
      description: Describes a set of DHCP options.
    CreateEgressOnlyInternetGatewayRequest:
      type: object
      required:
        - VpcId
      title: CreateEgressOnlyInternetGatewayRequest
      properties:
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - description: The ID of the VPC for which to create the egress-only internet gateway.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to assign to the egress-only internet gateway.
    EgressOnlyInternetGateway:
      type: object
      properties:
        Attachments:
          allOf:
            - $ref: "#/components/schemas/InternetGatewayAttachmentList"
            - xml:
                name: attachmentSet
              description: Information about the attachment of the egress-only internet gateway.
        EgressOnlyInternetGatewayId:
          allOf:
            - $ref: "#/components/schemas/EgressOnlyInternetGatewayId"
            - xml:
                name: egressOnlyInternetGatewayId
              description: The ID of the egress-only internet gateway.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags assigned to the egress-only internet gateway.
      description: Describes an egress-only internet gateway.
    LaunchTemplateAndOverridesResponse:
      type: object
      properties:
        LaunchTemplateSpecification:
          allOf:
            - $ref: "#/components/schemas/FleetLaunchTemplateSpecification"
            - xml:
                name: launchTemplateSpecification
              description: The launch template.
        Overrides:
          allOf:
            - $ref: "#/components/schemas/FleetLaunchTemplateOverrides"
            - xml:
                name: overrides
              description: Any parameters that you specify override the same parameters in the launch template.
      description: Describes a launch template and overrides.
    InstanceLifecycle:
      type: string
      enum:
        - spot
        - on-demand
    CreateFleetError:
      type: object
      properties:
        LaunchTemplateAndOverrides:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateAndOverridesResponse"
            - xml:
                name: launchTemplateAndOverrides
              description: The launch templates and overrides that were used for launching the instances. The values that you specify in the Overrides replace the values in the launch template.
        Lifecycle:
          allOf:
            - $ref: "#/components/schemas/InstanceLifecycle"
            - xml:
                name: lifecycle
              description: Indicates if the instance that could not be launched was a Spot Instance or On-Demand Instance.
        ErrorCode:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: errorCode
              description: The error code that indicates why the instance could not be launched. For more information about error codes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html.html">Error Codes</a>.
        ErrorMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: errorMessage
              description: The error message that describes why the instance could not be launched. For more information about error messages, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html.html">Error Codes</a>.
      description: Describes the instances that could not be launched by the fleet.
    CreateFleetErrorsSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/CreateFleetError"
          - xml:
              name: item
    InstanceIdsSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceId"
          - xml:
              name: item
    PlatformValues:
      type: string
      enum:
        - Windows
    CreateFleetInstance:
      type: object
      properties:
        LaunchTemplateAndOverrides:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateAndOverridesResponse"
            - xml:
                name: launchTemplateAndOverrides
              description: The launch templates and overrides that were used for launching the instances. The values that you specify in the Overrides replace the values in the launch template.
        Lifecycle:
          allOf:
            - $ref: "#/components/schemas/InstanceLifecycle"
            - xml:
                name: lifecycle
              description: Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIdsSet"
            - xml:
                name: instanceIds
              description: The IDs of the instances.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/InstanceType"
            - xml:
                name: instanceType
              description: The instance type.
        Platform:
          allOf:
            - $ref: "#/components/schemas/PlatformValues"
            - xml:
                name: platform
              description: The value is <code>Windows</code> for Windows instances. Otherwise, the value is blank.
      description: Describes the instances that were launched by the fleet.
    CreateFleetInstancesSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/CreateFleetInstance"
          - xml:
              name: item
    SpotOptionsRequest:
      type: object
      properties:
        AllocationStrategy:
          allOf:
            - $ref: "#/components/schemas/SpotAllocationStrategy"
            - description: <p>Indicates how to allocate the target Spot Instance capacity across the Spot Instance pools specified by the EC2 Fleet.</p> <p>If the allocation strategy is <code>lowest-price</code>, EC2 Fleet launches instances from the Spot Instance pools with the lowest price. This is the default allocation strategy.</p> <p>If the allocation strategy is <code>diversified</code>, EC2 Fleet launches instances from all of the Spot Instance pools that you specify.</p> <p>If the allocation strategy is <code>capacity-optimized</code> (recommended), EC2 Fleet launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching. To give certain instance types a higher chance of launching first, use <code>capacity-optimized-prioritized</code>. Set a priority for each instance type by using the <code>Priority</code> parameter for <code>LaunchTemplateOverrides</code>. You can assign the same priority to different <code>LaunchTemplateOverrides</code>. EC2 implements the priorities on a best-effort basis, but optimizes for capacity first. <code>capacity-optimized-prioritized</code> is supported only if your fleet uses a launch template. Note that if the On-Demand <code>AllocationStrategy</code> is set to <code>prioritized</code>, the same priority is applied when fulfilling On-Demand capacity.</p>
        MaintenanceStrategies:
          allOf:
            - $ref: "#/components/schemas/FleetSpotMaintenanceStrategiesRequest"
            - description: The strategies for managing your Spot Instances that are at an elevated risk of being interrupted.
        InstanceInterruptionBehavior:
          allOf:
            - $ref: "#/components/schemas/SpotInstanceInterruptionBehavior"
            - description: The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>.
        InstancePoolsToUseCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>The number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot <b>AllocationStrategy</b> is set to <code>lowest-price</code>. EC2 Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.</p> <p>Note that EC2 Fleet attempts to draw Spot Instances from the number of pools that you specify on a best effort basis. If a pool runs out of Spot capacity before fulfilling your target capacity, EC2 Fleet will continue to fulfill your request by drawing from the next cheapest pool. To ensure that your target capacity is met, you might receive Spot Instances from more than the number of pools that you specified. Similarly, if most of the pools have no Spot capacity, you might receive your full target capacity from fewer than the number of pools that you specified.</p>
        SingleInstanceType:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates that the fleet uses a single instance type to launch all Spot Instances in the fleet. Supported only for fleets of type <code>instant</code>.
        SingleAvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates that the fleet launches all Spot Instances into a single Availability Zone. Supported only for fleets of type <code>instant</code>.
        MinTargetCapacity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The minimum target capacity for Spot Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances.
        MaxTotalPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The maximum amount per hour for Spot Instances that you're willing to pay.
      description: Describes the configuration of Spot Instances in an EC2 Fleet request.
    OnDemandOptionsRequest:
      type: object
      properties:
        AllocationStrategy:
          allOf:
            - $ref: "#/components/schemas/FleetOnDemandAllocationStrategy"
            - description: The order of the launch template overrides to use in fulfilling On-Demand capacity. If you specify <code>lowest-price</code>, EC2 Fleet uses price to determine the order, launching the lowest price first. If you specify <code>prioritized</code>, EC2 Fleet uses the priority that you assigned to each launch template override, launching the highest priority first. If you do not specify a value, EC2 Fleet defaults to <code>lowest-price</code>.
        CapacityReservationOptions:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationOptionsRequest"
            - description: The strategy for using unused Capacity Reservations for fulfilling On-Demand capacity. Supported only for fleets of type <code>instant</code>.
        SingleInstanceType:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet. Supported only for fleets of type <code>instant</code>.
        SingleAvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates that the fleet launches all On-Demand Instances into a single Availability Zone. Supported only for fleets of type <code>instant</code>.
        MinTargetCapacity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances.
        MaxTotalPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The maximum amount per hour for On-Demand Instances that you're willing to pay.
      description: Describes the configuration of On-Demand Instances in an EC2 Fleet.
    FleetExcessCapacityTerminationPolicy:
      type: string
      enum:
        - no-termination
        - termination
    FleetLaunchTemplateConfigListRequest:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/FleetLaunchTemplateConfigRequest"
          - xml:
              name: item
      minItems: 0
      maxItems: 50
    TargetCapacitySpecificationRequest:
      type: object
      required:
        - TotalTargetCapacity
      properties:
        TotalTargetCapacity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of units to request, filled using <code>DefaultTargetCapacityType</code>.
        OnDemandTargetCapacity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of On-Demand units to request.
        SpotTargetCapacity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of Spot units to request.
        DefaultTargetCapacityType:
          allOf:
            - $ref: "#/components/schemas/DefaultTargetCapacityType"
            - description: The default <code>TotalTargetCapacity</code>, which is either <code>Spot</code> or <code>On-Demand</code>.
      description: <p>The number of units to request. You can choose to set the target capacity as the number of instances. Or you can set the target capacity to a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>, you can specify a target capacity of 0 and add capacity later.</p> <p>You can use the On-Demand Instance <code>MaxTotalPrice</code> parameter, the Spot Instance <code>MaxTotalPrice</code> parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, EC2 Fleet will launch instances until it reaches the maximum amount that you're willing to pay. When the maximum amount you're willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity. The <code>MaxTotalPrice</code> parameters are located in <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_OnDemandOptionsRequest">OnDemandOptionsRequest</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotOptionsRequest">SpotOptionsRequest</a>.</p>
    CreateFleetRequest:
      type: object
      required:
        - LaunchTemplateConfigs
        - TargetCapacitySpecification
      title: CreateFleetRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
        SpotOptions:
          allOf:
            - $ref: "#/components/schemas/SpotOptionsRequest"
            - description: Describes the configuration of Spot Instances in an EC2 Fleet.
        OnDemandOptions:
          allOf:
            - $ref: "#/components/schemas/OnDemandOptionsRequest"
            - description: Describes the configuration of On-Demand Instances in an EC2 Fleet.
        ExcessCapacityTerminationPolicy:
          allOf:
            - $ref: "#/components/schemas/FleetExcessCapacityTerminationPolicy"
            - description: Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.
        LaunchTemplateConfigs:
          allOf:
            - $ref: "#/components/schemas/FleetLaunchTemplateConfigListRequest"
            - description: The configuration for the EC2 Fleet.
        TargetCapacitySpecification:
          allOf:
            - $ref: "#/components/schemas/TargetCapacitySpecificationRequest"
            - description: The number of units to request.
        TerminateInstancesWithExpiration:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether running instances should be terminated when the EC2 Fleet expires.
        Type:
          allOf:
            - $ref: "#/components/schemas/FleetType"
            - description: <p>The fleet type. The default value is <code>maintain</code>.</p> <ul> <li> <p> <code>maintain</code> - The EC2 Fleet places an asynchronous request for your desired capacity, and continues to maintain your desired Spot capacity by replenishing interrupted Spot Instances.</p> </li> <li> <p> <code>request</code> - The EC2 Fleet places an asynchronous one-time request for your desired capacity, but does submit Spot requests in alternative capacity pools if Spot capacity is unavailable, and does not maintain Spot capacity if Spot Instances are interrupted.</p> </li> <li> <p> <code>instant</code> - The EC2 Fleet places a synchronous one-time request for your desired capacity, and returns errors for any instances that could not be launched.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-configuration-strategies.html#ec2-fleet-request-type">EC2 Fleet request types</a> in the <i>Amazon EC2 User Guide</i>.</p>
        ValidFrom:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The start date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). The default is to start fulfilling the request immediately.
        ValidUntil:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The end date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.
        ReplaceUnhealthyInstances:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether EC2 Fleet should replace unhealthy Spot Instances. Supported only for fleets of type <code>maintain</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#ec2-fleet-health-checks">EC2 Fleet health checks</a> in the <i>Amazon EC2 User Guide</i>.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: <p>The key-value pair for tagging the EC2 Fleet request on creation. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-resources">Tagging your resources</a>.</p> <p>If the fleet type is <code>instant</code>, specify a resource type of <code>fleet</code> to tag the fleet or <code>instance</code> to tag the instances at launch.</p> <p>If the fleet type is <code>maintain</code> or <code>request</code>, specify a resource type of <code>fleet</code> to tag the fleet. You cannot specify a resource type of <code>instance</code>. To tag instances at launch, specify the tags in a <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#create-launch-template">launch template</a>.</p>
        Context:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Reserved.
    FlowLogResourceIds:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/FlowLogResourceId"
          - xml:
              name: item
    FlowLogsResourceType:
      type: string
      enum:
        - VPC
        - Subnet
        - NetworkInterface
    TrafficType:
      type: string
      enum:
        - ACCEPT
        - REJECT
        - ALL
    LogDestinationType:
      type: string
      enum:
        - cloud-watch-logs
        - s3
    CreateFlowLogsRequest:
      type: object
      required:
        - ResourceIds
        - ResourceType
        - TrafficType
      title: CreateFlowLogsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to ensure idempotency</a>.
        DeliverLogsPermissionArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The ARN for the IAM role that permits Amazon EC2 to publish flow logs to a CloudWatch Logs log group in your account.</p> <p>If you specify <code>LogDestinationType</code> as <code>s3</code>, do not specify <code>DeliverLogsPermissionArn</code> or <code>LogGroupName</code>.</p>
        LogGroupName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The name of a new or existing CloudWatch Logs log group where Amazon EC2 publishes your flow logs.</p> <p>If you specify <code>LogDestinationType</code> as <code>s3</code>, do not specify <code>DeliverLogsPermissionArn</code> or <code>LogGroupName</code>.</p>
        ResourceIds:
          allOf:
            - $ref: "#/components/schemas/FlowLogResourceIds"
            - xml:
                name: ResourceId
              description: "<p>The ID of the subnet, network interface, or VPC for which you want to create a flow log.</p> <p>Constraints: Maximum of 1000 resources</p>"
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/FlowLogsResourceType"
            - description: The type of resource for which to create the flow log. For example, if you specified a VPC ID for the <code>ResourceId</code> property, specify <code>VPC</code> for this property.
        TrafficType:
          allOf:
            - $ref: "#/components/schemas/TrafficType"
            - description: The type of traffic to log. You can log traffic that the resource accepts or rejects, or all traffic.
        LogDestinationType:
          allOf:
            - $ref: "#/components/schemas/LogDestinationType"
            - description: "<p>Specifies the type of destination to which the flow log data is to be published. Flow log data can be published to CloudWatch Logs or Amazon S3. To publish flow log data to CloudWatch Logs, specify <code>cloud-watch-logs</code>. To publish flow log data to Amazon S3, specify <code>s3</code>.</p> <p>If you specify <code>LogDestinationType</code> as <code>s3</code>, do not specify <code>DeliverLogsPermissionArn</code> or <code>LogGroupName</code>.</p> <p>Default: <code>cloud-watch-logs</code> </p>"
        LogDestination:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>Specifies the destination to which the flow log data is to be published. Flow log data can be published to a CloudWatch Logs log group or an Amazon S3 bucket. The value specified for this parameter depends on the value specified for <code>LogDestinationType</code>.</p> <p>If <code>LogDestinationType</code> is not specified or <code>cloud-watch-logs</code>, specify the Amazon Resource Name (ARN) of the CloudWatch Logs log group. For example, to publish to a log group called <code>my-logs</code>, specify <code>arn:aws:logs:us-east-1:123456789012:log-group:my-logs</code>. Alternatively, use <code>LogGroupName</code> instead.</p> <p>If LogDestinationType is <code>s3</code>, specify the ARN of the Amazon S3 bucket. You can also specify a subfolder in the bucket. To specify a subfolder in the bucket, use the following ARN format: <code>bucket_ARN/subfolder_name/</code>. For example, to specify a subfolder named <code>my-logs</code> in a bucket named <code>my-bucket</code>, use the following ARN: <code>arn:aws:s3:::my-bucket/my-logs/</code>. You cannot use <code>AWSLogs</code> as a subfolder name. This is a reserved term.</p>"
        LogFormat:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The fields to include in the flow log record, in the order in which they should appear. For a list of available fields, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html#flow-log-records">Flow log records</a>. If you omit this parameter, the flow log is created using the default format. If you specify this parameter, you must specify at least one field.</p> <p>Specify the fields using the <code>${field-id}</code> format, separated by spaces. For the CLI, use single quotation marks (' ') to surround the parameter value.</p>
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the flow logs.
        MaxAggregationInterval:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: '<p>The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. You can specify 60 seconds (1 minute) or 600 seconds (10 minutes).</p> <p>When a network interface is attached to a <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances">Nitro-based instance</a>, the aggregation interval is always 60 seconds or less, regardless of the value that you specify.</p> <p>Default: 600</p>'
    StorageLocation:
      type: object
      properties:
        Bucket:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the S3 bucket.
        Key:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The key.
      description: Describes a storage location in Amazon S3.
    CreateFpgaImageRequest:
      type: object
      required:
        - InputStorageLocation
      title: CreateFpgaImageRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InputStorageLocation:
          allOf:
            - $ref: "#/components/schemas/StorageLocation"
            - description: The location of the encrypted design checkpoint in Amazon S3. The input must be a tarball.
        LogsStorageLocation:
          allOf:
            - $ref: "#/components/schemas/StorageLocation"
            - description: The location in Amazon S3 for the output logs.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A description for the AFI.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A name for the AFI.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the FPGA image during creation.
    CreateImageRequest:
      type: object
      required:
        - InstanceId
        - Name
      title: CreateImageRequest
      properties:
        BlockDeviceMappings:
          allOf:
            - $ref: "#/components/schemas/BlockDeviceMappingRequestList"
            - xml:
                name: blockDeviceMapping
              description: The block device mappings. This parameter cannot be used to modify the encryption status of existing volumes or snapshots. To create an AMI with encrypted snapshots, use the <a>CopyImage</a> action.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description for the new image.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - xml:
                name: instanceId
              description: The ID of the instance.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: name
              description: "<p>A name for the new image.</p> <p>Constraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs (@), or underscores(_)</p>"
        NoReboot:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: noReboot
              description: By default, Amazon EC2 attempts to shut down and reboot the instance before creating the image. If the <code>No Reboot</code> option is set, Amazon EC2 doesn't shut down the instance before creating the image. Without a reboot, the AMI will be crash consistent (all the volumes are snapshotted at the same time), but not application consistent (all the operating system buffers are not flushed to disk before the snapshots are created).
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: <p>The tags to apply to the AMI and snapshots on creation. You can tag the AMI, the snapshots, or both.</p> <ul> <li> <p>To tag the AMI, the value for <code>ResourceType</code> must be <code>image</code>.</p> </li> <li> <p>To tag the snapshots that are created of the root volume and of other Amazon EBS volumes that are attached to the instance, the value for <code>ResourceType</code> must be <code>snapshot</code>. The same tag is applied to all of the snapshots that are created.</p> </li> </ul> <p>If you specify other values for <code>ResourceType</code>, the request fails.</p> <p>To tag an AMI or snapshot after it has been created, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html">CreateTags</a>. </p>
    InstanceEventWindowTimeRangeRequestSet:
      type: array
      items:
        $ref: "#/components/schemas/InstanceEventWindowTimeRangeRequest"
    InstanceEventWindowCronExpression:
      type: string
    CreateInstanceEventWindowRequest:
      type: object
      title: CreateInstanceEventWindowRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the event window.
        TimeRanges:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindowTimeRangeRequestSet"
            - xml:
                name: TimeRange
              description: The time range for the event window. If you specify a time range, you can't specify a cron expression.
        CronExpression:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindowCronExpression"
            - description: <p>The cron expression for the event window, for example, <code>* 0-4,20-23 * * 1,5</code>. If you specify a cron expression, you can't specify a time range.</p> <p>Constraints:</p> <ul> <li> <p>Only hour and day of the week values are supported.</p> </li> <li> <p>For day of the week values, you can specify either integers <code>0</code> through <code>6</code>, or alternative single values <code>SUN</code> through <code>SAT</code>.</p> </li> <li> <p>The minute, month, and year must be specified by <code>*</code>.</p> </li> <li> <p>The hour value must be one or a multiple range, for example, <code>0-4</code> or <code>0-4,20-23</code>.</p> </li> <li> <p>Each hour range must be &gt;= 2 hours, for example, <code>0-2</code> or <code>20-23</code>.</p> </li> <li> <p>The event window must be &gt;= 4 hours. The combined total time ranges in the event window must be &gt;= 4 hours.</p> </li> </ul> <p>For more information about cron expressions, see <a href="https://en.wikipedia.org/wiki/Cron">cron</a> on the <i>Wikipedia website</i>.</p>
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the event window.
    ExportToS3TaskSpecification:
      type: object
      properties:
        ContainerFormat:
          allOf:
            - $ref: "#/components/schemas/ContainerFormat"
            - xml:
                name: containerFormat
              description: The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported.
        DiskImageFormat:
          allOf:
            - $ref: "#/components/schemas/DiskImageFormat"
            - xml:
                name: diskImageFormat
              description: The format for the exported image.
        S3Bucket:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: s3Bucket
              description: The Amazon S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACP permissions to the Amazon Web Services account <code>vm-import-export@amazon.com</code>.
        S3Prefix:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: s3Prefix
              description: The image is written to a single object in the Amazon S3 bucket at the S3 key s3prefix + exportTaskId + '.' + diskImageFormat.
      description: Describes an export instance task.
    ExportEnvironment:
      type: string
      enum:
        - citrix
        - vmware
        - microsoft
    CreateInstanceExportTaskRequest:
      type: object
      required:
        - ExportToS3Task
        - InstanceId
        - TargetEnvironment
      title: CreateInstanceExportTaskRequest
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description for the conversion task or the resource being exported. The maximum length is 255 characters.
        ExportToS3Task:
          allOf:
            - $ref: "#/components/schemas/ExportToS3TaskSpecification"
            - xml:
                name: exportToS3
              description: The format and location for an export instance task.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - xml:
                name: instanceId
              description: The ID of the instance.
        TargetEnvironment:
          allOf:
            - $ref: "#/components/schemas/ExportEnvironment"
            - xml:
                name: targetEnvironment
              description: The target virtualization environment.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the export instance task during creation.
    ExportTask:
      type: object
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description of the resource being exported.
        ExportTaskId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: exportTaskId
              description: The ID of the export task.
        ExportToS3Task:
          allOf:
            - $ref: "#/components/schemas/ExportToS3Task"
            - xml:
                name: exportToS3
              description: Information about the export task.
        InstanceExportDetails:
          allOf:
            - $ref: "#/components/schemas/InstanceExportDetails"
            - xml:
                name: instanceExport
              description: Information about the instance to export.
        State:
          allOf:
            - $ref: "#/components/schemas/ExportTaskState"
            - xml:
                name: state
              description: The state of the export task.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: statusMessage
              description: The status message related to the export task.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags for the export task.
      description: Describes an export instance task.
    CreateInternetGatewayRequest:
      type: object
      title: CreateInternetGatewayRequest
      properties:
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to assign to the internet gateway.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    InternetGateway:
      type: object
      properties:
        Attachments:
          allOf:
            - $ref: "#/components/schemas/InternetGatewayAttachmentList"
            - xml:
                name: attachmentSet
              description: Any VPCs attached to the internet gateway.
        InternetGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: internetGatewayId
              description: The ID of the internet gateway.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the Amazon Web Services account that owns the internet gateway.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the internet gateway.
      description: Describes an internet gateway.
    KeyType:
      type: string
      enum:
        - rsa
        - ed25519
    CreateKeyPairRequest:
      type: object
      required:
        - KeyName
      title: CreateKeyPairRequest
      properties:
        KeyName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>A unique name for the key pair.</p> <p>Constraints: Up to 255 ASCII characters</p>"
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        KeyType:
          allOf:
            - $ref: "#/components/schemas/KeyType"
            - description: "<p>The type of key pair. Note that ED25519 keys are not supported for Windows instances, EC2 Instance Connect, and EC2 Serial Console.</p> <p>Default: <code>rsa</code> </p>"
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the new key pair.
    VersionDescription:
      type: string
      minLength: 0
      maxLength: 255
    RequestLaunchTemplateData:
      type: object
      properties:
        KernelId:
          allOf:
            - $ref: "#/components/schemas/KernelId"
            - description: <p>The ID of the kernel.</p> <important> <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html">User Provided Kernels</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </important>
        EbsOptimized:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.
        IamInstanceProfile:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateIamInstanceProfileSpecificationRequest"
            - description: The name or Amazon Resource Name (ARN) of an IAM instance profile.
        BlockDeviceMappings:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateBlockDeviceMappingRequestList"
            - xml:
                name: BlockDeviceMapping
              description: The block device mapping.
        NetworkInterfaces:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList"
            - xml:
                name: NetworkInterface
              description: One or more network interfaces. If you specify a network interface, you must specify any security groups and subnets as part of the network interface.
        ImageId:
          allOf:
            - $ref: "#/components/schemas/ImageId"
            - description: The ID of the AMI.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/InstanceType"
            - description: The instance type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance Types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
        KeyName:
          allOf:
            - $ref: "#/components/schemas/KeyPairName"
            - description: <p>The name of the key pair. You can create a key pair using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html">CreateKeyPair</a> or <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html">ImportKeyPair</a>.</p> <important> <p>If you do not specify a key pair, you can't connect to the instance unless you choose an AMI that is configured to allow users another way to log in.</p> </important>
        Monitoring:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplatesMonitoringRequest"
            - description: The monitoring for the instance.
        Placement:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplatePlacementRequest"
            - description: The placement for the instance.
        RamDiskId:
          allOf:
            - $ref: "#/components/schemas/RamdiskId"
            - description: <p>The ID of the RAM disk.</p> <important> <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html">User Provided Kernels</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </important>
        DisableApiTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: If you set this parameter to <code>true</code>, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html">ModifyInstanceAttribute</a>. Alternatively, if you set <code>InstanceInitiatedShutdownBehavior</code> to <code>terminate</code>, you can terminate the instance by running the shutdown command from the instance.
        InstanceInitiatedShutdownBehavior:
          allOf:
            - $ref: "#/components/schemas/ShutdownBehavior"
            - description: "<p>Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).</p> <p>Default: <code>stop</code> </p>"
        UserData:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The user data to make available to the instance. You must provide base64-encoded text. User data is limited to 16 KB. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html">Running Commands on Your Linux Instance at Launch</a> (Linux) or <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html#instancedata-add-user-data">Adding User Data</a> (Windows).</p> <p>If you are creating the launch template for use with Batch, the user data must be provided in the <a href="https://cloudinit.readthedocs.io/en/latest/topics/format.html#mime-multi-part-archive"> MIME multi-part archive format</a>. For more information, see <a href="https://docs.aws.amazon.com/batch/latest/userguide/launch-templates.html">Amazon EC2 user data in launch templates</a> in the <i>Batch User Guide</i>.</p>
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateTagSpecificationRequestList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html">CreateTags</a>.
        ElasticGpuSpecifications:
          allOf:
            - $ref: "#/components/schemas/ElasticGpuSpecificationList"
            - xml:
                name: ElasticGpuSpecification
              description: An elastic GPU to associate with the instance.
        ElasticInferenceAccelerators:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateElasticInferenceAcceleratorList"
            - xml:
                name: ElasticInferenceAccelerator
              description: " The elastic inference accelerator for the instance. "
        SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupIdStringList"
            - xml:
                name: SecurityGroupId
              description: One or more security group IDs. You can create a security group using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html">CreateSecurityGroup</a>. You cannot specify both a security group ID and security name in the same request.
        SecurityGroups:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupStringList"
            - xml:
                name: SecurityGroup
              description: "[EC2-Classic, default VPC] One or more security group names. For a nondefault VPC, you must use security group IDs instead. You cannot specify both a security group ID and security name in the same request."
        InstanceMarketOptions:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateInstanceMarketOptionsRequest"
            - description: The market (purchasing) option for the instances.
        CreditSpecification:
          allOf:
            - $ref: "#/components/schemas/CreditSpecificationRequest"
            - description: The credit option for CPU usage of the instance. Valid for T2, T3, or T3a instances only.
        CpuOptions:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateCpuOptionsRequest"
            - description: The CPU options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html">Optimizing CPU Options</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
        CapacityReservationSpecification:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateCapacityReservationSpecificationRequest"
            - description: The Capacity Reservation targeting option. If you do not specify this parameter, the instance's Capacity Reservation preference defaults to <code>open</code>, which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).
        LicenseSpecifications:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateLicenseSpecificationListRequest"
            - xml:
                name: LicenseSpecification
              description: The license configurations.
        HibernationOptions:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateHibernationOptionsRequest"
            - description: Indicates whether an instance is enabled for hibernation. This parameter is valid only if the instance meets the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites">hibernation prerequisites</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
        MetadataOptions:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateInstanceMetadataOptionsRequest"
            - description: The metadata options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance metadata and user data</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
        EnclaveOptions:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateEnclaveOptionsRequest"
            - description: <p>Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves. For more information, see <a href="https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html"> What is Amazon Web Services Nitro Enclaves?</a> in the <i>Amazon Web Services Nitro Enclaves User Guide</i>.</p> <p>You can't enable Amazon Web Services Nitro Enclaves and hibernation on the same instance.</p>
      description: The information to include in the launch template.
    CreateLaunchTemplateRequest:
      type: object
      required:
        - LaunchTemplateName
        - LaunchTemplateData
      title: CreateLaunchTemplateRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: '<p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p> <p>Constraint: Maximum 128 ASCII characters.</p>'
        LaunchTemplateName:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateName"
            - description: A name for the launch template.
        VersionDescription:
          allOf:
            - $ref: "#/components/schemas/VersionDescription"
            - description: A description for the first version of the launch template.
        LaunchTemplateData:
          allOf:
            - $ref: "#/components/schemas/RequestLaunchTemplateData"
            - description: The information for the launch template.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the launch template during creation.
    LaunchTemplate:
      type: object
      properties:
        LaunchTemplateId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: launchTemplateId
              description: The ID of the launch template.
        LaunchTemplateName:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateName"
            - xml:
                name: launchTemplateName
              description: The name of the launch template.
        CreateTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: createTime
              description: The time launch template was created.
        CreatedBy:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: createdBy
              description: "The principal that created the launch template. "
        DefaultVersionNumber:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: defaultVersionNumber
              description: The version number of the default version of the launch template.
        LatestVersionNumber:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: latestVersionNumber
              description: The version number of the latest version of the launch template.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags for the launch template.
      description: Describes a launch template.
    ValidationWarning:
      type: object
      properties:
        Errors:
          allOf:
            - $ref: "#/components/schemas/ErrorSet"
            - xml:
                name: errorSet
              description: The error codes and error messages.
      description: The error codes and error messages that are returned for the parameters or parameter combinations that are not valid when a new launch template or new version of a launch template is created.
    CreateLaunchTemplateVersionRequest:
      type: object
      required:
        - LaunchTemplateData
      title: CreateLaunchTemplateVersionRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: '<p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p> <p>Constraint: Maximum 128 ASCII characters.</p>'
        LaunchTemplateId:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateId"
            - description: The ID of the launch template. You must specify either the launch template ID or launch template name in the request.
        LaunchTemplateName:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateName"
            - description: The name of the launch template. You must specify either the launch template ID or launch template name in the request.
        SourceVersion:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The version number of the launch template version on which to base the new version. The new version inherits the same launch parameters as the source version, except for parameters that you specify in <code>LaunchTemplateData</code>. Snapshots applied to the block device mapping are ignored when creating a new version unless they are explicitly included.
        VersionDescription:
          allOf:
            - $ref: "#/components/schemas/VersionDescription"
            - description: A description for the version of the launch template.
        LaunchTemplateData:
          allOf:
            - $ref: "#/components/schemas/RequestLaunchTemplateData"
            - description: The information for the launch template.
    LaunchTemplateVersion:
      type: object
      properties:
        LaunchTemplateId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: launchTemplateId
              description: The ID of the launch template.
        LaunchTemplateName:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateName"
            - xml:
                name: launchTemplateName
              description: The name of the launch template.
        VersionNumber:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: versionNumber
              description: The version number.
        VersionDescription:
          allOf:
            - $ref: "#/components/schemas/VersionDescription"
            - xml:
                name: versionDescription
              description: The description for the version.
        CreateTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: createTime
              description: The time the version was created.
        CreatedBy:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: createdBy
              description: The principal that created the version.
        DefaultVersion:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: defaultVersion
              description: Indicates whether the version is the default version.
        LaunchTemplateData:
          allOf:
            - $ref: "#/components/schemas/ResponseLaunchTemplateData"
            - xml:
                name: launchTemplateData
              description: Information about the launch template.
      description: Describes a launch template version.
    CreateLocalGatewayRouteRequest:
      type: object
      required:
        - DestinationCidrBlock
        - LocalGatewayRouteTableId
        - LocalGatewayVirtualInterfaceGroupId
      title: CreateLocalGatewayRouteRequest
      properties:
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The CIDR range used for destination matches. Routing decisions are based on the most specific match.
        LocalGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRoutetableId"
            - description: The ID of the local gateway route table.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        LocalGatewayVirtualInterfaceGroupId:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayVirtualInterfaceGroupId"
            - description: The ID of the virtual interface group.
    LocalGatewayRoute:
      type: object
      properties:
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: destinationCidrBlock
              description: The CIDR block used for destination matches.
        LocalGatewayVirtualInterfaceGroupId:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayVirtualInterfaceGroupId"
            - xml:
                name: localGatewayVirtualInterfaceGroupId
              description: The ID of the virtual interface group.
        Type:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRouteType"
            - xml:
                name: type
              description: The route type.
        State:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRouteState"
            - xml:
                name: state
              description: The state of the route.
        LocalGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRoutetableId"
            - xml:
                name: localGatewayRouteTableId
              description: The ID of the local gateway route table.
        LocalGatewayRouteTableArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - xml:
                name: localGatewayRouteTableArn
              description: The Amazon Resource Name (ARN) of the local gateway route table.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The AWS account ID that owns the local gateway route.
      description: Describes a route for a local gateway route table.
    CreateLocalGatewayRouteTableVpcAssociationRequest:
      type: object
      required:
        - LocalGatewayRouteTableId
        - VpcId
      title: CreateLocalGatewayRouteTableVpcAssociationRequest
      properties:
        LocalGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRoutetableId"
            - description: The ID of the local gateway route table.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - description: The ID of the VPC.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to assign to the local gateway route table VPC association.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    LocalGatewayRouteTableVpcAssociation:
      type: object
      properties:
        LocalGatewayRouteTableVpcAssociationId:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRouteTableVpcAssociationId"
            - xml:
                name: localGatewayRouteTableVpcAssociationId
              description: The ID of the association.
        LocalGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: localGatewayRouteTableId
              description: The ID of the local gateway route table.
        LocalGatewayRouteTableArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - xml:
                name: localGatewayRouteTableArn
              description: The Amazon Resource Name (ARN) of the local gateway route table for the association.
        LocalGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: localGatewayId
              description: The ID of the local gateway.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The AWS account ID that owns the local gateway route table for the association.
        State:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: state
              description: The state of the association.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags assigned to the association.
      description: Describes an association between a local gateway route table and a VPC.
    CreateManagedPrefixListRequest:
      type: object
      required:
        - PrefixListName
        - MaxEntries
        - AddressFamily
      title: CreateManagedPrefixListRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        PrefixListName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>A name for the prefix list.</p> <p>Constraints: Up to 255 characters in length. The name cannot start with <code>com.amazonaws</code>.</p>"
        Entries:
          allOf:
            - $ref: "#/components/schemas/AddPrefixListEntries"
            - xml:
                name: Entry
              description: One or more entries for the prefix list.
        MaxEntries:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of entries for the prefix list.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the prefix list during creation.
        AddressFamily:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The IP address type.</p> <p>Valid Values: <code>IPv4</code> | <code>IPv6</code> </p>"
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: '<p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p> <p>Constraints: Up to 255 UTF-8 characters in length.</p>'
    ManagedPrefixList:
      type: object
      properties:
        PrefixListId:
          allOf:
            - $ref: "#/components/schemas/PrefixListResourceId"
            - xml:
                name: prefixListId
              description: The ID of the prefix list.
        AddressFamily:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: addressFamily
              description: The IP address version.
        State:
          allOf:
            - $ref: "#/components/schemas/PrefixListState"
            - xml:
                name: state
              description: The current state of the prefix list.
        StateMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: stateMessage
              description: The state message.
        PrefixListArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - xml:
                name: prefixListArn
              description: The Amazon Resource Name (ARN) for the prefix list.
        PrefixListName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: prefixListName
              description: The name of the prefix list.
        MaxEntries:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: maxEntries
              description: The maximum number of entries for the prefix list.
        Version:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: version
              description: The version of the prefix list.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags for the prefix list.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the owner of the prefix list.
      description: Describes a managed prefix list.
    CreateNatGatewayRequest:
      type: object
      required:
        - SubnetId
      title: CreateNatGatewayRequest
      properties:
        AllocationId:
          allOf:
            - $ref: "#/components/schemas/AllocationId"
            - description: "[Public NAT gateways only] The allocation ID of an Elastic IP address to associate with the NAT gateway. You cannot specify an Elastic IP address with a private NAT gateway. If the Elastic IP address is associated with another resource, you must first disassociate it."
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: '<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.</p> <p>Constraint: Maximum 64 ASCII characters.</p>'
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - description: The subnet in which to create the NAT gateway.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to assign to the NAT gateway.
        ConnectivityType:
          allOf:
            - $ref: "#/components/schemas/ConnectivityType"
            - description: Indicates whether the NAT gateway supports public or private connectivity. The default is public connectivity.
    NatGateway:
      type: object
      properties:
        CreateTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: createTime
              description: The date and time the NAT gateway was created.
        DeleteTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: deleteTime
              description: The date and time the NAT gateway was deleted, if applicable.
        FailureCode:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: failureCode
              description: If the NAT gateway could not be created, specifies the error code for the failure. (<code>InsufficientFreeAddressesInSubnet</code> | <code>Gateway.NotAttached</code> | <code>InvalidAllocationID.NotFound</code> | <code>Resource.AlreadyAssociated</code> | <code>InternalError</code> | <code>InvalidSubnetID.NotFound</code>)
        FailureMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: failureMessage
              description: '<p>If the NAT gateway could not be created, specifies the error message for the failure, that corresponds to the error code.</p> <ul> <li> <p>For InsufficientFreeAddressesInSubnet: "Subnet has insufficient free addresses to create this NAT gateway"</p> </li> <li> <p>For Gateway.NotAttached: "Network vpc-xxxxxxxx has no Internet gateway attached"</p> </li> <li> <p>For InvalidAllocationID.NotFound: "Elastic IP address eipalloc-xxxxxxxx could not be associated with this NAT gateway"</p> </li> <li> <p>For Resource.AlreadyAssociated: "Elastic IP address eipalloc-xxxxxxxx is already associated"</p> </li> <li> <p>For InternalError: "Network interface eni-xxxxxxxx, created and used internally by this NAT gateway is in an invalid state. Please try again."</p> </li> <li> <p>For InvalidSubnetID.NotFound: "The specified subnet subnet-xxxxxxxx does not exist or could not be found."</p> </li> </ul>'
        NatGatewayAddresses:
          allOf:
            - $ref: "#/components/schemas/NatGatewayAddressList"
            - xml:
                name: natGatewayAddressSet
              description: Information about the IP addresses and network interface associated with the NAT gateway.
        NatGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: natGatewayId
              description: The ID of the NAT gateway.
        ProvisionedBandwidth:
          allOf:
            - $ref: "#/components/schemas/ProvisionedBandwidth"
            - xml:
                name: provisionedBandwidth
              description: Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.
        State:
          allOf:
            - $ref: "#/components/schemas/NatGatewayState"
            - xml:
                name: state
              description: "<p>The state of the NAT gateway.</p> <ul> <li> <p> <code>pending</code>: The NAT gateway is being created and is not ready to process traffic.</p> </li> <li> <p> <code>failed</code>: The NAT gateway could not be created. Check the <code>failureCode</code> and <code>failureMessage</code> fields for the reason.</p> </li> <li> <p> <code>available</code>: The NAT gateway is able to process traffic. This status remains until you delete the NAT gateway, and does not indicate the health of the NAT gateway.</p> </li> <li> <p> <code>deleting</code>: The NAT gateway is in the process of being terminated and may still be processing traffic.</p> </li> <li> <p> <code>deleted</code>: The NAT gateway has been terminated and is no longer processing traffic.</p> </li> </ul>"
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: subnetId
              description: The ID of the subnet in which the NAT gateway is located.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC in which the NAT gateway is located.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags for the NAT gateway.
        ConnectivityType:
          allOf:
            - $ref: "#/components/schemas/ConnectivityType"
            - xml:
                name: connectivityType
              description: Indicates whether the NAT gateway supports public or private connectivity.
      description: Describes a NAT gateway.
    IcmpTypeCode:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: code
              description: The ICMP code. A value of -1 means all codes for the specified ICMP type.
        Type:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: type
              description: The ICMP type. A value of -1 means all types.
      description: Describes the ICMP type and code.
    RuleAction:
      type: string
      enum:
        - allow
        - deny
    CreateNetworkAclEntryRequest:
      type: object
      required:
        - Egress
        - NetworkAclId
        - Protocol
        - RuleAction
        - RuleNumber
      title: CreateNetworkAclEntryRequest
      properties:
        CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cidrBlock
              description: The IPv4 network range to allow or deny, in CIDR notation (for example <code>172.16.0.0/24</code>). We modify the specified CIDR block to its canonical form; for example, if you specify <code>100.68.0.18/18</code>, we modify it to <code>100.68.0.0/18</code>.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Egress:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: egress
              description: Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet).
        IcmpTypeCode:
          allOf:
            - $ref: "#/components/schemas/IcmpTypeCode"
            - xml:
                name: Icmp
              description: "ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying protocol 1 (ICMP) or protocol 58 (ICMPv6) with an IPv6 CIDR block."
        Ipv6CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipv6CidrBlock
              description: The IPv6 network range to allow or deny, in CIDR notation (for example <code>2001:db8:1234:1a00::/64</code>).
        NetworkAclId:
          allOf:
            - $ref: "#/components/schemas/NetworkAclId"
            - xml:
                name: networkAclId
              description: The ID of the network ACL.
        PortRange:
          allOf:
            - $ref: "#/components/schemas/PortRange"
            - xml:
                name: portRange
              description: "TCP or UDP protocols: The range of ports the rule applies to. Required if specifying protocol 6 (TCP) or 17 (UDP)."
        Protocol:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: protocol
              description: The protocol number. A value of "-1" means all protocols. If you specify "-1" or a protocol number other than "6" (TCP), "17" (UDP), or "1" (ICMP), traffic on all ports is allowed, regardless of any ports or ICMP types or codes that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.
        RuleAction:
          allOf:
            - $ref: "#/components/schemas/RuleAction"
            - xml:
                name: ruleAction
              description: Indicates whether to allow or deny the traffic that matches the rule.
        RuleNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: ruleNumber
              description: "<p>The rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.</p> <p>Constraints: Positive integer from 1 to 32766. The range 32767 to 65535 is reserved for internal use.</p>"
    CreateNetworkAclRequest:
      type: object
      required:
        - VpcId
      title: CreateNetworkAclRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - xml:
                name: vpcId
              description: The ID of the VPC.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to assign to the network ACL.
    NetworkAcl:
      type: object
      properties:
        Associations:
          allOf:
            - $ref: "#/components/schemas/NetworkAclAssociationList"
            - xml:
                name: associationSet
              description: Any associations between the network ACL and one or more subnets
        Entries:
          allOf:
            - $ref: "#/components/schemas/NetworkAclEntryList"
            - xml:
                name: entrySet
              description: One or more entries (rules) in the network ACL.
        IsDefault:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: default
              description: Indicates whether this is the default network ACL for the VPC.
        NetworkAclId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkAclId
              description: The ID of the network ACL.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the network ACL.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC for the network ACL.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the Amazon Web Services account that owns the network ACL.
      description: Describes a network ACL.
    Protocol:
      type: string
      enum:
        - tcp
        - udp
    CreateNetworkInsightsPathRequest:
      type: object
      required:
        - Source
        - Destination
        - Protocol
        - ClientToken
      title: CreateNetworkInsightsPathRequest
      properties:
        SourceIp:
          allOf:
            - $ref: "#/components/schemas/IpAddress"
            - description: The IP address of the Amazon Web Services resource that is the source of the path.
        DestinationIp:
          allOf:
            - $ref: "#/components/schemas/IpAddress"
            - description: The IP address of the Amazon Web Services resource that is the destination of the path.
        Source:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services resource that is the source of the path.
        Destination:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services resource that is the destination of the path.
        Protocol:
          allOf:
            - $ref: "#/components/schemas/Protocol"
            - description: The protocol.
        DestinationPort:
          allOf:
            - $ref: "#/components/schemas/Port"
            - description: The destination port.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to add to the path.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.
    NetworkInsightsPath:
      type: object
      properties:
        NetworkInsightsPathId:
          allOf:
            - $ref: "#/components/schemas/NetworkInsightsPathId"
            - xml:
                name: networkInsightsPathId
              description: The ID of the path.
        NetworkInsightsPathArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - xml:
                name: networkInsightsPathArn
              description: The Amazon Resource Name (ARN) of the path.
        CreatedDate:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: createdDate
              description: The time stamp when the path was created.
        Source:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: source
              description: The Amazon Web Services resource that is the source of the path.
        Destination:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: destination
              description: The Amazon Web Services resource that is the destination of the path.
        SourceIp:
          allOf:
            - $ref: "#/components/schemas/IpAddress"
            - xml:
                name: sourceIp
              description: The IP address of the Amazon Web Services resource that is the source of the path.
        DestinationIp:
          allOf:
            - $ref: "#/components/schemas/IpAddress"
            - xml:
                name: destinationIp
              description: The IP address of the Amazon Web Services resource that is the destination of the path.
        Protocol:
          allOf:
            - $ref: "#/components/schemas/Protocol"
            - xml:
                name: protocol
              description: The protocol.
        DestinationPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: destinationPort
              description: The destination port.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags associated with the path.
      description: Describes a path.
    InterfacePermissionType:
      type: string
      enum:
        - INSTANCE-ATTACH
        - EIP-ASSOCIATE
    CreateNetworkInterfacePermissionRequest:
      type: object
      required:
        - NetworkInterfaceId
        - Permission
      title: CreateNetworkInterfacePermissionRequest
      properties:
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceId"
            - description: The ID of the network interface.
        AwsAccountId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services account ID.
        AwsService:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Service. Currently not supported.
        Permission:
          allOf:
            - $ref: "#/components/schemas/InterfacePermissionType"
            - description: The type of permission to grant.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for CreateNetworkInterfacePermission.
    NetworkInterfacePermission:
      type: object
      properties:
        NetworkInterfacePermissionId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkInterfacePermissionId
              description: The ID of the network interface permission.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkInterfaceId
              description: The ID of the network interface.
        AwsAccountId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: awsAccountId
              description: The Amazon Web Services account ID.
        AwsService:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: awsService
              description: The Amazon Web Service.
        Permission:
          allOf:
            - $ref: "#/components/schemas/InterfacePermissionType"
            - xml:
                name: permission
              description: The type of permission.
        PermissionState:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfacePermissionState"
            - xml:
                name: permissionState
              description: Information about the state of the permission.
      description: Describes a permission for a network interface.
    InstanceIpv6AddressList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceIpv6Address"
          - xml:
              name: item
    PrivateIpAddressSpecificationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PrivateIpAddressSpecification"
          - xml:
              name: item
    Ipv4PrefixList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Ipv4PrefixSpecificationRequest"
          - xml:
              name: item
    Ipv6PrefixList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Ipv6PrefixSpecificationRequest"
          - xml:
              name: item
    NetworkInterfaceCreationType:
      type: string
      enum:
        - efa
        - branch
        - trunk
    CreateNetworkInterfaceRequest:
      type: object
      required:
        - SubnetId
      title: CreateNetworkInterfaceRequest
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description for the network interface.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Groups:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupIdStringList"
            - xml:
                name: SecurityGroupId
              description: The IDs of one or more security groups.
        Ipv6AddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: ipv6AddressCount
              description: The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can't use this option if specifying specific IPv6 addresses. If your subnet has the <code>AssignIpv6AddressOnCreation</code> attribute set to <code>true</code>, you can specify <code>0</code> to override this setting.
        Ipv6Addresses:
          allOf:
            - $ref: "#/components/schemas/InstanceIpv6AddressList"
            - xml:
                name: ipv6Addresses
              description: One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. You can't use this option if you're specifying a number of IPv6 addresses.
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateIpAddress
              description: The primary private IPv4 address of the network interface. If you don't specify an IPv4 address, Amazon EC2 selects one for you from the subnet's IPv4 CIDR range. If you specify an IP address, you cannot indicate any IP addresses specified in <code>privateIpAddresses</code> as primary (only one IP address can be designated as primary).
        PrivateIpAddresses:
          allOf:
            - $ref: "#/components/schemas/PrivateIpAddressSpecificationList"
            - xml:
                name: privateIpAddresses
              description: One or more private IPv4 addresses.
        SecondaryPrivateIpAddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: secondaryPrivateIpAddressCount
              description: <p>The number of secondary private IPv4 addresses to assign to a network interface. When you specify a number of secondary IPv4 addresses, Amazon EC2 selects these IP addresses within the subnet's IPv4 CIDR range. You can't specify this option and specify more than one private IP address using <code>privateIpAddresses</code>.</p> <p>The number of IP addresses you can assign to a network interface varies by instance type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI">IP Addresses Per ENI Per Instance Type</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.</p>
        Ipv4Prefixes:
          allOf:
            - $ref: "#/components/schemas/Ipv4PrefixList"
            - xml:
                name: Ipv4Prefix
              description: One or more IPv4 prefixes assigned to the network interface. You cannot use this option if you use the <code>Ipv4PrefixCount</code> option.
        Ipv4PrefixCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of IPv4 prefixes that Amazon Web Services automatically assigns to the network interface. You cannot use this option if you use the <code>Ipv4 Prefixes</code> option.
        Ipv6Prefixes:
          allOf:
            - $ref: "#/components/schemas/Ipv6PrefixList"
            - xml:
                name: Ipv6Prefix
              description: One or more IPv6 prefixes assigned to the network interface. You cannot use this option if you use the <code>Ipv6PrefixCount</code> option.
        Ipv6PrefixCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of IPv6 prefixes that Amazon Web Services automatically assigns to the network interface. You cannot use this option if you use the <code>Ipv6Prefixes</code> option.
        InterfaceType:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceCreationType"
            - description: Indicates the type of network interface. To create an Elastic Fabric Adapter (EFA), specify <code>efa</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/efa.html"> Elastic Fabric Adapter</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. To create a trunk network interface, specify <code>efa</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/eni-trunking.html"> Network interface trunking</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - xml:
                name: subnetId
              description: The ID of the subnet to associate with the network interface.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the new network interface.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
      description: Contains the parameters for CreateNetworkInterface.
    NetworkInterface:
      type: object
      properties:
        Association:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceAssociation"
            - xml:
                name: association
              description: The association information for an Elastic IP address (IPv4) associated with the network interface.
        Attachment:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceAttachment"
            - xml:
                name: attachment
              description: The network interface attachment.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description.
        Groups:
          allOf:
            - $ref: "#/components/schemas/GroupIdentifierList"
            - xml:
                name: groupSet
              description: Any security groups for the network interface.
        InterfaceType:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceType"
            - xml:
                name: interfaceType
              description: The type of network interface.
        Ipv6Addresses:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceIpv6AddressesList"
            - xml:
                name: ipv6AddressesSet
              description: The IPv6 addresses associated with the network interface.
        MacAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: macAddress
              description: The MAC address.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkInterfaceId
              description: The ID of the network interface.
        OutpostArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: outpostArn
              description: The Amazon Resource Name (ARN) of the Outpost.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The Amazon Web Services account ID of the owner of the network interface.
        PrivateDnsName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateDnsName
              description: The private DNS name.
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateIpAddress
              description: The IPv4 address of the network interface within the subnet.
        PrivateIpAddresses:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfacePrivateIpAddressList"
            - xml:
                name: privateIpAddressesSet
              description: The private IPv4 addresses associated with the network interface.
        Ipv4Prefixes:
          allOf:
            - $ref: "#/components/schemas/Ipv4PrefixesList"
            - xml:
                name: ipv4PrefixSet
              description: The IPv4 prefixes that are assigned to the network interface.
        Ipv6Prefixes:
          allOf:
            - $ref: "#/components/schemas/Ipv6PrefixesList"
            - xml:
                name: ipv6PrefixSet
              description: The IPv6 prefixes that are assigned to the network interface.
        RequesterId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: requesterId
              description: The alias or Amazon Web Services account ID of the principal or service that created the network interface.
        RequesterManaged:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: requesterManaged
              description: Indicates whether the network interface is being managed by Amazon Web Services.
        SourceDestCheck:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: sourceDestCheck
              description: Indicates whether source/destination checking is enabled.
        Status:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceStatus"
            - xml:
                name: status
              description: The status of the network interface.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: subnetId
              description: The ID of the subnet.
        TagSet:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the network interface.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC.
      description: Describes a network interface.
    PlacementStrategy:
      type: string
      enum:
        - cluster
        - spread
        - partition
    CreatePlacementGroupRequest:
      type: object
      title: CreatePlacementGroupRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        GroupName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupName
              description: "<p>A name for the placement group. Must be unique within the scope of your account for the Region.</p> <p>Constraints: Up to 255 ASCII characters</p>"
        Strategy:
          allOf:
            - $ref: "#/components/schemas/PlacementStrategy"
            - xml:
                name: strategy
              description: The placement strategy.
        PartitionCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of partitions. Valid only when <b>Strategy</b> is set to <code>partition</code>.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the new placement group.
    PlacementGroup:
      type: object
      properties:
        GroupName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupName
              description: The name of the placement group.
        State:
          allOf:
            - $ref: "#/components/schemas/PlacementGroupState"
            - xml:
                name: state
              description: The state of the placement group.
        Strategy:
          allOf:
            - $ref: "#/components/schemas/PlacementStrategy"
            - xml:
                name: strategy
              description: The placement strategy.
        PartitionCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: partitionCount
              description: The number of partitions. Valid only if <b>strategy</b> is set to <code>partition</code>.
        GroupId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupId
              description: The ID of the placement group.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags applied to the placement group.
      description: Describes a placement group.
    CreateReplaceRootVolumeTaskRequest:
      type: object
      required:
        - InstanceId
      title: CreateReplaceRootVolumeTaskRequest
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - description: The ID of the instance for which to replace the root volume.
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/SnapshotId"
            - description: The ID of the snapshot from which to restore the replacement root volume. If you want to restore the volume to the initial launch state, omit this parameter.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, a randomly generated token is used for the request to ensure idempotency. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring idempotency</a>.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the root volume replacement task.
    ReplaceRootVolumeTask:
      type: object
      properties:
        ReplaceRootVolumeTaskId:
          allOf:
            - $ref: "#/components/schemas/ReplaceRootVolumeTaskId"
            - xml:
                name: replaceRootVolumeTaskId
              description: The ID of the root volume replacement task.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance for which the root volume replacement task was created.
        TaskState:
          allOf:
            - $ref: "#/components/schemas/ReplaceRootVolumeTaskState"
            - xml:
                name: taskState
              description: <p>The state of the task. The task can be in one of the following states:</p> <ul> <li> <p> <code>pending</code> - the replacement volume is being created.</p> </li> <li> <p> <code>in-progress</code> - the original volume is being detached and the replacement volume is being attached.</p> </li> <li> <p> <code>succeeded</code> - the replacement volume has been successfully attached to the instance and the instance is available.</p> </li> <li> <p> <code>failing</code> - the replacement task is in the process of failing.</p> </li> <li> <p> <code>failed</code> - the replacement task has failed but the original root volume is still attached.</p> </li> <li> <p> <code>failing-detached</code> - the replacement task is in the process of failing. The instance might have no root volume attached.</p> </li> <li> <p> <code>failed-detached</code> - the replacement task has failed and the instance has no root volume attached.</p> </li> </ul>
        StartTime:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: startTime
              description: The time the task was started.
        CompleteTime:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: completeTime
              description: The time the task completed.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags assigned to the task.
      description: Information about a root volume replacement task.
    PriceScheduleSpecificationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PriceScheduleSpecification"
          - xml:
              name: item
    CreateReservedInstancesListingRequest:
      type: object
      required:
        - ClientToken
        - InstanceCount
        - PriceSchedules
        - ReservedInstancesId
      title: CreateReservedInstancesListingRequest
      properties:
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: Unique, case-sensitive identifier you provide to ensure idempotency of your listings. This helps avoid duplicate listings. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
        InstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: instanceCount
              description: The number of instances that are a part of a Reserved Instance account to be listed in the Reserved Instance Marketplace. This number should be less than or equal to the instance count associated with the Reserved Instance ID specified in this call.
        PriceSchedules:
          allOf:
            - $ref: "#/components/schemas/PriceScheduleSpecificationList"
            - xml:
                name: priceSchedules
              description: A list specifying the price of the Standard Reserved Instance for each month remaining in the Reserved Instance term.
        ReservedInstancesId:
          allOf:
            - $ref: "#/components/schemas/ReservationId"
            - xml:
                name: reservedInstancesId
              description: The ID of the active Standard Reserved Instance.
      description: Contains the parameters for CreateReservedInstancesListing.
    CreateRestoreImageTaskRequest:
      type: object
      required:
        - Bucket
        - ObjectKey
      title: CreateRestoreImageTaskRequest
      properties:
        Bucket:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the Amazon S3 bucket that contains the stored AMI object.
        ObjectKey:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the stored AMI object in the bucket.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name for the restored AMI. The name must be unique for AMIs in the Region for this account. If you do not provide a name, the new AMI gets the same name as the original AMI.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: <p>The tags to apply to the AMI and snapshots on restoration. You can tag the AMI, the snapshots, or both.</p> <ul> <li> <p>To tag the AMI, the value for <code>ResourceType</code> must be <code>image</code>.</p> </li> <li> <p>To tag the snapshots, the value for <code>ResourceType</code> must be <code>snapshot</code>. The same tag is applied to all of the snapshots that are created.</p> </li> </ul>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    CreateRouteRequest:
      type: object
      required:
        - RouteTableId
      title: CreateRouteRequest
      properties:
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: destinationCidrBlock
              description: The IPv4 CIDR address block used for the destination match. Routing decisions are based on the most specific match. We modify the specified CIDR block to its canonical form; for example, if you specify <code>100.68.0.18/18</code>, we modify it to <code>100.68.0.0/18</code>.
        DestinationIpv6CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: destinationIpv6CidrBlock
              description: The IPv6 CIDR block used for the destination match. Routing decisions are based on the most specific match.
        DestinationPrefixListId:
          allOf:
            - $ref: "#/components/schemas/PrefixListResourceId"
            - description: The ID of a prefix list used for the destination match.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        VpcEndpointId:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointId"
            - description: The ID of a VPC endpoint. Supported for Gateway Load Balancer endpoints only.
        EgressOnlyInternetGatewayId:
          allOf:
            - $ref: "#/components/schemas/EgressOnlyInternetGatewayId"
            - xml:
                name: egressOnlyInternetGatewayId
              description: "[IPv6 traffic only] The ID of an egress-only internet gateway."
        GatewayId:
          allOf:
            - $ref: "#/components/schemas/RouteGatewayId"
            - xml:
                name: gatewayId
              description: The ID of an internet gateway or virtual private gateway attached to your VPC.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - xml:
                name: instanceId
              description: The ID of a NAT instance in your VPC. The operation fails if you specify an instance ID unless exactly one network interface is attached.
        NatGatewayId:
          allOf:
            - $ref: "#/components/schemas/NatGatewayId"
            - xml:
                name: natGatewayId
              description: "[IPv4 traffic only] The ID of a NAT gateway."
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayId"
            - description: The ID of a transit gateway.
        LocalGatewayId:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayId"
            - description: The ID of the local gateway.
        CarrierGatewayId:
          allOf:
            - $ref: "#/components/schemas/CarrierGatewayId"
            - description: <p>The ID of the carrier gateway.</p> <p>You can only use this option when the VPC contains a subnet which is associated with a Wavelength Zone.</p>
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceId"
            - xml:
                name: networkInterfaceId
              description: The ID of a network interface.
        RouteTableId:
          allOf:
            - $ref: "#/components/schemas/RouteTableId"
            - xml:
                name: routeTableId
              description: The ID of the route table for the route.
        VpcPeeringConnectionId:
          allOf:
            - $ref: "#/components/schemas/VpcPeeringConnectionId"
            - xml:
                name: vpcPeeringConnectionId
              description: The ID of a VPC peering connection.
    CreateRouteTableRequest:
      type: object
      required:
        - VpcId
      title: CreateRouteTableRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - xml:
                name: vpcId
              description: The ID of the VPC.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to assign to the route table.
    RouteTable:
      type: object
      properties:
        Associations:
          allOf:
            - $ref: "#/components/schemas/RouteTableAssociationList"
            - xml:
                name: associationSet
              description: The associations between the route table and one or more subnets or a gateway.
        PropagatingVgws:
          allOf:
            - $ref: "#/components/schemas/PropagatingVgwList"
            - xml:
                name: propagatingVgwSet
              description: Any virtual private gateway (VGW) propagating routes.
        RouteTableId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: routeTableId
              description: The ID of the route table.
        Routes:
          allOf:
            - $ref: "#/components/schemas/RouteList"
            - xml:
                name: routeSet
              description: The routes in the route table.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the route table.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the Amazon Web Services account that owns the route table.
      description: Describes a route table.
    CreateSecurityGroupRequest:
      type: object
      required:
        - Description
        - GroupName
      title: CreateSecurityGroupRequest
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: GroupDescription
              description: "<p>A description for the security group. This is informational only.</p> <p>Constraints: Up to 255 characters in length</p> <p>Constraints for EC2-Classic: ASCII characters</p> <p>Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</p>"
        GroupName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The name of the security group.</p> <p>Constraints: Up to 255 characters in length. Cannot start with <code>sg-</code>.</p> <p>Constraints for EC2-Classic: ASCII characters</p> <p>Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</p>"
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - description: "[EC2-VPC] The ID of the VPC. Required for EC2-VPC."
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to assign to the security group.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    CreateSnapshotRequest:
      type: object
      required:
        - VolumeId
      title: CreateSnapshotRequest
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A description for the snapshot.
        OutpostArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The Amazon Resource Name (ARN) of the Outpost on which to create a local snapshot.</p> <ul> <li> <p>To create a snapshot of a volume in a Region, omit this parameter. The snapshot is created in the same Region as the volume.</p> </li> <li> <p>To create a snapshot of a volume on an Outpost and store the snapshot in the Region, omit this parameter. The snapshot is created in the Region for the Outpost.</p> </li> <li> <p>To create a snapshot of a volume on an Outpost and store the snapshot on an Outpost, specify the ARN of the destination Outpost. The snapshot must be created on the same Outpost as the volume.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#create-snapshot">Create local snapshots from volumes on an Outpost</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
        VolumeId:
          allOf:
            - $ref: "#/components/schemas/VolumeId"
            - description: The ID of the Amazon EBS volume.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the snapshot during creation.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    InstanceSpecification:
      type: object
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - description: The instance to specify which volumes should be snapshotted.
        ExcludeBootVolume:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Excludes the root volume from being snapshotted.
      description: The instance details to specify which volumes should be snapshotted.
    CreateSnapshotsRequest:
      type: object
      required:
        - InstanceSpecification
      title: CreateSnapshotsRequest
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: " A description propagated to every snapshot specified by the instance."
        InstanceSpecification:
          allOf:
            - $ref: "#/components/schemas/InstanceSpecification"
            - description: The instance to specify which volumes should be included in the snapshots.
        OutpostArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The Amazon Resource Name (ARN) of the Outpost on which to create the local snapshots.</p> <ul> <li> <p>To create snapshots from an instance in a Region, omit this parameter. The snapshots are created in the same Region as the instance.</p> </li> <li> <p>To create snapshots from an instance on an Outpost and store the snapshots in the Region, omit this parameter. The snapshots are created in the Region for the Outpost.</p> </li> <li> <p>To create snapshots from an instance on an Outpost and store the snapshots on an Outpost, specify the ARN of the destination Outpost. The snapshots must be created on the same Outpost as the instance.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#create-multivol-snapshot"> Create multi-volume local snapshots from instances on an Outpost</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: Tags to apply to every snapshot specified by the instance.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        CopyTagsFromSource:
          allOf:
            - $ref: "#/components/schemas/CopyTagsFromSource"
            - description: Copies the tags from the specified volume to corresponding snapshot.
    SnapshotSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SnapshotInfo"
          - xml:
              name: item
    CreateSpotDatafeedSubscriptionRequest:
      type: object
      required:
        - Bucket
      title: CreateSpotDatafeedSubscriptionRequest
      properties:
        Bucket:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: bucket
              description: The name of the Amazon S3 bucket in which to store the Spot Instance data feed. For more information about bucket names, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules">Rules for bucket naming</a> in the <i>Amazon S3 Developer Guide</i>.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Prefix:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: prefix
              description: The prefix for the data feed file names.
      description: Contains the parameters for CreateSpotDatafeedSubscription.
    SpotDatafeedSubscription:
      type: object
      properties:
        Bucket:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: bucket
              description: The name of the Amazon S3 bucket where the Spot Instance data feed is located.
        Fault:
          allOf:
            - $ref: "#/components/schemas/SpotInstanceStateFault"
            - xml:
                name: fault
              description: The fault codes for the Spot Instance request, if any.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The Amazon Web Services account ID of the account.
        Prefix:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: prefix
              description: The prefix for the data feed files.
        State:
          allOf:
            - $ref: "#/components/schemas/DatafeedSubscriptionState"
            - xml:
                name: state
              description: The state of the Spot Instance data feed subscription.
      description: Describes the data feed for a Spot Instance.
    S3ObjectTagList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/S3ObjectTag"
          - xml:
              name: item
    CreateStoreImageTaskRequest:
      type: object
      required:
        - ImageId
        - Bucket
      title: CreateStoreImageTaskRequest
      properties:
        ImageId:
          allOf:
            - $ref: "#/components/schemas/ImageId"
            - description: The ID of the AMI.
        Bucket:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "The name of the Amazon S3 bucket in which the AMI object will be stored. The bucket must be in the Region in which the request is being made. The AMI object appears in the bucket only after the upload task has completed. "
        S3ObjectTags:
          allOf:
            - $ref: "#/components/schemas/S3ObjectTagList"
            - xml:
                name: S3ObjectTag
              description: "The tags to apply to the AMI object that will be stored in the Amazon S3 bucket. "
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    SubnetCidrReservationType:
      type: string
      enum:
        - prefix
        - explicit
    CreateSubnetCidrReservationRequest:
      type: object
      required:
        - SubnetId
        - Cidr
        - ReservationType
      title: CreateSubnetCidrReservationRequest
      properties:
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to assign to the subnet CIDR reservation.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - description: The ID of the subnet.
        Cidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IPv4 or IPV6 CIDR range to reserve.
        ReservationType:
          allOf:
            - $ref: "#/components/schemas/SubnetCidrReservationType"
            - description: '<p>The type of reservation.</p> <p>The following are valid values:</p> <ul> <li> <p> <code>prefix</code>: The Amazon EC2 Prefix Delegation feature assigns the IP addresses to network interfaces that are associated with an instance. For information about Prefix Delegation, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-prefix-delegation.html">Prefix Delegation for Amazon EC2 network interfaces</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </li> <li> <p> <code>explicit</code>: You manually assign the IP addresses to resources that reside in your subnet. </p> </li> </ul>'
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The description to assign to the subnet CIDR reservation.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    SubnetCidrReservation:
      type: object
      properties:
        SubnetCidrReservationId:
          allOf:
            - $ref: "#/components/schemas/SubnetCidrReservationId"
            - xml:
                name: subnetCidrReservationId
              description: The ID of the subnet CIDR reservation.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - xml:
                name: subnetId
              description: The ID of the subnet.
        Cidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cidr
              description: The CIDR that has been reserved.
        ReservationType:
          allOf:
            - $ref: "#/components/schemas/SubnetCidrReservationType"
            - xml:
                name: reservationType
              description: "The type of reservation. "
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: "The ID of the account that owns the subnet CIDR reservation. "
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: The description assigned to the subnet CIDR reservation.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags assigned to the subnet CIDR reservation.
      description: Describes a subnet CIDR reservation.
    CreateSubnetRequest:
      type: object
      required:
        - VpcId
        - CidrBlock
      title: CreateSubnetRequest
      properties:
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to assign to the subnet.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: '<p>The Availability Zone or Local Zone for the subnet.</p> <p>Default: Amazon Web Services selects one for you. If you create more than one subnet in your VPC, we do not necessarily select a different zone for each subnet.</p> <p>To create a subnet in a Local Zone, set this value to the Local Zone ID, for example <code>us-west-2-lax-1a</code>. For information about the Regions that support Local Zones, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions">Available Regions</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>To create a subnet in an Outpost, set this value to the Availability Zone for the Outpost and specify the Outpost ARN.</p>'
        AvailabilityZoneId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The AZ ID or the Local Zone ID of the subnet.
        Ipv6CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a /64 prefix length.
        OutpostArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Resource Name (ARN) of the Outpost. If you specify an Outpost ARN, you must also specify the Availability Zone of the Outpost subnet.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - description: The ID of the VPC.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IPv4 network range for the subnet, in CIDR notation. For example, <code>10.0.0.0/24</code>. We modify the specified CIDR block to its canonical form; for example, if you specify <code>100.68.0.18/18</code>, we modify it to <code>100.68.0.0/18</code>.
    ResourceIdList:
      type: array
      items:
        $ref: "#/components/schemas/TaggableResourceId"
    CreateTagsRequest:
      type: object
      required:
        - Resources
        - Tags
      title: CreateTagsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Resources:
          allOf:
            - $ref: "#/components/schemas/ResourceIdList"
            - xml:
                name: ResourceId
              description: "<p>The IDs of the resources, separated by spaces.</p> <p>Constraints: Up to 1000 resource IDs. We recommend breaking up this request into smaller batches.</p>"
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: Tag
              description: The tags. The <code>value</code> parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string.
    CreateTrafficMirrorFilterRequest:
      type: object
      title: CreateTrafficMirrorFilterRequest
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The description of the Traffic Mirror filter.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to assign to a Traffic Mirror filter.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
    TrafficMirrorFilter:
      type: object
      properties:
        TrafficMirrorFilterId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: trafficMirrorFilterId
              description: The ID of the Traffic Mirror filter.
        IngressFilterRules:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorFilterRuleList"
            - xml:
                name: ingressFilterRuleSet
              description: Information about the ingress rules that are associated with the Traffic Mirror filter.
        EgressFilterRules:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorFilterRuleList"
            - xml:
                name: egressFilterRuleSet
              description: Information about the egress rules that are associated with the Traffic Mirror filter.
        NetworkServices:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorNetworkServiceList"
            - xml:
                name: networkServiceSet
              description: The network service traffic that is associated with the Traffic Mirror filter.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: The description of the Traffic Mirror filter.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags assigned to the Traffic Mirror filter.
      description: Describes the Traffic Mirror filter.
    TrafficDirection:
      type: string
      enum:
        - ingress
        - egress
    TrafficMirrorRuleAction:
      type: string
      enum:
        - accept
        - reject
    TrafficMirrorPortRangeRequest:
      type: object
      properties:
        FromPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The first port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.
        ToPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The last port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.
      description: Information about the Traffic Mirror filter rule port range.
    CreateTrafficMirrorFilterRuleRequest:
      type: object
      required:
        - TrafficMirrorFilterId
        - TrafficDirection
        - RuleNumber
        - RuleAction
        - DestinationCidrBlock
        - SourceCidrBlock
      title: CreateTrafficMirrorFilterRuleRequest
      properties:
        TrafficMirrorFilterId:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorFilterId"
            - description: The ID of the filter that this rule is associated with.
        TrafficDirection:
          allOf:
            - $ref: "#/components/schemas/TrafficDirection"
            - description: The type of traffic (<code>ingress</code> | <code>egress</code>).
        RuleNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.
        RuleAction:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorRuleAction"
            - description: The action to take (<code>accept</code> | <code>reject</code>) on the filtered traffic.
        DestinationPortRange:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorPortRangeRequest"
            - description: The destination port range.
        SourcePortRange:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorPortRangeRequest"
            - description: The source port range.
        Protocol:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>The protocol, for example UDP, to assign to the Traffic Mirror rule.</p> <p>For information about the protocol value, see <a href="https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a> on the Internet Assigned Numbers Authority (IANA) website.</p>
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The destination CIDR block to assign to the Traffic Mirror rule.
        SourceCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The source CIDR block to assign to the Traffic Mirror rule.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The description of the Traffic Mirror rule.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
    TrafficMirrorFilterRule:
      type: object
      properties:
        TrafficMirrorFilterRuleId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: trafficMirrorFilterRuleId
              description: The ID of the Traffic Mirror rule.
        TrafficMirrorFilterId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: trafficMirrorFilterId
              description: The ID of the Traffic Mirror filter that the rule is associated with.
        TrafficDirection:
          allOf:
            - $ref: "#/components/schemas/TrafficDirection"
            - xml:
                name: trafficDirection
              description: The traffic direction assigned to the Traffic Mirror rule.
        RuleNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: ruleNumber
              description: The rule number of the Traffic Mirror rule.
        RuleAction:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorRuleAction"
            - xml:
                name: ruleAction
              description: The action assigned to the Traffic Mirror rule.
        Protocol:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: protocol
              description: The protocol assigned to the Traffic Mirror rule.
        DestinationPortRange:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorPortRange"
            - xml:
                name: destinationPortRange
              description: The destination port range assigned to the Traffic Mirror rule.
        SourcePortRange:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorPortRange"
            - xml:
                name: sourcePortRange
              description: The source port range assigned to the Traffic Mirror rule.
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: destinationCidrBlock
              description: The destination CIDR block assigned to the Traffic Mirror rule.
        SourceCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: sourceCidrBlock
              description: The source CIDR block assigned to the Traffic Mirror rule.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: The description of the Traffic Mirror rule.
      description: Describes the Traffic Mirror rule.
    CreateTrafficMirrorSessionRequest:
      type: object
      required:
        - NetworkInterfaceId
        - TrafficMirrorTargetId
        - TrafficMirrorFilterId
        - SessionNumber
      title: CreateTrafficMirrorSessionRequest
      properties:
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceId"
            - description: The ID of the source network interface.
        TrafficMirrorTargetId:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorTargetId"
            - description: The ID of the Traffic Mirror target.
        TrafficMirrorFilterId:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorFilterId"
            - description: The ID of the Traffic Mirror filter.
        PacketLength:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>The number of bytes in each packet to mirror. These are bytes after the VXLAN header. Do not specify this parameter when you want to mirror the entire packet. To mirror a subset of the packet, set this to the length (in bytes) that you want to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target.</p> <p>If you do not want to mirror the entire packet, use the <code>PacketLength</code> parameter to specify the number of bytes in each packet to mirror.</p>
        SessionNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.</p> <p>Valid values are 1-32766.</p>
        VirtualNetworkId:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The VXLAN ID for the Traffic Mirror session. For more information about the VXLAN protocol, see <a href="https://tools.ietf.org/html/rfc7348">RFC 7348</a>. If you do not specify a <code>VirtualNetworkId</code>, an account-wide unique id is chosen at random.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The description of the Traffic Mirror session.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to assign to a Traffic Mirror session.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
    TrafficMirrorSession:
      type: object
      properties:
        TrafficMirrorSessionId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: trafficMirrorSessionId
              description: The ID for the Traffic Mirror session.
        TrafficMirrorTargetId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: trafficMirrorTargetId
              description: The ID of the Traffic Mirror target.
        TrafficMirrorFilterId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: trafficMirrorFilterId
              description: The ID of the Traffic Mirror filter.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkInterfaceId
              description: The ID of the Traffic Mirror session's network interface.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the account that owns the Traffic Mirror session.
        PacketLength:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: packetLength
              description: The number of bytes in each packet to mirror. These are the bytes after the VXLAN header. To mirror a subset, set this to the length (in bytes) to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target. Do not specify this parameter when you want to mirror the entire packet
        SessionNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: sessionNumber
              description: <p>The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.</p> <p>Valid values are 1-32766.</p>
        VirtualNetworkId:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: virtualNetworkId
              description: The virtual network ID associated with the Traffic Mirror session.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: The description of the Traffic Mirror session.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags assigned to the Traffic Mirror session.
      description: Describes a Traffic Mirror session.
    CreateTrafficMirrorTargetRequest:
      type: object
      title: CreateTrafficMirrorTargetRequest
      properties:
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceId"
            - description: The network interface ID that is associated with the target.
        NetworkLoadBalancerArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the target.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The description of the Traffic Mirror target.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to assign to the Traffic Mirror target.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
    TrafficMirrorTarget:
      type: object
      properties:
        TrafficMirrorTargetId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: trafficMirrorTargetId
              description: The ID of the Traffic Mirror target.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkInterfaceId
              description: The network interface ID that is attached to the target.
        NetworkLoadBalancerArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkLoadBalancerArn
              description: The Amazon Resource Name (ARN) of the Network Load Balancer.
        Type:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorTargetType"
            - xml:
                name: type
              description: The type of Traffic Mirror target.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: Information about the Traffic Mirror target.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the account that owns the Traffic Mirror target.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags assigned to the Traffic Mirror target.
      description: Describes a Traffic Mirror target.
    TransitGatewayConnectRequestBgpOptions:
      type: object
      properties:
        PeerAsn:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The peer Autonomous System Number (ASN).
      description: The BGP options for the Connect attachment.
    InsideCidrBlocksStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: item
    CreateTransitGatewayConnectPeerRequest:
      type: object
      required:
        - TransitGatewayAttachmentId
        - PeerAddress
        - InsideCidrBlocks
      title: CreateTransitGatewayConnectPeerRequest
      properties:
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the Connect attachment.
        TransitGatewayAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The peer IP address (GRE outer IP address) on the transit gateway side of the Connect peer, which must be specified from a transit gateway CIDR block. If not specified, Amazon automatically assigns the first available IP address from the transit gateway CIDR block.
        PeerAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The peer IP address (GRE outer IP address) on the appliance side of the Connect peer.
        BgpOptions:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayConnectRequestBgpOptions"
            - description: The BGP options for the Connect peer.
        InsideCidrBlocks:
          allOf:
            - $ref: "#/components/schemas/InsideCidrBlocksStringList"
            - description: The range of inside IP addresses that are used for BGP peering. You must specify a size /29 IPv4 CIDR block from the <code>169.254.0.0/16</code> range. The first address from the range must be configured on the appliance as the BGP IP address. You can also optionally specify a size /125 IPv6 CIDR block from the <code>fd00::/8</code> range.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the Connect peer.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayConnectPeer:
      type: object
      properties:
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - xml:
                name: transitGatewayAttachmentId
              description: The ID of the Connect attachment.
        TransitGatewayConnectPeerId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayConnectPeerId"
            - xml:
                name: transitGatewayConnectPeerId
              description: The ID of the Connect peer.
        State:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayConnectPeerState"
            - xml:
                name: state
              description: The state of the Connect peer.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: creationTime
              description: The creation time.
        ConnectPeerConfiguration:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayConnectPeerConfiguration"
            - xml:
                name: connectPeerConfiguration
              description: The Connect peer details.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags for the Connect peer.
      description: Describes a transit gateway Connect peer.
    CreateTransitGatewayConnectRequestOptions:
      type: object
      required:
        - Protocol
      properties:
        Protocol:
          allOf:
            - $ref: "#/components/schemas/ProtocolValue"
            - description: The tunnel protocol.
      description: The options for a Connect attachment.
    CreateTransitGatewayConnectRequest:
      type: object
      required:
        - TransportTransitGatewayAttachmentId
        - Options
      title: CreateTransitGatewayConnectRequest
      properties:
        TransportTransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the transit gateway attachment. You can specify a VPC attachment or Amazon Web Services Direct Connect attachment.
        Options:
          allOf:
            - $ref: "#/components/schemas/CreateTransitGatewayConnectRequestOptions"
            - description: The Connect attachment options.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the Connect attachment.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayConnect:
      type: object
      properties:
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - xml:
                name: transitGatewayAttachmentId
              description: The ID of the Connect attachment.
        TransportTransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - xml:
                name: transportTransitGatewayAttachmentId
              description: The ID of the attachment from which the Connect attachment was created.
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayId"
            - xml:
                name: transitGatewayId
              description: The ID of the transit gateway.
        State:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentState"
            - xml:
                name: state
              description: The state of the attachment.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: creationTime
              description: The creation time.
        Options:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayConnectOptions"
            - xml:
                name: options
              description: The Connect attachment options.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags for the attachment.
      description: Describes a transit gateway Connect attachment.
    CreateTransitGatewayMulticastDomainRequestOptions:
      type: object
      properties:
        Igmpv2Support:
          allOf:
            - $ref: "#/components/schemas/Igmpv2SupportValue"
            - description: Specify whether to enable Internet Group Management Protocol (IGMP) version 2 for the transit gateway multicast domain.
        StaticSourcesSupport:
          allOf:
            - $ref: "#/components/schemas/StaticSourcesSupportValue"
            - description: Specify whether to enable support for statically configuring multicast group sources for a domain.
        AutoAcceptSharedAssociations:
          allOf:
            - $ref: "#/components/schemas/AutoAcceptSharedAssociationsValue"
            - description: Indicates whether to automatically accept cross-account subnet associations that are associated with the transit gateway multicast domain.
      description: The options for the transit gateway multicast domain.
    CreateTransitGatewayMulticastDomainRequest:
      type: object
      required:
        - TransitGatewayId
      title: CreateTransitGatewayMulticastDomainRequest
      properties:
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayId"
            - description: The ID of the transit gateway.
        Options:
          allOf:
            - $ref: "#/components/schemas/CreateTransitGatewayMulticastDomainRequestOptions"
            - description: The options for the transit gateway multicast domain.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags for the transit gateway multicast domain.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayMulticastDomain:
      type: object
      properties:
        TransitGatewayMulticastDomainId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayMulticastDomainId
              description: The ID of the transit gateway multicast domain.
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayId
              description: The ID of the transit gateway.
        TransitGatewayMulticastDomainArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayMulticastDomainArn
              description: The Amazon Resource Name (ARN) of the transit gateway multicast domain.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: " The ID of the Amazon Web Services account that owns the transit gateway multicast domain."
        Options:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomainOptions"
            - xml:
                name: options
              description: The options for the transit gateway multicast domain.
        State:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomainState"
            - xml:
                name: state
              description: The state of the transit gateway multicast domain.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: creationTime
              description: The time the transit gateway multicast domain was created.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags for the transit gateway multicast domain.
      description: Describes the transit gateway multicast domain.
    TransitAssociationGatewayId:
      type: string
    CreateTransitGatewayPeeringAttachmentRequest:
      type: object
      required:
        - TransitGatewayId
        - PeerTransitGatewayId
        - PeerAccountId
        - PeerRegion
      title: CreateTransitGatewayPeeringAttachmentRequest
      properties:
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayId"
            - description: The ID of the transit gateway.
        PeerTransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/TransitAssociationGatewayId"
            - description: The ID of the peer transit gateway with which to create the peering attachment.
        PeerAccountId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the Amazon Web Services account that owns the peer transit gateway.
        PeerRegion:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Region where the peer transit gateway is located.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the transit gateway peering attachment.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    CreateTransitGatewayPrefixListReferenceRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
        - PrefixListId
      title: CreateTransitGatewayPrefixListReferenceRequest
      properties:
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableId"
            - description: The ID of the transit gateway route table.
        PrefixListId:
          allOf:
            - $ref: "#/components/schemas/PrefixListResourceId"
            - description: The ID of the prefix list that is used for destination matches.
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the attachment to which traffic is routed.
        Blackhole:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether to drop traffic that matches this route.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayPrefixListReference:
      type: object
      properties:
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableId"
            - xml:
                name: transitGatewayRouteTableId
              description: The ID of the transit gateway route table.
        PrefixListId:
          allOf:
            - $ref: "#/components/schemas/PrefixListResourceId"
            - xml:
                name: prefixListId
              description: The ID of the prefix list.
        PrefixListOwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: prefixListOwnerId
              description: The ID of the prefix list owner.
        State:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayPrefixListReferenceState"
            - xml:
                name: state
              description: The state of the prefix list reference.
        Blackhole:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: blackhole
              description: Indicates whether traffic that matches this route is dropped.
        TransitGatewayAttachment:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayPrefixListAttachment"
            - xml:
                name: transitGatewayAttachment
              description: Information about the transit gateway attachment.
      description: Describes a prefix list reference.
    TransitGatewayRequestOptions:
      type: object
      properties:
        AmazonSideAsn:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: A private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs. The default is <code>64512</code>.
        AutoAcceptSharedAttachments:
          allOf:
            - $ref: "#/components/schemas/AutoAcceptSharedAttachmentsValue"
            - description: Enable or disable automatic acceptance of attachment requests. Disabled by default.
        DefaultRouteTableAssociation:
          allOf:
            - $ref: "#/components/schemas/DefaultRouteTableAssociationValue"
            - description: Enable or disable automatic association with the default association route table. Enabled by default.
        DefaultRouteTablePropagation:
          allOf:
            - $ref: "#/components/schemas/DefaultRouteTablePropagationValue"
            - description: Enable or disable automatic propagation of routes to the default propagation route table. Enabled by default.
        VpnEcmpSupport:
          allOf:
            - $ref: "#/components/schemas/VpnEcmpSupportValue"
            - description: Enable or disable Equal Cost Multipath Protocol support. Enabled by default.
        DnsSupport:
          allOf:
            - $ref: "#/components/schemas/DnsSupportValue"
            - description: Enable or disable DNS support. Enabled by default.
        MulticastSupport:
          allOf:
            - $ref: "#/components/schemas/MulticastSupportValue"
            - description: Indicates whether multicast is enabled on the transit gateway
        TransitGatewayCidrBlocks:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayCidrBlockStringList"
            - description: One or more IPv4 or IPv6 CIDR blocks for the transit gateway. Must be a size /24 CIDR block or larger for IPv4, or a size /64 CIDR block or larger for IPv6.
      description: Describes the options for a transit gateway.
    CreateTransitGatewayRequest:
      type: object
      title: CreateTransitGatewayRequest
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A description of the transit gateway.
        Options:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRequestOptions"
            - description: The transit gateway options.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the transit gateway.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGateway:
      type: object
      properties:
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayId
              description: The ID of the transit gateway.
        TransitGatewayArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayArn
              description: The Amazon Resource Name (ARN) of the transit gateway.
        State:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayState"
            - xml:
                name: state
              description: The state of the transit gateway.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the Amazon Web Services account that owns the transit gateway.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: The description of the transit gateway.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: creationTime
              description: The creation time.
        Options:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayOptions"
            - xml:
                name: options
              description: The transit gateway options.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags for the transit gateway.
      description: Describes a transit gateway.
    CreateTransitGatewayRouteRequest:
      type: object
      required:
        - DestinationCidrBlock
        - TransitGatewayRouteTableId
      title: CreateTransitGatewayRouteRequest
      properties:
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The CIDR range used for destination matches. Routing decisions are based on the most specific match.
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableId"
            - description: The ID of the transit gateway route table.
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the attachment.
        Blackhole:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether to drop traffic that matches this route.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayRoute:
      type: object
      properties:
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: destinationCidrBlock
              description: The CIDR block used for destination matches.
        PrefixListId:
          allOf:
            - $ref: "#/components/schemas/PrefixListResourceId"
            - xml:
                name: prefixListId
              description: The ID of the prefix list used for destination matches.
        TransitGatewayAttachments:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteAttachmentList"
            - xml:
                name: transitGatewayAttachments
              description: The attachments.
        Type:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteType"
            - xml:
                name: type
              description: The route type.
        State:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteState"
            - xml:
                name: state
              description: The state of the route.
      description: Describes a route for a transit gateway route table.
    CreateTransitGatewayRouteTableRequest:
      type: object
      required:
        - TransitGatewayId
      title: CreateTransitGatewayRouteTableRequest
      properties:
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayId"
            - description: The ID of the transit gateway.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - description: The tags to apply to the transit gateway route table.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayRouteTable:
      type: object
      properties:
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayRouteTableId
              description: The ID of the transit gateway route table.
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayId
              description: The ID of the transit gateway.
        State:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableState"
            - xml:
                name: state
              description: The state of the transit gateway route table.
        DefaultAssociationRouteTable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: defaultAssociationRouteTable
              description: Indicates whether this is the default association route table for the transit gateway.
        DefaultPropagationRouteTable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: defaultPropagationRouteTable
              description: Indicates whether this is the default propagation route table for the transit gateway.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: creationTime
              description: The creation time.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the route table.
      description: Describes a transit gateway route table.
    CreateTransitGatewayVpcAttachmentRequestOptions:
      type: object
      properties:
        DnsSupport:
          allOf:
            - $ref: "#/components/schemas/DnsSupportValue"
            - description: Enable or disable DNS support. The default is <code>enable</code>.
        Ipv6Support:
          allOf:
            - $ref: "#/components/schemas/Ipv6SupportValue"
            - description: Enable or disable IPv6 support. The default is <code>disable</code>.
        ApplianceModeSupport:
          allOf:
            - $ref: "#/components/schemas/ApplianceModeSupportValue"
            - description: Enable or disable support for appliance mode. If enabled, a traffic flow between a source and destination uses the same Availability Zone for the VPC attachment for the lifetime of that flow. The default is <code>disable</code>.
      description: Describes the options for a VPC attachment.
    CreateTransitGatewayVpcAttachmentRequest:
      type: object
      required:
        - TransitGatewayId
        - VpcId
        - SubnetIds
      title: CreateTransitGatewayVpcAttachmentRequest
      properties:
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayId"
            - description: The ID of the transit gateway.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - description: The ID of the VPC.
        SubnetIds:
          allOf:
            - $ref: "#/components/schemas/TransitGatewaySubnetIdList"
            - description: The IDs of one or more subnets. You can specify only one subnet per Availability Zone. You must specify at least one subnet, but we recommend that you specify two subnets for better availability. The transit gateway uses one IP address from each specified subnet.
        Options:
          allOf:
            - $ref: "#/components/schemas/CreateTransitGatewayVpcAttachmentRequestOptions"
            - description: The VPC attachment options.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - description: The tags to apply to the VPC attachment.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    PermissionGroup:
      type: string
      enum:
        - all
    CreateVolumePermission:
      type: object
      properties:
        Group:
          allOf:
            - $ref: "#/components/schemas/PermissionGroup"
            - xml:
                name: group
              description: The group to be added or removed. The possible value is <code>all</code>.
        UserId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: userId
              description: The ID of the Amazon Web Services account to be added or removed.
      description: Describes the user or group to be added or removed from the list of create volume permissions for a volume.
    CreateVolumePermissionModifications:
      type: object
      properties:
        Add:
          allOf:
            - $ref: "#/components/schemas/CreateVolumePermissionList"
            - description: Adds the specified Amazon Web Services account ID or group to the list.
        Remove:
          allOf:
            - $ref: "#/components/schemas/CreateVolumePermissionList"
            - description: Removes the specified Amazon Web Services account ID or group from the list.
      description: Describes modifications to the list of create volume permissions for a volume.
    VolumeType:
      type: string
      enum:
        - standard
        - io1
        - io2
        - gp2
        - sc1
        - st1
        - gp3
    CreateVolumeRequest:
      type: object
      required:
        - AvailabilityZone
      title: CreateVolumeRequest
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Availability Zone in which to create the volume.
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: encrypted
              description: <p>Indicates whether the volume should be encrypted. The effect of setting the encryption state to <code>true</code> depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default">Encryption by default</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Encrypted Amazon EBS volumes must be attached to instances that support Amazon EBS encryption. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances">Supported instance types</a>.</p>
        Iops:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: '<p>The number of I/O operations per second (IOPS). For <code>gp3</code>, <code>io1</code>, and <code>io2</code> volumes, this represents the number of IOPS that are provisioned for the volume. For <code>gp2</code> volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.</p> <p>The following are the supported values for each volume type:</p> <ul> <li> <p> <code>gp3</code>: 3,000-16,000 IOPS</p> </li> <li> <p> <code>io1</code>: 100-64,000 IOPS</p> </li> <li> <p> <code>io2</code>: 100-64,000 IOPS</p> </li> </ul> <p> <code>io1</code> and <code>io2</code> volumes support up to 64,000 IOPS only on <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances">Instances built on the Nitro System</a>. Other instance families support performance up to 32,000 IOPS.</p> <p>This parameter is required for <code>io1</code> and <code>io2</code> volumes. The default for <code>gp3</code> volumes is 3,000 IOPS. This parameter is not supported for <code>gp2</code>, <code>st1</code>, <code>sc1</code>, or <code>standard</code> volumes.</p>'
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/KmsKeyId"
            - description: <p>The identifier of the Key Management Service (KMS) KMS key to use for Amazon EBS encryption. If this parameter is not specified, your KMS key for Amazon EBS is used. If <code>KmsKeyId</code> is specified, the encrypted state must be <code>true</code>.</p> <p>You can specify the KMS key using any of the following:</p> <ul> <li> <p>Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.</p> </li> <li> <p>Key alias. For example, alias/ExampleAlias.</p> </li> <li> <p>Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.</p> </li> <li> <p>Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.</p> </li> </ul> <p>Amazon Web Services authenticates the KMS key asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails.</p>
        OutpostArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Resource Name (ARN) of the Outpost.
        Size:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. If you specify a snapshot, the default is the snapshot size. You can specify a volume size that is equal to or larger than the snapshot size.</p> <p>The following are the supported volumes sizes for each volume type:</p> <ul> <li> <p> <code>gp2</code> and <code>gp3</code>: 1-16,384</p> </li> <li> <p> <code>io1</code> and <code>io2</code>: 4-16,384</p> </li> <li> <p> <code>st1</code> and <code>sc1</code>: 125-16,384</p> </li> <li> <p> <code>standard</code>: 1-1,024</p> </li> </ul>"
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/SnapshotId"
            - description: The snapshot from which to create the volume. You must specify either a snapshot ID or a volume size.
        VolumeType:
          allOf:
            - $ref: "#/components/schemas/VolumeType"
            - description: '<p>The volume type. This parameter can be one of the following values:</p> <ul> <li> <p>General Purpose SSD: <code>gp2</code> | <code>gp3</code> </p> </li> <li> <p>Provisioned IOPS SSD: <code>io1</code> | <code>io2</code> </p> </li> <li> <p>Throughput Optimized HDD: <code>st1</code> </p> </li> <li> <p>Cold HDD: <code>sc1</code> </p> </li> <li> <p>Magnetic: <code>standard</code> </p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS volume types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Default: <code>gp2</code> </p>'
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the volume during creation.
        MultiAttachEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether to enable Amazon EBS Multi-Attach. If you enable Multi-Attach, you can attach the volume to up to 16 <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances">Instances built on the Nitro System</a> in the same Availability Zone. This parameter is supported with <code>io1</code> and <code>io2</code> volumes only. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volumes-multi.html"> Amazon EBS Multi-Attach</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
        Throughput:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The throughput to provision for a volume, with a maximum of 1,000 MiB/s.</p> <p>This parameter is valid only for <code>gp3</code> volumes.</p> <p>Valid Range: Minimum value of 125. Maximum value of 1000.</p>"
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensure Idempotency</a>.
    CreateVpcEndpointConnectionNotificationRequest:
      type: object
      required:
        - ConnectionNotificationArn
        - ConnectionEvents
      title: CreateVpcEndpointConnectionNotificationRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ServiceId:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointServiceId"
            - description: The ID of the endpoint service.
        VpcEndpointId:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointId"
            - description: The ID of the endpoint.
        ConnectionNotificationArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ARN of the SNS topic for the notifications.
        ConnectionEvents:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - description: One or more endpoint events for which to receive notifications. Valid values are <code>Accept</code>, <code>Connect</code>, <code>Delete</code>, and <code>Reject</code>.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
    VpcEndpointType:
      type: string
      enum:
        - Interface
        - Gateway
        - GatewayLoadBalancer
    VpcEndpointRouteTableIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/RouteTableId"
          - xml:
              name: item
    VpcEndpointSubnetIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SubnetId"
          - xml:
              name: item
    VpcEndpointSecurityGroupIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SecurityGroupId"
          - xml:
              name: item
    CreateVpcEndpointRequest:
      type: object
      required:
        - VpcId
        - ServiceName
      title: CreateVpcEndpointRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        VpcEndpointType:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointType"
            - description: "<p>The type of endpoint.</p> <p>Default: Gateway</p>"
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - description: The ID of the VPC in which the endpoint will be used.
        ServiceName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The service name. To get a list of available services, use the <a>DescribeVpcEndpointServices</a> request, or get the name from the service provider.
        PolicyDocument:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: (Interface and gateway endpoints) A policy to attach to the endpoint that controls access to the service. The policy must be in valid JSON format. If this parameter is not specified, we attach a default policy that allows full access to the service.
        RouteTableIds:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointRouteTableIdList"
            - xml:
                name: RouteTableId
              description: (Gateway endpoint) One or more route table IDs.
        SubnetIds:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointSubnetIdList"
            - xml:
                name: SubnetId
              description: (Interface and Gateway Load Balancer endpoints) The ID of one or more subnets in which to create an endpoint network interface. For a Gateway Load Balancer endpoint, you can specify one subnet only.
        SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointSecurityGroupIdList"
            - xml:
                name: SecurityGroupId
              description: (Interface endpoint) The ID of one or more security groups to associate with the endpoint network interface.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
        PrivateDnsEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "<p>(Interface endpoint) Indicates whether to associate a private hosted zone with the specified VPC. The private hosted zone contains a record set for the default public DNS name for the service for the Region (for example, <code>kinesis.us-east-1.amazonaws.com</code>), which resolves to the private IP addresses of the endpoint network interfaces in the VPC. This enables you to make requests to the default public DNS name for the service instead of the public DNS names that are automatically generated by the VPC endpoint service.</p> <p>To use a private hosted zone, you must set the following VPC attributes to <code>true</code>: <code>enableDnsHostnames</code> and <code>enableDnsSupport</code>. Use <a>ModifyVpcAttribute</a> to set the VPC attributes.</p> <p>Default: <code>true</code> </p>"
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to associate with the endpoint.
      description: Contains the parameters for CreateVpcEndpoint.
    VpcEndpoint:
      type: object
      properties:
        VpcEndpointId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcEndpointId
              description: The ID of the VPC endpoint.
        VpcEndpointType:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointType"
            - xml:
                name: vpcEndpointType
              description: The type of endpoint.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC to which the endpoint is associated.
        ServiceName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: serviceName
              description: The name of the service to which the endpoint is associated.
        State:
          allOf:
            - $ref: "#/components/schemas/State"
            - xml:
                name: state
              description: The state of the VPC endpoint.
        PolicyDocument:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: policyDocument
              description: The policy document associated with the endpoint, if applicable.
        RouteTableIds:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: routeTableIdSet
              description: (Gateway endpoint) One or more route tables associated with the endpoint.
        SubnetIds:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: subnetIdSet
              description: (Interface endpoint) One or more subnets in which the endpoint is located.
        Groups:
          allOf:
            - $ref: "#/components/schemas/GroupIdentifierSet"
            - xml:
                name: groupSet
              description: (Interface endpoint) Information about the security groups that are associated with the network interface.
        PrivateDnsEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: privateDnsEnabled
              description: (Interface endpoint) Indicates whether the VPC is associated with a private hosted zone.
        RequesterManaged:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: requesterManaged
              description: Indicates whether the VPC endpoint is being managed by its service.
        NetworkInterfaceIds:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: networkInterfaceIdSet
              description: (Interface endpoint) One or more network interfaces for the endpoint.
        DnsEntries:
          allOf:
            - $ref: "#/components/schemas/DnsEntrySet"
            - xml:
                name: dnsEntrySet
              description: (Interface endpoint) The DNS entries for the endpoint.
        CreationTimestamp:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: creationTimestamp
              description: The date and time that the VPC endpoint was created.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the VPC endpoint.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the AWS account that owns the VPC endpoint.
        LastError:
          allOf:
            - $ref: "#/components/schemas/LastError"
            - xml:
                name: lastError
              description: The last error that occurred for VPC endpoint.
      description: Describes a VPC endpoint.
    CreateVpcEndpointServiceConfigurationRequest:
      type: object
      title: CreateVpcEndpointServiceConfigurationRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        AcceptanceRequired:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether requests from service consumers to create an endpoint to your service must be accepted. To accept a request, use <a>AcceptVpcEndpointConnections</a>.
        PrivateDnsName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: (Interface endpoint configuration) The private DNS name to assign to the VPC endpoint service.
        NetworkLoadBalancerArns:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: NetworkLoadBalancerArn
              description: The Amazon Resource Names (ARNs) of one or more Network Load Balancers for your service.
        GatewayLoadBalancerArns:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: GatewayLoadBalancerArn
              description: The Amazon Resource Names (ARNs) of one or more Gateway Load Balancers.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to associate with the service.
    ServiceConfiguration:
      type: object
      properties:
        ServiceType:
          allOf:
            - $ref: "#/components/schemas/ServiceTypeDetailSet"
            - xml:
                name: serviceType
              description: The type of service.
        ServiceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: serviceId
              description: The ID of the service.
        ServiceName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: serviceName
              description: The name of the service.
        ServiceState:
          allOf:
            - $ref: "#/components/schemas/ServiceState"
            - xml:
                name: serviceState
              description: The service state.
        AvailabilityZones:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: availabilityZoneSet
              description: The Availability Zones in which the service is available.
        AcceptanceRequired:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: acceptanceRequired
              description: Indicates whether requests from other AWS accounts to create an endpoint to the service must first be accepted.
        ManagesVpcEndpoints:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: managesVpcEndpoints
              description: Indicates whether the service manages its VPC endpoints. Management of the service VPC endpoints using the VPC endpoint API is restricted.
        NetworkLoadBalancerArns:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: networkLoadBalancerArnSet
              description: The Amazon Resource Names (ARNs) of the Network Load Balancers for the service.
        GatewayLoadBalancerArns:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: gatewayLoadBalancerArnSet
              description: The Amazon Resource Names (ARNs) of the Gateway Load Balancers for the service.
        BaseEndpointDnsNames:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: baseEndpointDnsNameSet
              description: The DNS names for the service.
        PrivateDnsName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateDnsName
              description: The private DNS name for the service.
        PrivateDnsNameConfiguration:
          allOf:
            - $ref: "#/components/schemas/PrivateDnsNameConfiguration"
            - xml:
                name: privateDnsNameConfiguration
              description: Information about the endpoint service private DNS name configuration.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the service.
      description: Describes a service configuration for a VPC endpoint service.
    CreateVpcPeeringConnectionRequest:
      type: object
      title: CreateVpcPeeringConnectionRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        PeerOwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: peerOwnerId
              description: "<p>The Amazon Web Services account ID of the owner of the accepter VPC.</p> <p>Default: Your Amazon Web Services account ID</p>"
        PeerVpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: peerVpcId
              description: The ID of the VPC with which you are creating the VPC peering connection. You must specify this parameter in the request.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - xml:
                name: vpcId
              description: The ID of the requester VPC. You must specify this parameter in the request.
        PeerRegion:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The Region code for the accepter VPC, if the accepter VPC is located in a Region other than the Region in which you make the request.</p> <p>Default: The Region in which you make the request.</p>"
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to assign to the peering connection.
    CreateVpcRequest:
      type: object
      required:
        - CidrBlock
      title: CreateVpcRequest
      properties:
        CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IPv4 network range for the VPC, in CIDR notation. For example, <code>10.0.0.0/16</code>. We modify the specified CIDR block to its canonical form; for example, if you specify <code>100.68.0.18/18</code>, we modify it to <code>100.68.0.0/18</code>.
        AmazonProvidedIpv6CidrBlock:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: amazonProvidedIpv6CidrBlock
              description: Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block.
        Ipv6Pool:
          allOf:
            - $ref: "#/components/schemas/Ipv6PoolEc2Id"
            - description: The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.
        Ipv6CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The IPv6 CIDR block from the IPv6 address pool. You must also specify <code>Ipv6Pool</code> in the request.</p> <p>To let Amazon choose the IPv6 CIDR block for you, omit this parameter.</p>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceTenancy:
          allOf:
            - $ref: "#/components/schemas/Tenancy"
            - xml:
                name: instanceTenancy
              description: "<p>The tenancy options for instances launched into the VPC. For <code>default</code>, instances are launched with shared tenancy by default. You can launch instances with any tenancy into a shared tenancy VPC. For <code>dedicated</code>, instances are launched as dedicated tenancy instances by default. You can only launch instances with a tenancy of <code>dedicated</code> or <code>host</code> into a dedicated tenancy VPC. </p> <p> <b>Important:</b> The <code>host</code> value cannot be used with this parameter. Use the <code>default</code> or <code>dedicated</code> values only.</p> <p>Default: <code>default</code> </p>"
        Ipv6CidrBlockNetworkBorderGroup:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The name of the location from which we advertise the IPV6 CIDR block. Use this parameter to limit the address to this location.</p> <p> You must set <code>AmazonProvidedIpv6CidrBlock</code> to <code>true</code> to use this parameter.</p>
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to assign to the VPC.
    VpnConnectionOptionsSpecification:
      type: object
      properties:
        EnableAcceleration:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "<p>Indicate whether to enable acceleration for the VPN connection.</p> <p>Default: <code>false</code> </p>"
        StaticRoutesOnly:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: staticRoutesOnly
              description: "<p>Indicate whether the VPN connection uses static routes only. If you are creating a VPN connection for a device that does not support BGP, you must specify <code>true</code>. Use <a>CreateVpnConnectionRoute</a> to create a static route.</p> <p>Default: <code>false</code> </p>"
        TunnelInsideIpVersion:
          allOf:
            - $ref: "#/components/schemas/TunnelInsideIpVersion"
            - description: "<p>Indicate whether the VPN tunnels process IPv4 or IPv6 traffic.</p> <p>Default: <code>ipv4</code> </p>"
        TunnelOptions:
          allOf:
            - $ref: "#/components/schemas/VpnTunnelOptionsSpecificationsList"
            - description: The tunnel options for the VPN connection.
        LocalIpv4NetworkCidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The IPv4 CIDR on the customer gateway (on-premises) side of the VPN connection.</p> <p>Default: <code>0.0.0.0/0</code> </p>"
        RemoteIpv4NetworkCidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The IPv4 CIDR on the AWS side of the VPN connection.</p> <p>Default: <code>0.0.0.0/0</code> </p>"
        LocalIpv6NetworkCidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The IPv6 CIDR on the customer gateway (on-premises) side of the VPN connection.</p> <p>Default: <code>::/0</code> </p>"
        RemoteIpv6NetworkCidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The IPv6 CIDR on the AWS side of the VPN connection.</p> <p>Default: <code>::/0</code> </p>"
      description: Describes VPN connection options.
    CreateVpnConnectionRequest:
      type: object
      required:
        - CustomerGatewayId
        - Type
      title: CreateVpnConnectionRequest
      properties:
        CustomerGatewayId:
          allOf:
            - $ref: "#/components/schemas/CustomerGatewayId"
            - description: The ID of the customer gateway.
        Type:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The type of VPN connection (<code>ipsec.1</code>).
        VpnGatewayId:
          allOf:
            - $ref: "#/components/schemas/VpnGatewayId"
            - description: The ID of the virtual private gateway. If you specify a virtual private gateway, you cannot specify a transit gateway.
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayId"
            - description: The ID of the transit gateway. If you specify a transit gateway, you cannot specify a virtual private gateway.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Options:
          allOf:
            - $ref: "#/components/schemas/VpnConnectionOptionsSpecification"
            - xml:
                name: options
              description: The options for the VPN connection.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the VPN connection.
      description: Contains the parameters for CreateVpnConnection.
    VpnConnection:
      type: object
      properties:
        CustomerGatewayConfiguration:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: customerGatewayConfiguration
              description: The configuration information for the VPN connection's customer gateway (in the native XML format). This element is always present in the <a>CreateVpnConnection</a> response; however, it's present in the <a>DescribeVpnConnections</a> response only if the VPN connection is in the <code>pending</code> or <code>available</code> state.
        CustomerGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: customerGatewayId
              description: The ID of the customer gateway at your end of the VPN connection.
        Category:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: category
              description: The category of the VPN connection. A value of <code>VPN</code> indicates an AWS VPN connection. A value of <code>VPN-Classic</code> indicates an AWS Classic VPN connection.
        State:
          allOf:
            - $ref: "#/components/schemas/VpnState"
            - xml:
                name: state
              description: The current state of the VPN connection.
        Type:
          allOf:
            - $ref: "#/components/schemas/GatewayType"
            - xml:
                name: type
              description: The type of VPN connection.
        VpnConnectionId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpnConnectionId
              description: The ID of the VPN connection.
        VpnGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpnGatewayId
              description: The ID of the virtual private gateway at the AWS side of the VPN connection.
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayId
              description: The ID of the transit gateway associated with the VPN connection.
        Options:
          allOf:
            - $ref: "#/components/schemas/VpnConnectionOptions"
            - xml:
                name: options
              description: The VPN connection options.
        Routes:
          allOf:
            - $ref: "#/components/schemas/VpnStaticRouteList"
            - xml:
                name: routes
              description: The static routes associated with the VPN connection.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the VPN connection.
        VgwTelemetry:
          allOf:
            - $ref: "#/components/schemas/VgwTelemetryList"
            - xml:
                name: vgwTelemetry
              description: Information about the VPN tunnel.
      description: Describes a VPN connection.
    CreateVpnConnectionRouteRequest:
      type: object
      required:
        - DestinationCidrBlock
        - VpnConnectionId
      title: CreateVpnConnectionRouteRequest
      properties:
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The CIDR block associated with the local subnet of the customer network.
        VpnConnectionId:
          allOf:
            - $ref: "#/components/schemas/VpnConnectionId"
            - description: The ID of the VPN connection.
      description: Contains the parameters for CreateVpnConnectionRoute.
    CreateVpnGatewayRequest:
      type: object
      required:
        - Type
      title: CreateVpnGatewayRequest
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Availability Zone for the virtual private gateway.
        Type:
          allOf:
            - $ref: "#/components/schemas/GatewayType"
            - description: The type of VPN connection this virtual private gateway supports.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the virtual private gateway.
        AmazonSideAsn:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: "<p>A private Autonomous System Number (ASN) for the Amazon side of a BGP session. If you're using a 16-bit ASN, it must be in the 64512 to 65534 range. If you're using a 32-bit ASN, it must be in the 4200000000 to 4294967294 range.</p> <p>Default: 64512</p>"
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for CreateVpnGateway.
    VpnGateway:
      type: object
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone where the virtual private gateway was created, if applicable. This field may be empty or not returned.
        State:
          allOf:
            - $ref: "#/components/schemas/VpnState"
            - xml:
                name: state
              description: The current state of the virtual private gateway.
        Type:
          allOf:
            - $ref: "#/components/schemas/GatewayType"
            - xml:
                name: type
              description: The type of VPN connection the virtual private gateway supports.
        VpcAttachments:
          allOf:
            - $ref: "#/components/schemas/VpcAttachmentList"
            - xml:
                name: attachments
              description: Any VPCs attached to the virtual private gateway.
        VpnGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpnGatewayId
              description: The ID of the virtual private gateway.
        AmazonSideAsn:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: amazonSideAsn
              description: The private Autonomous System Number (ASN) for the Amazon side of a BGP session.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the virtual private gateway.
      description: Describes a virtual private gateway.
    CreditSpecification:
      type: object
      properties:
        CpuCredits:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cpuCredits
              description: The credit option for CPU usage of a T2, T3, or T3a instance. Valid values are <code>standard</code> and <code>unlimited</code>.
      description: Describes the credit option for CPU usage of a T2, T3, or T3a instance.
    CurrentGenerationFlag:
      type: boolean
    CustomerGatewayIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/CustomerGatewayId"
          - xml:
              name: CustomerGatewayId
    CustomerGatewayList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/CustomerGateway"
          - xml:
              name: item
    DITMaxResults:
      type: integer
      minimum: 5
      maximum: 100
    DITOMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DatafeedSubscriptionState:
      type: string
      enum:
        - Active
        - Inactive
    DedicatedHostFlag:
      type: boolean
    DefaultNetworkCardIndex:
      type: integer
    DeleteCarrierGatewayRequest:
      type: object
      required:
        - CarrierGatewayId
      title: DeleteCarrierGatewayRequest
      properties:
        CarrierGatewayId:
          allOf:
            - $ref: "#/components/schemas/CarrierGatewayId"
            - description: The ID of the carrier gateway.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteClientVpnEndpointRequest:
      type: object
      required:
        - ClientVpnEndpointId
      title: DeleteClientVpnEndpointRequest
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointId"
            - description: The ID of the Client VPN to be deleted.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteClientVpnRouteRequest:
      type: object
      required:
        - ClientVpnEndpointId
        - DestinationCidrBlock
      title: DeleteClientVpnRouteRequest
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointId"
            - description: The ID of the Client VPN endpoint from which the route is to be deleted.
        TargetVpcSubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - description: The ID of the target subnet used by the route.
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IPv4 address range, in CIDR notation, of the route to be deleted.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteCustomerGatewayRequest:
      type: object
      required:
        - CustomerGatewayId
      title: DeleteCustomerGatewayRequest
      properties:
        CustomerGatewayId:
          allOf:
            - $ref: "#/components/schemas/CustomerGatewayId"
            - description: The ID of the customer gateway.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for DeleteCustomerGateway.
    DeleteDhcpOptionsRequest:
      type: object
      required:
        - DhcpOptionsId
      title: DeleteDhcpOptionsRequest
      properties:
        DhcpOptionsId:
          allOf:
            - $ref: "#/components/schemas/DhcpOptionsId"
            - description: The ID of the DHCP options set.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteEgressOnlyInternetGatewayRequest:
      type: object
      required:
        - EgressOnlyInternetGatewayId
      title: DeleteEgressOnlyInternetGatewayRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        EgressOnlyInternetGatewayId:
          allOf:
            - $ref: "#/components/schemas/EgressOnlyInternetGatewayId"
            - description: The ID of the egress-only internet gateway.
    DeleteFleetErrorCode:
      type: string
      enum:
        - fleetIdDoesNotExist
        - fleetIdMalformed
        - fleetNotInDeletableState
        - unexpectedError
    DeleteFleetError:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/DeleteFleetErrorCode"
            - xml:
                name: code
              description: The error code.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: The description for the error code.
      description: Describes an EC2 Fleet error.
    DeleteFleetErrorItem:
      type: object
      properties:
        Error:
          allOf:
            - $ref: "#/components/schemas/DeleteFleetError"
            - xml:
                name: error
              description: The error.
        FleetId:
          allOf:
            - $ref: "#/components/schemas/FleetId"
            - xml:
                name: fleetId
              description: The ID of the EC2 Fleet.
      description: Describes an EC2 Fleet that was not successfully deleted.
    DeleteFleetErrorSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/DeleteFleetErrorItem"
          - xml:
              name: item
    FleetStateCode:
      type: string
      enum:
        - submitted
        - active
        - deleted
        - failed
        - deleted_running
        - deleted_terminating
        - modifying
    DeleteFleetSuccessItem:
      type: object
      properties:
        CurrentFleetState:
          allOf:
            - $ref: "#/components/schemas/FleetStateCode"
            - xml:
                name: currentFleetState
              description: The current state of the EC2 Fleet.
        PreviousFleetState:
          allOf:
            - $ref: "#/components/schemas/FleetStateCode"
            - xml:
                name: previousFleetState
              description: The previous state of the EC2 Fleet.
        FleetId:
          allOf:
            - $ref: "#/components/schemas/FleetId"
            - xml:
                name: fleetId
              description: The ID of the EC2 Fleet.
      description: Describes an EC2 Fleet that was successfully deleted.
    DeleteFleetSuccessSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/DeleteFleetSuccessItem"
          - xml:
              name: item
    FleetIdSet:
      type: array
      items:
        $ref: "#/components/schemas/FleetId"
    DeleteFleetsRequest:
      type: object
      required:
        - FleetIds
        - TerminateInstances
      title: DeleteFleetsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        FleetIds:
          allOf:
            - $ref: "#/components/schemas/FleetIdSet"
            - xml:
                name: FleetId
              description: The IDs of the EC2 Fleets.
        TerminateInstances:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>Indicates whether to terminate the instances when the EC2 Fleet is deleted. The default is to terminate the instances.</p> <p>To let the instances continue to run after the EC2 Fleet is deleted, specify <code>NoTerminateInstances</code>. Supported only for fleets of type <code>maintain</code> and <code>request</code>.</p> <p>For <code>instant</code> fleets, you cannot specify <code>NoTerminateInstances</code>. A deleted <code>instant</code> fleet with running instances is not supported.</p>
    FlowLogIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VpcFlowLogId"
          - xml:
              name: item
    DeleteFlowLogsRequest:
      type: object
      required:
        - FlowLogIds
      title: DeleteFlowLogsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        FlowLogIds:
          allOf:
            - $ref: "#/components/schemas/FlowLogIdList"
            - xml:
                name: FlowLogId
              description: "<p>One or more flow log IDs.</p> <p>Constraint: Maximum of 1000 flow log IDs.</p>"
    DeleteFpgaImageRequest:
      type: object
      required:
        - FpgaImageId
      title: DeleteFpgaImageRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        FpgaImageId:
          allOf:
            - $ref: "#/components/schemas/FpgaImageId"
            - description: The ID of the AFI.
    DeleteInstanceEventWindowRequest:
      type: object
      required:
        - InstanceEventWindowId
      title: DeleteInstanceEventWindowRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ForceDelete:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Specify <code>true</code> to force delete the event window. Use the force delete parameter if the event window is currently associated with targets.
        InstanceEventWindowId:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindowId"
            - description: The ID of the event window.
    InstanceEventWindowStateChange:
      type: object
      properties:
        InstanceEventWindowId:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindowId"
            - xml:
                name: instanceEventWindowId
              description: The ID of the event window.
        State:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindowState"
            - xml:
                name: state
              description: The current state of the event window.
      description: The state of the event window.
    DeleteInternetGatewayRequest:
      type: object
      required:
        - InternetGatewayId
      title: DeleteInternetGatewayRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InternetGatewayId:
          allOf:
            - $ref: "#/components/schemas/InternetGatewayId"
            - xml:
                name: internetGatewayId
              description: The ID of the internet gateway.
    DeleteKeyPairRequest:
      type: object
      title: DeleteKeyPairRequest
      properties:
        KeyName:
          allOf:
            - $ref: "#/components/schemas/KeyPairName"
            - description: The name of the key pair.
        KeyPairId:
          allOf:
            - $ref: "#/components/schemas/KeyPairId"
            - description: The ID of the key pair.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteLaunchTemplateRequest:
      type: object
      title: DeleteLaunchTemplateRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        LaunchTemplateId:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateId"
            - description: The ID of the launch template. You must specify either the launch template ID or launch template name in the request.
        LaunchTemplateName:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateName"
            - description: The name of the launch template. You must specify either the launch template ID or launch template name in the request.
    VersionStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: item
    DeleteLaunchTemplateVersionsRequest:
      type: object
      required:
        - Versions
      title: DeleteLaunchTemplateVersionsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        LaunchTemplateId:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateId"
            - description: The ID of the launch template. You must specify either the launch template ID or launch template name in the request.
        LaunchTemplateName:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateName"
            - description: The name of the launch template. You must specify either the launch template ID or launch template name in the request.
        Versions:
          allOf:
            - $ref: "#/components/schemas/VersionStringList"
            - xml:
                name: LaunchTemplateVersion
              description: The version numbers of one or more launch template versions to delete.
    ResponseError:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateErrorCode"
            - xml:
                name: code
              description: The error code.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: The error message, if applicable.
      description: Describes the error that's returned when you cannot delete a launch template version.
    DeleteLaunchTemplateVersionsResponseErrorItem:
      type: object
      properties:
        LaunchTemplateId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: launchTemplateId
              description: The ID of the launch template.
        LaunchTemplateName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: launchTemplateName
              description: The name of the launch template.
        VersionNumber:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: versionNumber
              description: The version number of the launch template.
        ResponseError:
          allOf:
            - $ref: "#/components/schemas/ResponseError"
            - xml:
                name: responseError
              description: Information about the error.
      description: Describes a launch template version that could not be deleted.
    DeleteLaunchTemplateVersionsResponseErrorSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/DeleteLaunchTemplateVersionsResponseErrorItem"
          - xml:
              name: item
    DeleteLaunchTemplateVersionsResponseSuccessItem:
      type: object
      properties:
        LaunchTemplateId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: launchTemplateId
              description: The ID of the launch template.
        LaunchTemplateName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: launchTemplateName
              description: The name of the launch template.
        VersionNumber:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: versionNumber
              description: The version number of the launch template.
      description: Describes a launch template version that was successfully deleted.
    DeleteLaunchTemplateVersionsResponseSuccessSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/DeleteLaunchTemplateVersionsResponseSuccessItem"
          - xml:
              name: item
    DeleteLocalGatewayRouteRequest:
      type: object
      required:
        - DestinationCidrBlock
        - LocalGatewayRouteTableId
      title: DeleteLocalGatewayRouteRequest
      properties:
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The CIDR range for the route. This must match the CIDR for the route exactly.
        LocalGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRoutetableId"
            - description: The ID of the local gateway route table.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteLocalGatewayRouteTableVpcAssociationRequest:
      type: object
      required:
        - LocalGatewayRouteTableVpcAssociationId
      title: DeleteLocalGatewayRouteTableVpcAssociationRequest
      properties:
        LocalGatewayRouteTableVpcAssociationId:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRouteTableVpcAssociationId"
            - description: The ID of the association.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteManagedPrefixListRequest:
      type: object
      required:
        - PrefixListId
      title: DeleteManagedPrefixListRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        PrefixListId:
          allOf:
            - $ref: "#/components/schemas/PrefixListResourceId"
            - description: The ID of the prefix list.
    DeleteNatGatewayRequest:
      type: object
      required:
        - NatGatewayId
      title: DeleteNatGatewayRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        NatGatewayId:
          allOf:
            - $ref: "#/components/schemas/NatGatewayId"
            - description: The ID of the NAT gateway.
    DeleteNetworkAclEntryRequest:
      type: object
      required:
        - Egress
        - NetworkAclId
        - RuleNumber
      title: DeleteNetworkAclEntryRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Egress:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: egress
              description: Indicates whether the rule is an egress rule.
        NetworkAclId:
          allOf:
            - $ref: "#/components/schemas/NetworkAclId"
            - xml:
                name: networkAclId
              description: The ID of the network ACL.
        RuleNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: ruleNumber
              description: The rule number of the entry to delete.
    DeleteNetworkAclRequest:
      type: object
      required:
        - NetworkAclId
      title: DeleteNetworkAclRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        NetworkAclId:
          allOf:
            - $ref: "#/components/schemas/NetworkAclId"
            - xml:
                name: networkAclId
              description: The ID of the network ACL.
    DeleteNetworkInsightsAnalysisRequest:
      type: object
      required:
        - NetworkInsightsAnalysisId
      title: DeleteNetworkInsightsAnalysisRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        NetworkInsightsAnalysisId:
          allOf:
            - $ref: "#/components/schemas/NetworkInsightsAnalysisId"
            - description: The ID of the network insights analysis.
    DeleteNetworkInsightsPathRequest:
      type: object
      required:
        - NetworkInsightsPathId
      title: DeleteNetworkInsightsPathRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        NetworkInsightsPathId:
          allOf:
            - $ref: "#/components/schemas/NetworkInsightsPathId"
            - description: The ID of the path.
    DeleteNetworkInterfacePermissionRequest:
      type: object
      required:
        - NetworkInterfacePermissionId
      title: DeleteNetworkInterfacePermissionRequest
      properties:
        NetworkInterfacePermissionId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfacePermissionId"
            - description: The ID of the network interface permission.
        Force:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Specify <code>true</code> to remove the permission even if the network interface is attached to an instance.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for DeleteNetworkInterfacePermission.
    DeleteNetworkInterfaceRequest:
      type: object
      required:
        - NetworkInterfaceId
      title: DeleteNetworkInterfaceRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceId"
            - xml:
                name: networkInterfaceId
              description: The ID of the network interface.
      description: Contains the parameters for DeleteNetworkInterface.
    DeletePlacementGroupRequest:
      type: object
      required:
        - GroupName
      title: DeletePlacementGroupRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        GroupName:
          allOf:
            - $ref: "#/components/schemas/PlacementGroupName"
            - xml:
                name: groupName
              description: The name of the placement group.
    DeleteQueuedReservedInstancesErrorCode:
      type: string
      enum:
        - reserved-instances-id-invalid
        - reserved-instances-not-in-queued-state
        - unexpected-error
    DeleteQueuedReservedInstancesError:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/DeleteQueuedReservedInstancesErrorCode"
            - xml:
                name: code
              description: The error code.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: The error message.
      description: Describes the error for a Reserved Instance whose queued purchase could not be deleted.
    DeleteQueuedReservedInstancesIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ReservationId"
          - xml:
              name: item
      minItems: 1
      maxItems: 100
    DeleteQueuedReservedInstancesRequest:
      type: object
      required:
        - ReservedInstancesIds
      title: DeleteQueuedReservedInstancesRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ReservedInstancesIds:
          allOf:
            - $ref: "#/components/schemas/DeleteQueuedReservedInstancesIdList"
            - xml:
                name: ReservedInstancesId
              description: The IDs of the Reserved Instances.
    SuccessfulQueuedPurchaseDeletionSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SuccessfulQueuedPurchaseDeletion"
          - xml:
              name: item
    FailedQueuedPurchaseDeletionSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/FailedQueuedPurchaseDeletion"
          - xml:
              name: item
    DeleteRouteRequest:
      type: object
      required:
        - RouteTableId
      title: DeleteRouteRequest
      properties:
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: destinationCidrBlock
              description: The IPv4 CIDR range for the route. The value you specify must match the CIDR for the route exactly.
        DestinationIpv6CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: destinationIpv6CidrBlock
              description: The IPv6 CIDR range for the route. The value you specify must match the CIDR for the route exactly.
        DestinationPrefixListId:
          allOf:
            - $ref: "#/components/schemas/PrefixListResourceId"
            - description: The ID of the prefix list for the route.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        RouteTableId:
          allOf:
            - $ref: "#/components/schemas/RouteTableId"
            - xml:
                name: routeTableId
              description: The ID of the route table.
    DeleteRouteTableRequest:
      type: object
      required:
        - RouteTableId
      title: DeleteRouteTableRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        RouteTableId:
          allOf:
            - $ref: "#/components/schemas/RouteTableId"
            - xml:
                name: routeTableId
              description: The ID of the route table.
    DeleteSecurityGroupRequest:
      type: object
      title: DeleteSecurityGroupRequest
      properties:
        GroupId:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupId"
            - description: The ID of the security group. Required for a nondefault VPC.
        GroupName:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupName"
            - description: "[EC2-Classic, default VPC] The name of the security group. You can specify either the security group name or the security group ID."
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteSnapshotRequest:
      type: object
      required:
        - SnapshotId
      title: DeleteSnapshotRequest
      properties:
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/SnapshotId"
            - description: The ID of the EBS snapshot.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteSpotDatafeedSubscriptionRequest:
      type: object
      title: DeleteSpotDatafeedSubscriptionRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for DeleteSpotDatafeedSubscription.
    SubnetCidrReservationId:
      type: string
    DeleteSubnetCidrReservationRequest:
      type: object
      required:
        - SubnetCidrReservationId
      title: DeleteSubnetCidrReservationRequest
      properties:
        SubnetCidrReservationId:
          allOf:
            - $ref: "#/components/schemas/SubnetCidrReservationId"
            - description: The ID of the subnet CIDR reservation.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteSubnetRequest:
      type: object
      required:
        - SubnetId
      title: DeleteSubnetRequest
      properties:
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - description: The ID of the subnet.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteTagsRequest:
      type: object
      required:
        - Resources
      title: DeleteTagsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Resources:
          allOf:
            - $ref: "#/components/schemas/ResourceIdList"
            - xml:
                name: resourceId
              description: "<p>The IDs of the resources, separated by spaces.</p> <p>Constraints: Up to 1000 resource IDs. We recommend breaking up this request into smaller batches.</p>"
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tag
              description: <p>The tags to delete. Specify a tag key and an optional tag value to delete specific tags. If you specify a tag key without a tag value, we delete any tag with this key regardless of its value. If you specify a tag key with an empty string as the tag value, we delete the tag only if its value is an empty string.</p> <p>If you omit this parameter, we delete all user-defined tags for the specified resources. We do not delete Amazon Web Services-generated tags (tags that have the <code>aws:</code> prefix).</p>
    DeleteTrafficMirrorFilterRequest:
      type: object
      required:
        - TrafficMirrorFilterId
      title: DeleteTrafficMirrorFilterRequest
      properties:
        TrafficMirrorFilterId:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorFilterId"
            - description: The ID of the Traffic Mirror filter.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TrafficMirrorFilterRuleId:
      type: string
    DeleteTrafficMirrorFilterRuleRequest:
      type: object
      required:
        - TrafficMirrorFilterRuleId
      title: DeleteTrafficMirrorFilterRuleRequest
      properties:
        TrafficMirrorFilterRuleId:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorFilterRuleId"
            - description: The ID of the Traffic Mirror rule.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteTrafficMirrorSessionRequest:
      type: object
      required:
        - TrafficMirrorSessionId
      title: DeleteTrafficMirrorSessionRequest
      properties:
        TrafficMirrorSessionId:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorSessionId"
            - description: The ID of the Traffic Mirror session.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteTrafficMirrorTargetRequest:
      type: object
      required:
        - TrafficMirrorTargetId
      title: DeleteTrafficMirrorTargetRequest
      properties:
        TrafficMirrorTargetId:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorTargetId"
            - description: The ID of the Traffic Mirror target.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteTransitGatewayConnectPeerRequest:
      type: object
      required:
        - TransitGatewayConnectPeerId
      title: DeleteTransitGatewayConnectPeerRequest
      properties:
        TransitGatewayConnectPeerId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayConnectPeerId"
            - description: The ID of the Connect peer.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteTransitGatewayConnectRequest:
      type: object
      required:
        - TransitGatewayAttachmentId
      title: DeleteTransitGatewayConnectRequest
      properties:
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the Connect attachment.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteTransitGatewayMulticastDomainRequest:
      type: object
      required:
        - TransitGatewayMulticastDomainId
      title: DeleteTransitGatewayMulticastDomainRequest
      properties:
        TransitGatewayMulticastDomainId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomainId"
            - description: The ID of the transit gateway multicast domain.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteTransitGatewayPeeringAttachmentRequest:
      type: object
      required:
        - TransitGatewayAttachmentId
      title: DeleteTransitGatewayPeeringAttachmentRequest
      properties:
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the transit gateway peering attachment.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteTransitGatewayPrefixListReferenceRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
        - PrefixListId
      title: DeleteTransitGatewayPrefixListReferenceRequest
      properties:
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableId"
            - description: The ID of the route table.
        PrefixListId:
          allOf:
            - $ref: "#/components/schemas/PrefixListResourceId"
            - description: The ID of the prefix list.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteTransitGatewayRequest:
      type: object
      required:
        - TransitGatewayId
      title: DeleteTransitGatewayRequest
      properties:
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayId"
            - description: The ID of the transit gateway.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteTransitGatewayRouteRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
        - DestinationCidrBlock
      title: DeleteTransitGatewayRouteRequest
      properties:
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableId"
            - description: The ID of the transit gateway route table.
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The CIDR range for the route. This must match the CIDR for the route exactly.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteTransitGatewayRouteTableRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
      title: DeleteTransitGatewayRouteTableRequest
      properties:
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableId"
            - description: The ID of the transit gateway route table.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteTransitGatewayVpcAttachmentRequest:
      type: object
      required:
        - TransitGatewayAttachmentId
      title: DeleteTransitGatewayVpcAttachmentRequest
      properties:
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the attachment.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteVolumeRequest:
      type: object
      required:
        - VolumeId
      title: DeleteVolumeRequest
      properties:
        VolumeId:
          allOf:
            - $ref: "#/components/schemas/VolumeId"
            - description: The ID of the volume.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteVpcEndpointConnectionNotificationsRequest:
      type: object
      required:
        - ConnectionNotificationIds
      title: DeleteVpcEndpointConnectionNotificationsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ConnectionNotificationIds:
          allOf:
            - $ref: "#/components/schemas/ConnectionNotificationIdsList"
            - xml:
                name: ConnectionNotificationId
              description: One or more notification IDs.
    VpcEndpointServiceIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VpcEndpointServiceId"
          - xml:
              name: item
    DeleteVpcEndpointServiceConfigurationsRequest:
      type: object
      required:
        - ServiceIds
      title: DeleteVpcEndpointServiceConfigurationsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ServiceIds:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointServiceIdList"
            - xml:
                name: ServiceId
              description: The IDs of one or more services.
    DeleteVpcEndpointsRequest:
      type: object
      required:
        - VpcEndpointIds
      title: DeleteVpcEndpointsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        VpcEndpointIds:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointIdList"
            - xml:
                name: VpcEndpointId
              description: One or more VPC endpoint IDs.
      description: Contains the parameters for DeleteVpcEndpoints.
    DeleteVpcPeeringConnectionRequest:
      type: object
      required:
        - VpcPeeringConnectionId
      title: DeleteVpcPeeringConnectionRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        VpcPeeringConnectionId:
          allOf:
            - $ref: "#/components/schemas/VpcPeeringConnectionId"
            - xml:
                name: vpcPeeringConnectionId
              description: The ID of the VPC peering connection.
    DeleteVpcRequest:
      type: object
      required:
        - VpcId
      title: DeleteVpcRequest
      properties:
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - description: The ID of the VPC.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeleteVpnConnectionRequest:
      type: object
      required:
        - VpnConnectionId
      title: DeleteVpnConnectionRequest
      properties:
        VpnConnectionId:
          allOf:
            - $ref: "#/components/schemas/VpnConnectionId"
            - description: The ID of the VPN connection.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for DeleteVpnConnection.
    DeleteVpnConnectionRouteRequest:
      type: object
      required:
        - DestinationCidrBlock
        - VpnConnectionId
      title: DeleteVpnConnectionRouteRequest
      properties:
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The CIDR block associated with the local subnet of the customer network.
        VpnConnectionId:
          allOf:
            - $ref: "#/components/schemas/VpnConnectionId"
            - description: The ID of the VPN connection.
      description: Contains the parameters for DeleteVpnConnectionRoute.
    DeleteVpnGatewayRequest:
      type: object
      required:
        - VpnGatewayId
      title: DeleteVpnGatewayRequest
      properties:
        VpnGatewayId:
          allOf:
            - $ref: "#/components/schemas/VpnGatewayId"
            - description: The ID of the virtual private gateway.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for DeleteVpnGateway.
    DeprovisionByoipCidrRequest:
      type: object
      required:
        - Cidr
      title: DeprovisionByoipCidrRequest
      properties:
        Cidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The address range, in CIDR notation. The prefix must be the same prefix that you specified when you provisioned the address range.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DeregisterImageRequest:
      type: object
      required:
        - ImageId
      title: DeregisterImageRequest
      properties:
        ImageId:
          allOf:
            - $ref: "#/components/schemas/ImageId"
            - description: The ID of the AMI.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for DeregisterImage.
    DeregisterInstanceTagAttributeRequest:
      type: object
      properties:
        IncludeAllTagsOfInstance:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether to deregister all tag keys in the current Region. Specify <code>false</code> to deregister all tag keys.
        InstanceTagKeys:
          allOf:
            - $ref: "#/components/schemas/InstanceTagKeySet"
            - xml:
                name: InstanceTagKey
              description: Information about the tag keys to deregister.
      description: Information about the tag keys to deregister for the current Region. You can either specify individual tag keys or deregister all tag keys in the current Region. You must specify either <code>IncludeAllTagsOfInstance</code> or <code>InstanceTagKeys</code> in the request
    DeregisterInstanceEventNotificationAttributesRequest:
      type: object
      title: DeregisterInstanceEventNotificationAttributesRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceTagAttribute:
          allOf:
            - $ref: "#/components/schemas/DeregisterInstanceTagAttributeRequest"
            - description: Information about the tag keys to deregister.
    InstanceTagNotificationAttribute:
      type: object
      properties:
        InstanceTagKeys:
          allOf:
            - $ref: "#/components/schemas/InstanceTagKeySet"
            - xml:
                name: instanceTagKeySet
              description: The registered tag keys.
        IncludeAllTagsOfInstance:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: includeAllTagsOfInstance
              description: Indicates wheter all tag keys in the current Region are registered to appear in scheduled event notifications. <code>true</code> indicates that all tag keys in the current Region are registered.
      description: Describes the registered tag keys for the current Region.
    TransitGatewayNetworkInterfaceIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/NetworkInterfaceId"
          - xml:
              name: item
    DeregisterTransitGatewayMulticastGroupMembersRequest:
      type: object
      title: DeregisterTransitGatewayMulticastGroupMembersRequest
      properties:
        TransitGatewayMulticastDomainId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomainId"
            - description: The ID of the transit gateway multicast domain.
        GroupIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IP address assigned to the transit gateway multicast group.
        NetworkInterfaceIds:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayNetworkInterfaceIdList"
            - description: The IDs of the group members' network interfaces.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayMulticastDeregisteredGroupMembers:
      type: object
      properties:
        TransitGatewayMulticastDomainId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayMulticastDomainId
              description: The ID of the transit gateway multicast domain.
        DeregisteredNetworkInterfaceIds:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: deregisteredNetworkInterfaceIds
              description: The network interface IDs of the deregistered members.
        GroupIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupIpAddress
              description: The IP address assigned to the transit gateway multicast group.
      description: Describes the deregistered transit gateway multicast group members.
    DeregisterTransitGatewayMulticastGroupSourcesRequest:
      type: object
      title: DeregisterTransitGatewayMulticastGroupSourcesRequest
      properties:
        TransitGatewayMulticastDomainId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomainId"
            - description: The ID of the transit gateway multicast domain.
        GroupIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IP address assigned to the transit gateway multicast group.
        NetworkInterfaceIds:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayNetworkInterfaceIdList"
            - description: The IDs of the group sources' network interfaces.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayMulticastDeregisteredGroupSources:
      type: object
      properties:
        TransitGatewayMulticastDomainId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayMulticastDomainId
              description: The ID of the transit gateway multicast domain.
        DeregisteredNetworkInterfaceIds:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: deregisteredNetworkInterfaceIds
              description: The network interface IDs of the non-registered members.
        GroupIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupIpAddress
              description: The IP address assigned to the transit gateway multicast group.
      description: Describes the deregistered transit gateway multicast group sources.
    DescribeAccountAttributesRequest:
      type: object
      title: DescribeAccountAttributesRequest
      properties:
        AttributeNames:
          allOf:
            - $ref: "#/components/schemas/AccountAttributeNameStringList"
            - xml:
                name: attributeName
              description: The account attribute names.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    NextToken:
      type: string
    DescribeAddressesAttributeRequest:
      type: object
      title: DescribeAddressesAttributeRequest
      properties:
        AllocationIds:
          allOf:
            - $ref: "#/components/schemas/AllocationIds"
            - xml:
                name: AllocationId
              description: "[EC2-VPC] The allocation IDs."
        Attribute:
          allOf:
            - $ref: "#/components/schemas/AddressAttributeName"
            - description: The attribute of the IP address.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/AddressMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    FilterList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Filter"
          - xml:
              name: Filter
    PublicIpStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: PublicIp
    DescribeAddressesRequest:
      type: object
      title: DescribeAddressesRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. Filter names and values are case-sensitive.</p> <ul> <li> <p> <code>allocation-id</code> - [EC2-VPC] The allocation ID for the address.</p> </li> <li> <p> <code>association-id</code> - [EC2-VPC] The association ID for the address.</p> </li> <li> <p> <code>domain</code> - Indicates whether the address is for use in EC2-Classic (<code>standard</code>) or in a VPC (<code>vpc</code>).</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance the address is associated with, if any.</p> </li> <li> <p> <code>network-border-group</code> - A unique set of Availability Zones, Local Zones, or Wavelength Zones from where Amazon Web Services advertises IP addresses. </p> </li> <li> <p> <code>network-interface-id</code> - [EC2-VPC] The ID of the network interface that the address is associated with, if any.</p> </li> <li> <p> <code>network-interface-owner-id</code> - The Amazon Web Services account ID of the owner.</p> </li> <li> <p> <code>private-ip-address</code> - [EC2-VPC] The private IP address associated with the Elastic IP address.</p> </li> <li> <p> <code>public-ip</code> - The Elastic IP address, or the carrier IP address.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>
        PublicIps:
          allOf:
            - $ref: "#/components/schemas/PublicIpStringList"
            - xml:
                name: PublicIp
              description: "<p>One or more Elastic IP addresses.</p> <p>Default: Describes all your Elastic IP addresses.</p>"
        AllocationIds:
          allOf:
            - $ref: "#/components/schemas/AllocationIdList"
            - xml:
                name: AllocationId
              description: "[EC2-VPC] Information about the allocation IDs."
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DescribeAggregateIdFormatRequest:
      type: object
      title: DescribeAggregateIdFormatRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    IdFormatList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/IdFormat"
          - xml:
              name: item
    ZoneNameStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: ZoneName
    ZoneIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: ZoneId
    DescribeAvailabilityZonesRequest:
      type: object
      title: DescribeAvailabilityZonesRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters.</p> <ul> <li> <p> <code>group-name</code> - For Availability Zones, use the Region name. For Local Zones, use the name of the group associated with the Local Zone (for example, <code>us-west-2-lax-1</code>) For Wavelength Zones, use the name of the group associated with the Wavelength Zone (for example, <code>us-east-1-wl1-bos-wlz-1</code>).</p> </li> <li> <p> <code>message</code> - The Zone message.</p> </li> <li> <p> <code>opt-in-status</code> - The opt-in status (<code>opted-in</code>, and <code>not-opted-in</code> | <code>opt-in-not-required</code>).</p> </li> <li> <p> <code>parent-zoneID</code> - The ID of the zone that handles some of the Local Zone and Wavelength Zone control plane operations, such as API calls.</p> </li> <li> <p> <code>parent-zoneName</code> - The ID of the zone that handles some of the Local Zone and Wavelength Zone control plane operations, such as API calls.</p> </li> <li> <p> <code>region-name</code> - The name of the Region for the Zone (for example, <code>us-east-1</code>).</p> </li> <li> <p> <code>state</code> - The state of the Availability Zone, the Local Zone, or the Wavelength Zone (<code>available</code> | <code>information</code> | <code>impaired</code> | <code>unavailable</code>).</p> </li> <li> <p> <code>zone-id</code> - The ID of the Availability Zone (for example, <code>use1-az1</code>), the Local Zone (for example, <code>usw2-lax1-az1</code>), or the Wavelength Zone (for example, <code>us-east-1-wl1-bos-wlz-1</code>).</p> </li> <li> <p> <code>zone-type</code> - The type of zone, for example, <code>local-zone</code>.</p> </li> <li> <p> <code>zone-name</code> - The name of the Availability Zone (for example, <code>us-east-1a</code>), the Local Zone (for example, <code>us-west-2-lax-1a</code>), or the Wavelength Zone (for example, <code>us-east-1-wl1-bos-wlz-1</code>).</p> </li> <li> <p> <code>zone-type</code> - The type of zone, for example, <code>local-zone</code>.</p> </li> </ul>
        ZoneNames:
          allOf:
            - $ref: "#/components/schemas/ZoneNameStringList"
            - xml:
                name: ZoneName
              description: The names of the Availability Zones, Local Zones, and Wavelength Zones.
        ZoneIds:
          allOf:
            - $ref: "#/components/schemas/ZoneIdStringList"
            - xml:
                name: ZoneId
              description: The IDs of the Availability Zones, Local Zones, and Wavelength Zones.
        AllAvailabilityZones:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>Include all Availability Zones, Local Zones, and Wavelength Zones regardless of your opt-in status.</p> <p>If you do not use this parameter, the results include only the zones for the Regions where you have chosen the option to opt in.</p>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DescribeBundleTasksRequest:
      type: object
      title: DescribeBundleTasksRequest
      properties:
        BundleIds:
          allOf:
            - $ref: "#/components/schemas/BundleIdStringList"
            - xml:
                name: BundleId
              description: "<p>The bundle task IDs.</p> <p>Default: Describes all your bundle tasks.</p>"
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters.</p> <ul> <li> <p> <code>bundle-id</code> - The ID of the bundle task.</p> </li> <li> <p> <code>error-code</code> - If the task failed, the error code returned.</p> </li> <li> <p> <code>error-message</code> - If the task failed, the error message returned.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>progress</code> - The level of task completion, as a percentage (for example, 20%).</p> </li> <li> <p> <code>s3-bucket</code> - The Amazon S3 bucket to store the AMI.</p> </li> <li> <p> <code>s3-prefix</code> - The beginning of the AMI name.</p> </li> <li> <p> <code>start-time</code> - The time the task started (for example, 2013-09-15T17:15:20.000Z).</p> </li> <li> <p> <code>state</code> - The state of the task (<code>pending</code> | <code>waiting-for-shutdown</code> | <code>bundling</code> | <code>storing</code> | <code>cancelling</code> | <code>complete</code> | <code>failed</code>).</p> </li> <li> <p> <code>update-time</code> - The time of the most recent update for the task.</p> </li> </ul>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DescribeByoipCidrsMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    DescribeByoipCidrsRequest:
      type: object
      required:
        - MaxResults
      title: DescribeByoipCidrsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeByoipCidrsMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    DescribeCapacityReservationsMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    DescribeCapacityReservationsRequest:
      type: object
      title: DescribeCapacityReservationsRequest
      properties:
        CapacityReservationIds:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationIdSet"
            - xml:
                name: CapacityReservationId
              description: The ID of the Capacity Reservation.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to use to retrieve the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeCapacityReservationsMaxResults"
            - description: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>instance-type</code> - The type of instance for which the Capacity Reservation reserves capacity.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the Capacity Reservation.</p> </li> <li> <p> <code>availability-zone-id</code> - The Availability Zone ID of the Capacity Reservation.</p> </li> <li> <p> <code>instance-platform</code> - The type of operating system for which the Capacity Reservation reserves capacity.</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone ID of the Capacity Reservation.</p> </li> <li> <p> <code>tenancy</code> - Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:</p> <ul> <li> <p> <code>default</code> - The Capacity Reservation is created on hardware that is shared with other Amazon Web Services accounts.</p> </li> <li> <p> <code>dedicated</code> - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single Amazon Web Services account.</p> </li> </ul> </li> <li> <p> <code>outpost-arn</code> - The Amazon Resource Name (ARN) of the Outpost on which the Capacity Reservation was created.</p> </li> <li> <p> <code>state</code> - The current state of the Capacity Reservation. A Capacity Reservation can be in one of the following states:</p> <ul> <li> <p> <code>active</code>- The Capacity Reservation is active and the capacity is available for your use.</p> </li> <li> <p> <code>expired</code> - The Capacity Reservation expired automatically at the date and time specified in your request. The reserved capacity is no longer available for your use.</p> </li> <li> <p> <code>cancelled</code> - The Capacity Reservation was cancelled. The reserved capacity is no longer available for your use.</p> </li> <li> <p> <code>pending</code> - The Capacity Reservation request was successful but the capacity provisioning is still pending.</p> </li> <li> <p> <code>failed</code> - The Capacity Reservation request has failed. A request might fail due to invalid request parameters, capacity constraints, or instance limit constraints. Failed requests are retained for 60 minutes.</p> </li> </ul> </li> <li> <p> <code>start-date</code> - The date and time at which the Capacity Reservation was started.</p> </li> <li> <p> <code>end-date</code> - The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to expired when it reaches its end date and time.</p> </li> <li> <p> <code>end-date-type</code> - Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:</p> <ul> <li> <p> <code>unlimited</code> - The Capacity Reservation remains active until you explicitly cancel it.</p> </li> <li> <p> <code>limited</code> - The Capacity Reservation expires automatically at a specified date and time.</p> </li> </ul> </li> <li> <p> <code>instance-match-criteria</code> - Indicates the type of instance launches that the Capacity Reservation accepts. The options include:</p> <ul> <li> <p> <code>open</code> - The Capacity Reservation accepts all instances that have matching attributes (instance type, platform, and Availability Zone). Instances that have matching attributes launch into the Capacity Reservation automatically without specifying any additional parameters.</p> </li> <li> <p> <code>targeted</code> - The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, and Availability Zone), and explicitly target the Capacity Reservation. This ensures that only permitted instances can use the reserved capacity.</p> </li> </ul> </li> </ul>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DescribeCarrierGatewaysRequest:
      type: object
      title: DescribeCarrierGatewaysRequest
      properties:
        CarrierGatewayIds:
          allOf:
            - $ref: "#/components/schemas/CarrierGatewayIdSet"
            - xml:
                name: CarrierGatewayId
              description: One or more carrier gateway IDs.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>carrier-gateway-id</code> - The ID of the carrier gateway.</p> </li> <li> <p> <code>state</code> - The state of the carrier gateway (<code>pending</code> | <code>failed</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>owner-id</code> - The Amazon Web Services account ID of the owner of the carrier gateway.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC associated with the carrier gateway.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/CarrierGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DescribeClassicLinkInstancesMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    InstanceIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceId"
          - xml:
              name: InstanceId
    DescribeClassicLinkInstancesRequest:
      type: object
      title: DescribeClassicLinkInstancesRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>group-id</code> - The ID of a VPC security group that's associated with the instance.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC to which the instance is linked.</p> <p> <code>vpc-id</code> - The ID of the VPC that the instance is linked to.</p> </li> </ul>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIdStringList"
            - xml:
                name: InstanceId
              description: One or more instance IDs. Must be instances linked to a VPC through ClassicLink.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeClassicLinkInstancesMaxResults"
            - xml:
                name: maxResults
              description: "<p>The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.</p> <p>Constraint: If the value is greater than 1000, we return only 1000 items.</p>"
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token for the next page of results.
    DescribeClientVpnAuthorizationRulesMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeClientVpnAuthorizationRulesRequest:
      type: object
      required:
        - ClientVpnEndpointId
      title: DescribeClientVpnAuthorizationRulesRequest
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointId"
            - description: The ID of the Client VPN endpoint.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to retrieve the next page of results.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. Filter names and values are case-sensitive.</p> <ul> <li> <p> <code>description</code> - The description of the authorization rule.</p> </li> <li> <p> <code>destination-cidr</code> - The CIDR of the network to which the authorization rule applies.</p> </li> <li> <p> <code>group-id</code> - The ID of the Active Directory group to which the authorization rule grants access.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeClientVpnAuthorizationRulesMaxResults"
            - description: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.
    DescribeClientVpnConnectionsMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeClientVpnConnectionsRequest:
      type: object
      required:
        - ClientVpnEndpointId
      title: DescribeClientVpnConnectionsRequest
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointId"
            - description: The ID of the Client VPN endpoint.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. Filter names and values are case-sensitive.</p> <ul> <li> <p> <code>connection-id</code> - The ID of the connection.</p> </li> <li> <p> <code>username</code> - For Active Directory client authentication, the user name of the client who established the client connection.</p> </li> </ul>
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to retrieve the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeClientVpnConnectionsMaxResults"
            - description: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DescribeClientVpnEndpointMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeClientVpnEndpointsRequest:
      type: object
      title: DescribeClientVpnEndpointsRequest
      properties:
        ClientVpnEndpointIds:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointIdList"
            - xml:
                name: ClientVpnEndpointId
              description: The ID of the Client VPN endpoint.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeClientVpnEndpointMaxResults"
            - description: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to retrieve the next page of results.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. Filter names and values are case-sensitive.</p> <ul> <li> <p> <code>endpoint-id</code> - The ID of the Client VPN endpoint.</p> </li> <li> <p> <code>transport-protocol</code> - The transport protocol (<code>tcp</code> | <code>udp</code>).</p> </li> </ul>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    EndpointSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ClientVpnEndpoint"
          - xml:
              name: item
    DescribeClientVpnRoutesMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeClientVpnRoutesRequest:
      type: object
      required:
        - ClientVpnEndpointId
      title: DescribeClientVpnRoutesRequest
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointId"
            - description: The ID of the Client VPN endpoint.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. Filter names and values are case-sensitive.</p> <ul> <li> <p> <code>destination-cidr</code> - The CIDR of the route destination.</p> </li> <li> <p> <code>origin</code> - How the route was associated with the Client VPN endpoint (<code>associate</code> | <code>add-route</code>).</p> </li> <li> <p> <code>target-subnet</code> - The ID of the subnet through which traffic is routed.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeClientVpnRoutesMaxResults"
            - description: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to retrieve the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DescribeClientVpnTargetNetworksMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeClientVpnTargetNetworksRequest:
      type: object
      required:
        - ClientVpnEndpointId
      title: DescribeClientVpnTargetNetworksRequest
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointId"
            - description: The ID of the Client VPN endpoint.
        AssociationIds:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - description: The IDs of the target network associations.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeClientVpnTargetNetworksMaxResults"
            - description: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the nextToken value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to retrieve the next page of results.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. Filter names and values are case-sensitive.</p> <ul> <li> <p> <code>association-id</code> - The ID of the association.</p> </li> <li> <p> <code>target-network-id</code> - The ID of the subnet specified as the target network.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC in which the target network is located.</p> </li> </ul>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TargetNetworkSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TargetNetwork"
          - xml:
              name: item
    DescribeCoipPoolsRequest:
      type: object
      title: DescribeCoipPoolsRequest
      properties:
        PoolIds:
          allOf:
            - $ref: "#/components/schemas/CoipPoolIdSet"
            - xml:
                name: PoolId
              description: The IDs of the address pools.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters. The following are the possible values:</p> <ul> <li> <p> <code>coip-pool.pool-id</code> </p> </li> </ul> <ul> <li> <p> <code>coip-pool.local-gateway-route-table-id</code> </p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/CoipPoolMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DescribeConversionTaskList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ConversionTask"
          - xml:
              name: item
    DescribeConversionTasksRequest:
      type: object
      title: DescribeConversionTasksRequest
      properties:
        ConversionTaskIds:
          allOf:
            - $ref: "#/components/schemas/ConversionIdStringList"
            - xml:
                name: conversionTaskId
              description: The conversion task IDs.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DescribeCustomerGatewaysRequest:
      type: object
      title: DescribeCustomerGatewaysRequest
      properties:
        CustomerGatewayIds:
          allOf:
            - $ref: "#/components/schemas/CustomerGatewayIdStringList"
            - xml:
                name: CustomerGatewayId
              description: "<p>One or more customer gateway IDs.</p> <p>Default: Describes all your customer gateways.</p>"
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>bgp-asn</code> - The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).</p> </li> <li> <p> <code>customer-gateway-id</code> - The ID of the customer gateway.</p> </li> <li> <p> <code>ip-address</code> - The IP address of the customer gateway's Internet-routable external interface.</p> </li> <li> <p> <code>state</code> - The state of the customer gateway (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>type</code> - The type of customer gateway. Currently, the only supported type is <code>ipsec.1</code>.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for DescribeCustomerGateways.
    DescribeDhcpOptionsMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DhcpOptionsIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/DhcpOptionsId"
          - xml:
              name: DhcpOptionsId
    DescribeDhcpOptionsRequest:
      type: object
      title: DescribeDhcpOptionsRequest
      properties:
        DhcpOptionsIds:
          allOf:
            - $ref: "#/components/schemas/DhcpOptionsIdStringList"
            - xml:
                name: DhcpOptionsId
              description: "<p>The IDs of one or more DHCP options sets.</p> <p>Default: Describes all your DHCP options sets.</p>"
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>dhcp-options-id</code> - The ID of a DHCP options set.</p> </li> <li> <p> <code>key</code> - The key for one of the options (for example, <code>domain-name</code>).</p> </li> <li> <p> <code>value</code> - The value for one of the options.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the DHCP options set.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeDhcpOptionsMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
    DhcpOptionsList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/DhcpOptions"
          - xml:
              name: item
    DescribeEgressOnlyInternetGatewaysMaxResults:
      type: integer
      minimum: 5
      maximum: 255
    EgressOnlyInternetGatewayIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/EgressOnlyInternetGatewayId"
          - xml:
              name: item
    DescribeEgressOnlyInternetGatewaysRequest:
      type: object
      title: DescribeEgressOnlyInternetGatewaysRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        EgressOnlyInternetGatewayIds:
          allOf:
            - $ref: "#/components/schemas/EgressOnlyInternetGatewayIdList"
            - xml:
                name: EgressOnlyInternetGatewayId
              description: One or more egress-only internet gateway IDs.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeEgressOnlyInternetGatewaysMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>
    EgressOnlyInternetGatewayList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/EgressOnlyInternetGateway"
          - xml:
              name: item
    DescribeElasticGpusMaxResults:
      type: integer
      minimum: 10
      maximum: 1000
    ElasticGpuIdSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ElasticGpuId"
          - xml:
              name: item
    DescribeElasticGpusRequest:
      type: object
      title: DescribeElasticGpusRequest
      properties:
        ElasticGpuIds:
          allOf:
            - $ref: "#/components/schemas/ElasticGpuIdSet"
            - xml:
                name: ElasticGpuId
              description: The Elastic Graphics accelerator IDs.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone in which the Elastic Graphics accelerator resides.</p> </li> <li> <p> <code>elastic-gpu-health</code> - The status of the Elastic Graphics accelerator (<code>OK</code> | <code>IMPAIRED</code>).</p> </li> <li> <p> <code>elastic-gpu-state</code> - The state of the Elastic Graphics accelerator (<code>ATTACHED</code>).</p> </li> <li> <p> <code>elastic-gpu-type</code> - The type of Elastic Graphics accelerator; for example, <code>eg1.medium</code>.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance to which the Elastic Graphics accelerator is associated.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeElasticGpusMaxResults"
            - description: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 5 and 1000.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to request the next page of results.
    ElasticGpuSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ElasticGpus"
          - xml:
              name: item
    DescribeExportImageTasksMaxResults:
      type: integer
      minimum: 1
      maximum: 500
    ExportImageTaskIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ExportImageTaskId"
          - xml:
              name: ExportImageTaskId
    DescribeExportImageTasksRequest:
      type: object
      title: DescribeExportImageTasksRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: "Filter tasks using the <code>task-state</code> filter and one of the following values: <code>active</code>, <code>completed</code>, <code>deleting</code>, or <code>deleted</code>."
        ExportImageTaskIds:
          allOf:
            - $ref: "#/components/schemas/ExportImageTaskIdList"
            - xml:
                name: ExportImageTaskId
              description: The IDs of the export image tasks.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeExportImageTasksMaxResults"
            - description: The maximum number of results to return in a single call.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that indicates the next page of results.
    ExportImageTaskList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ExportImageTask"
          - xml:
              name: item
    ExportTaskIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ExportTaskId"
          - xml:
              name: ExportTaskId
    DescribeExportTasksRequest:
      type: object
      title: DescribeExportTasksRequest
      properties:
        ExportTaskIds:
          allOf:
            - $ref: "#/components/schemas/ExportTaskIdStringList"
            - xml:
                name: exportTaskId
              description: The export task IDs.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: the filters for the export tasks.
    ExportTaskList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ExportTask"
          - xml:
              name: item
    FastSnapshotRestoreStateCode:
      type: string
      enum:
        - enabling
        - optimizing
        - enabled
        - disabling
        - disabled
    DescribeFastSnapshotRestoreSuccessItem:
      type: object
      properties:
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: snapshotId
              description: The ID of the snapshot.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone.
        State:
          allOf:
            - $ref: "#/components/schemas/FastSnapshotRestoreStateCode"
            - xml:
                name: state
              description: The state of fast snapshot restores.
        StateTransitionReason:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: stateTransitionReason
              description: <p>The reason for the state transition. The possible values are as follows:</p> <ul> <li> <p> <code>Client.UserInitiated</code> - The state successfully transitioned to <code>enabling</code> or <code>disabling</code>.</p> </li> <li> <p> <code>Client.UserInitiated - Lifecycle state transition</code> - The state successfully transitioned to <code>optimizing</code>, <code>enabled</code>, or <code>disabled</code>.</p> </li> </ul>
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the Amazon Web Services account that enabled fast snapshot restores on the snapshot.
        OwnerAlias:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerAlias
              description: The Amazon Web Services owner alias that enabled fast snapshot restores on the snapshot. This is intended for future use.
        EnablingTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: enablingTime
              description: The time at which fast snapshot restores entered the <code>enabling</code> state.
        OptimizingTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: optimizingTime
              description: The time at which fast snapshot restores entered the <code>optimizing</code> state.
        EnabledTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: enabledTime
              description: The time at which fast snapshot restores entered the <code>enabled</code> state.
        DisablingTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: disablingTime
              description: The time at which fast snapshot restores entered the <code>disabling</code> state.
        DisabledTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: disabledTime
              description: The time at which fast snapshot restores entered the <code>disabled</code> state.
      description: Describes fast snapshot restores for a snapshot.
    DescribeFastSnapshotRestoreSuccessSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/DescribeFastSnapshotRestoreSuccessItem"
          - xml:
              name: item
    DescribeFastSnapshotRestoresMaxResults:
      type: integer
      minimum: 0
      maximum: 200
    DescribeFastSnapshotRestoresRequest:
      type: object
      title: DescribeFastSnapshotRestoresRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: "<p>The filters. The possible values are:</p> <ul> <li> <p> <code>availability-zone</code>: The Availability Zone of the snapshot.</p> </li> <li> <p> <code>owner-id</code>: The ID of the Amazon Web Services account that enabled fast snapshot restore on the snapshot.</p> </li> <li> <p> <code>snapshot-id</code>: The ID of the snapshot.</p> </li> <li> <p> <code>state</code>: The state of fast snapshot restores for the snapshot (<code>enabling</code> | <code>optimizing</code> | <code>enabled</code> | <code>disabling</code> | <code>disabled</code>).</p> </li> </ul>"
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeFastSnapshotRestoresMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DescribeFleetError:
      type: object
      properties:
        LaunchTemplateAndOverrides:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateAndOverridesResponse"
            - xml:
                name: launchTemplateAndOverrides
              description: The launch templates and overrides that were used for launching the instances. The values that you specify in the Overrides replace the values in the launch template.
        Lifecycle:
          allOf:
            - $ref: "#/components/schemas/InstanceLifecycle"
            - xml:
                name: lifecycle
              description: Indicates if the instance that could not be launched was a Spot Instance or On-Demand Instance.
        ErrorCode:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: errorCode
              description: The error code that indicates why the instance could not be launched. For more information about error codes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html.html">Error Codes</a>.
        ErrorMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: errorMessage
              description: The error message that describes why the instance could not be launched. For more information about error messages, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html.html">Error Codes</a>.
      description: Describes the instances that could not be launched by the fleet.
    FleetEventType:
      type: string
      enum:
        - instance-change
        - fleet-change
        - service-error
    DescribeFleetHistoryRequest:
      type: object
      required:
        - FleetId
        - StartTime
      title: DescribeFleetHistoryRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        EventType:
          allOf:
            - $ref: "#/components/schemas/FleetEventType"
            - description: The type of events to describe. By default, all events are described.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results.
        FleetId:
          allOf:
            - $ref: "#/components/schemas/FleetId"
            - description: The ID of the EC2 Fleet.
        StartTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The start date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
    HistoryRecordSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/HistoryRecordEntry"
          - xml:
              name: item
    DescribeFleetInstancesRequest:
      type: object
      required:
        - FleetId
      title: DescribeFleetInstancesRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results.
        FleetId:
          allOf:
            - $ref: "#/components/schemas/FleetId"
            - description: The ID of the EC2 Fleet.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters.</p> <ul> <li> <p> <code>instance-type</code> - The instance type.</p> </li> </ul>
    DescribeFleetsErrorSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/DescribeFleetError"
          - xml:
              name: item
    DescribeFleetsInstances:
      type: object
      properties:
        LaunchTemplateAndOverrides:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateAndOverridesResponse"
            - xml:
                name: launchTemplateAndOverrides
              description: The launch templates and overrides that were used for launching the instances. The values that you specify in the Overrides replace the values in the launch template.
        Lifecycle:
          allOf:
            - $ref: "#/components/schemas/InstanceLifecycle"
            - xml:
                name: lifecycle
              description: Indicates if the instance that was launched is a Spot Instance or On-Demand Instance.
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIdsSet"
            - xml:
                name: instanceIds
              description: The IDs of the instances.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/InstanceType"
            - xml:
                name: instanceType
              description: The instance type.
        Platform:
          allOf:
            - $ref: "#/components/schemas/PlatformValues"
            - xml:
                name: platform
              description: The value is <code>Windows</code> for Windows instances. Otherwise, the value is blank.
      description: Describes the instances that were launched by the fleet.
    DescribeFleetsInstancesSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/DescribeFleetsInstances"
          - xml:
              name: item
    DescribeFleetsRequest:
      type: object
      title: DescribeFleetsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results.
        FleetIds:
          allOf:
            - $ref: "#/components/schemas/FleetIdSet"
            - xml:
                name: FleetId
              description: The ID of the EC2 Fleets.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters.</p> <ul> <li> <p> <code>activity-status</code> - The progress of the EC2 Fleet ( <code>error</code> | <code>pending-fulfillment</code> | <code>pending-termination</code> | <code>fulfilled</code>).</p> </li> <li> <p> <code>excess-capacity-termination-policy</code> - Indicates whether to terminate running instances if the target capacity is decreased below the current EC2 Fleet size (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>fleet-state</code> - The state of the EC2 Fleet (<code>submitted</code> | <code>active</code> | <code>deleted</code> | <code>failed</code> | <code>deleted-running</code> | <code>deleted-terminating</code> | <code>modifying</code>).</p> </li> <li> <p> <code>replace-unhealthy-instances</code> - Indicates whether EC2 Fleet should replace unhealthy instances (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>type</code> - The type of request (<code>instant</code> | <code>request</code> | <code>maintain</code>).</p> </li> </ul>
    FleetSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/FleetData"
          - xml:
              name: item
    DescribeFlowLogsRequest:
      type: object
      title: DescribeFlowLogsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Filter:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - description: <p>One or more filters.</p> <ul> <li> <p> <code>deliver-log-status</code> - The status of the logs delivery (<code>SUCCESS</code> | <code>FAILED</code>).</p> </li> <li> <p> <code>log-destination-type</code> - The type of destination to which the flow log publishes data. Possible destination types include <code>cloud-watch-logs</code> and <code>s3</code>.</p> </li> <li> <p> <code>flow-log-id</code> - The ID of the flow log.</p> </li> <li> <p> <code>log-group-name</code> - The name of the log group.</p> </li> <li> <p> <code>resource-id</code> - The ID of the VPC, subnet, or network interface.</p> </li> <li> <p> <code>traffic-type</code> - The type of traffic (<code>ACCEPT</code> | <code>REJECT</code> | <code>ALL</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>
        FlowLogIds:
          allOf:
            - $ref: "#/components/schemas/FlowLogIdList"
            - xml:
                name: FlowLogId
              description: "<p>One or more flow log IDs.</p> <p>Constraint: Maximum of 1000 flow log IDs.</p>"
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
    FlowLogSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/FlowLog"
          - xml:
              name: item
    FpgaImageAttributeName:
      type: string
      enum:
        - description
        - name
        - loadPermission
        - productCodes
    DescribeFpgaImageAttributeRequest:
      type: object
      required:
        - FpgaImageId
        - Attribute
      title: DescribeFpgaImageAttributeRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        FpgaImageId:
          allOf:
            - $ref: "#/components/schemas/FpgaImageId"
            - description: The ID of the AFI.
        Attribute:
          allOf:
            - $ref: "#/components/schemas/FpgaImageAttributeName"
            - description: The AFI attribute.
    FpgaImageAttribute:
      type: object
      properties:
        FpgaImageId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: fpgaImageId
              description: The ID of the AFI.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: name
              description: The name of the AFI.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: The description of the AFI.
        LoadPermissions:
          allOf:
            - $ref: "#/components/schemas/LoadPermissionList"
            - xml:
                name: loadPermissions
              description: The load permissions.
        ProductCodes:
          allOf:
            - $ref: "#/components/schemas/ProductCodeList"
            - xml:
                name: productCodes
              description: The product codes.
      description: Describes an Amazon FPGA image (AFI) attribute.
    DescribeFpgaImagesMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    FpgaImageIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/FpgaImageId"
          - xml:
              name: item
    OwnerStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: Owner
    DescribeFpgaImagesRequest:
      type: object
      title: DescribeFpgaImagesRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        FpgaImageIds:
          allOf:
            - $ref: "#/components/schemas/FpgaImageIdList"
            - xml:
                name: FpgaImageId
              description: The AFI IDs.
        Owners:
          allOf:
            - $ref: "#/components/schemas/OwnerStringList"
            - xml:
                name: Owner
              description: Filters the AFI by owner. Specify an AWS account ID, <code>self</code> (owner is the sender of the request), or an AWS owner alias (valid values are <code>amazon</code> | <code>aws-marketplace</code>).
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters.</p> <ul> <li> <p> <code>create-time</code> - The creation time of the AFI.</p> </li> <li> <p> <code>fpga-image-id</code> - The FPGA image identifier (AFI ID).</p> </li> <li> <p> <code>fpga-image-global-id</code> - The global FPGA image identifier (AGFI ID).</p> </li> <li> <p> <code>name</code> - The name of the AFI.</p> </li> <li> <p> <code>owner-id</code> - The AWS account ID of the AFI owner.</p> </li> <li> <p> <code>product-code</code> - The product code.</p> </li> <li> <p> <code>shell-version</code> - The version of the AWS Shell that was used to create the bitstream.</p> </li> <li> <p> <code>state</code> - The state of the AFI (<code>pending</code> | <code>failed</code> | <code>available</code> | <code>unavailable</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>update-time</code> - The time of the most recent update.</p> </li> </ul>
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to retrieve the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeFpgaImagesMaxResults"
            - description: The maximum number of results to return in a single call.
    FpgaImageList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/FpgaImage"
          - xml:
              name: item
    DescribeHostReservationsMaxResults:
      type: integer
      minimum: 5
      maximum: 500
    OfferingId:
      type: string
    DescribeHostReservationOfferingsRequest:
      type: object
      title: DescribeHostReservationOfferingsRequest
      properties:
        Filter:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - description: <p>The filters.</p> <ul> <li> <p> <code>instance-family</code> - The instance family of the offering (for example, <code>m4</code>).</p> </li> <li> <p> <code>payment-option</code> - The payment option (<code>NoUpfront</code> | <code>PartialUpfront</code> | <code>AllUpfront</code>).</p> </li> </ul>
        MaxDuration:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: This is the maximum duration of the reservation to purchase, specified in seconds. Reservations are available in one-year and three-year terms. The number of seconds specified must be the number of seconds in a year (365x24x60x60) times one of the supported durations (1 or 3). For example, specify 94608000 for three years.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeHostReservationsMaxResults"
            - description: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.
        MinDuration:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: This is the minimum duration of the reservation you'd like to purchase, specified in seconds. Reservations are available in one-year and three-year terms. The number of seconds specified must be the number of seconds in a year (365x24x60x60) times one of the supported durations (1 or 3). For example, specify 31536000 for one year.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to use to retrieve the next page of results.
        OfferingId:
          allOf:
            - $ref: "#/components/schemas/OfferingId"
            - description: The ID of the reservation offering.
    HostOfferingSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/HostOffering"
          - xml:
              name: item
    HostReservationIdSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/HostReservationId"
          - xml:
              name: item
    DescribeHostReservationsRequest:
      type: object
      title: DescribeHostReservationsRequest
      properties:
        Filter:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - description: <p>The filters.</p> <ul> <li> <p> <code>instance-family</code> - The instance family (for example, <code>m4</code>).</p> </li> <li> <p> <code>payment-option</code> - The payment option (<code>NoUpfront</code> | <code>PartialUpfront</code> | <code>AllUpfront</code>).</p> </li> <li> <p> <code>state</code> - The state of the reservation (<code>payment-pending</code> | <code>payment-failed</code> | <code>active</code> | <code>retired</code>).</p> </li> <li> <p> <code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>
        HostReservationIdSet:
          allOf:
            - $ref: "#/components/schemas/HostReservationIdSet"
            - description: The host reservation IDs.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to use to retrieve the next page of results.
    HostReservationSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/HostReservation"
          - xml:
              name: item
    RequestHostIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/DedicatedHostId"
          - xml:
              name: item
    DescribeHostsRequest:
      type: object
      title: DescribeHostsRequest
      properties:
        Filter:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: filter
              description: <p>The filters.</p> <ul> <li> <p> <code>auto-placement</code> - Whether auto-placement is enabled or disabled (<code>on</code> | <code>off</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the host.</p> </li> <li> <p> <code>client-token</code> - The idempotency token that you provided when you allocated the host.</p> </li> <li> <p> <code>host-reservation-id</code> - The ID of the reservation assigned to this host.</p> </li> <li> <p> <code>instance-type</code> - The instance type size that the Dedicated Host is configured to support.</p> </li> <li> <p> <code>state</code> - The allocation state of the Dedicated Host (<code>available</code> | <code>under-assessment</code> | <code>permanent-failure</code> | <code>released</code> | <code>released-permanent-failure</code>).</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>
        HostIds:
          allOf:
            - $ref: "#/components/schemas/RequestHostIdList"
            - xml:
                name: hostId
              description: The IDs of the Dedicated Hosts. The IDs are used for targeted instance launches.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: maxResults
              description: <p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.</p> <p>You cannot specify this parameter and the host IDs parameter in the same request.</p>
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to use to retrieve the next page of results.
    HostList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Host"
          - xml:
              name: item
    DescribeIamInstanceProfileAssociationsMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeIamInstanceProfileAssociationsRequest:
      type: object
      title: DescribeIamInstanceProfileAssociationsRequest
      properties:
        AssociationIds:
          allOf:
            - $ref: "#/components/schemas/AssociationIdList"
            - xml:
                name: AssociationId
              description: The IAM instance profile associations.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters.</p> <ul> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>state</code> - The state of the association (<code>associating</code> | <code>associated</code> | <code>disassociating</code>).</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeIamInstanceProfileAssociationsMaxResults"
            - description: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to request the next page of results.
    IamInstanceProfileAssociationSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/IamInstanceProfileAssociation"
          - xml:
              name: item
    DescribeIdFormatRequest:
      type: object
      title: DescribeIdFormatRequest
      properties:
        Resource:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code> "
    DescribeIdentityIdFormatRequest:
      type: object
      required:
        - PrincipalArn
      title: DescribeIdentityIdFormatRequest
      properties:
        PrincipalArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: principalArn
              description: The ARN of the principal, which can be an IAM role, IAM user, or the root user.
        Resource:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resource
              description: "The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code> "
    ImageAttributeName:
      type: string
      enum:
        - description
        - kernel
        - ramdisk
        - launchPermission
        - productCodes
        - blockDeviceMapping
        - sriovNetSupport
        - bootMode
    DescribeImageAttributeRequest:
      type: object
      required:
        - Attribute
        - ImageId
      title: DescribeImageAttributeRequest
      properties:
        Attribute:
          allOf:
            - $ref: "#/components/schemas/ImageAttributeName"
            - description: "<p>The AMI attribute.</p> <p> <b>Note</b>: The <code>blockDeviceMapping</code> attribute is deprecated. Using this attribute returns the <code>Client.AuthFailure</code> error. To get information about the block device mappings for an AMI, use the <a>DescribeImages</a> action.</p>"
        ImageId:
          allOf:
            - $ref: "#/components/schemas/ImageId"
            - description: The ID of the AMI.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for DescribeImageAttribute.
    ExecutableByStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: ExecutableBy
    ImageIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ImageId"
          - xml:
              name: ImageId
    DescribeImagesRequest:
      type: object
      title: DescribeImagesRequest
      properties:
        ExecutableUsers:
          allOf:
            - $ref: "#/components/schemas/ExecutableByStringList"
            - xml:
                name: ExecutableBy
              description: Scopes the images by users with explicit launch permissions. Specify an Amazon Web Services account ID, <code>self</code> (the sender of the request), or <code>all</code> (public AMIs).
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters.</p> <ul> <li> <p> <code>architecture</code> - The image architecture (<code>i386</code> | <code>x86_64</code> | <code>arm64</code>).</p> </li> <li> <p> <code>block-device-mapping.delete-on-termination</code> - A Boolean value that indicates whether the Amazon EBS volume is deleted on instance termination.</p> </li> <li> <p> <code>block-device-mapping.device-name</code> - The device name specified in the block device mapping (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p> </li> <li> <p> <code>block-device-mapping.snapshot-id</code> - The ID of the snapshot used for the Amazon EBS volume.</p> </li> <li> <p> <code>block-device-mapping.volume-size</code> - The volume size of the Amazon EBS volume, in GiB.</p> </li> <li> <p> <code>block-device-mapping.volume-type</code> - The volume type of the Amazon EBS volume (<code>io1</code> | <code>io2</code> | <code>gp2</code> | <code>gp3</code> | <code>sc1 </code>| <code>st1</code> | <code>standard</code>).</p> </li> <li> <p> <code>block-device-mapping.encrypted</code> - A Boolean that indicates whether the Amazon EBS volume is encrypted.</p> </li> <li> <p> <code>description</code> - The description of the image (provided during image creation).</p> </li> <li> <p> <code>ena-support</code> - A Boolean that indicates whether enhanced networking with ENA is enabled.</p> </li> <li> <p> <code>hypervisor</code> - The hypervisor type (<code>ovm</code> | <code>xen</code>).</p> </li> <li> <p> <code>image-id</code> - The ID of the image.</p> </li> <li> <p> <code>image-type</code> - The image type (<code>machine</code> | <code>kernel</code> | <code>ramdisk</code>).</p> </li> <li> <p> <code>is-public</code> - A Boolean that indicates whether the image is public.</p> </li> <li> <p> <code>kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>manifest-location</code> - The location of the image manifest.</p> </li> <li> <p> <code>name</code> - The name of the AMI (provided during image creation).</p> </li> <li> <p> <code>owner-alias</code> - The owner alias (<code>amazon</code> | <code>aws-marketplace</code>). The valid aliases are defined in an Amazon-maintained list. This is not the Amazon Web Services account alias that can be set using the IAM console. We recommend that you use the <b>Owner</b> request parameter instead of this filter.</p> </li> <li> <p> <code>owner-id</code> - The Amazon Web Services account ID of the owner. We recommend that you use the <b>Owner</b> request parameter instead of this filter.</p> </li> <li> <p> <code>platform</code> - The platform. To only list Windows-based AMIs, use <code>windows</code>.</p> </li> <li> <p> <code>product-code</code> - The product code.</p> </li> <li> <p> <code>product-code.type</code> - The type of the product code (<code>marketplace</code>).</p> </li> <li> <p> <code>ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p> <code>root-device-name</code> - The device name of the root device volume (for example, <code>/dev/sda1</code>).</p> </li> <li> <p> <code>root-device-type</code> - The type of the root device volume (<code>ebs</code> | <code>instance-store</code>).</p> </li> <li> <p> <code>state</code> - The state of the image (<code>available</code> | <code>pending</code> | <code>failed</code>).</p> </li> <li> <p> <code>state-reason-code</code> - The reason code for the state change.</p> </li> <li> <p> <code>state-reason-message</code> - The message for the state change.</p> </li> <li> <p> <code>sriov-net-support</code> - A value of <code>simple</code> indicates that enhanced networking with the Intel 82599 VF interface is enabled.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>virtualization-type</code> - The virtualization type (<code>paravirtual</code> | <code>hvm</code>).</p> </li> </ul>
        ImageIds:
          allOf:
            - $ref: "#/components/schemas/ImageIdStringList"
            - xml:
                name: ImageId
              description: "<p>The image IDs.</p> <p>Default: Describes all images available to you.</p>"
        Owners:
          allOf:
            - $ref: "#/components/schemas/OwnerStringList"
            - xml:
                name: Owner
              description: Scopes the results to images with the specified owners. You can specify a combination of Amazon Web Services account IDs, <code>self</code>, <code>amazon</code>, and <code>aws-marketplace</code>. If you omit this parameter, the results include all images for which you have launch permissions, regardless of ownership.
        IncludeDeprecated:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>If <code>true</code>, all deprecated AMIs are included in the response. If <code>false</code>, no deprecated AMIs are included in the response. If no value is specified, the default value is <code>false</code>.</p> <note> <p>If you are the AMI owner, all deprecated AMIs appear in the response regardless of the value (<code>true</code> or <code>false</code>) that you set for this parameter.</p> </note>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ImageList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Image"
          - xml:
              name: item
    ImportTaskIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ImportImageTaskId"
          - xml:
              name: ImportTaskId
    DescribeImportImageTasksRequest:
      type: object
      title: DescribeImportImageTasksRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - description: "Filter tasks using the <code>task-state</code> filter and one of the following values: <code>active</code>, <code>completed</code>, <code>deleting</code>, or <code>deleted</code>."
        ImportTaskIds:
          allOf:
            - $ref: "#/components/schemas/ImportTaskIdList"
            - xml:
                name: ImportTaskId
              description: The IDs of the import image tasks.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of results to return in a single call.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A token that indicates the next page of results.
    ImportImageTaskList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ImportImageTask"
          - xml:
              name: item
    ImportSnapshotTaskIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ImportSnapshotTaskId"
          - xml:
              name: ImportTaskId
    DescribeImportSnapshotTasksRequest:
      type: object
      title: DescribeImportSnapshotTasksRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - description: The filters.
        ImportTaskIds:
          allOf:
            - $ref: "#/components/schemas/ImportSnapshotTaskIdList"
            - xml:
                name: ImportTaskId
              description: A list of import snapshot task IDs.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A token that indicates the next page of results.
    ImportSnapshotTaskList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ImportSnapshotTask"
          - xml:
              name: item
    InstanceAttributeName:
      type: string
      enum:
        - instanceType
        - kernel
        - ramdisk
        - userData
        - disableApiTermination
        - instanceInitiatedShutdownBehavior
        - rootDeviceName
        - blockDeviceMapping
        - productCodes
        - sourceDestCheck
        - groupSet
        - ebsOptimized
        - sriovNetSupport
        - enaSupport
        - enclaveOptions
    DescribeInstanceAttributeRequest:
      type: object
      required:
        - Attribute
        - InstanceId
      title: DescribeInstanceAttributeRequest
      properties:
        Attribute:
          allOf:
            - $ref: "#/components/schemas/InstanceAttributeName"
            - xml:
                name: attribute
              description: "<p>The instance attribute.</p> <p>Note: The <code>enaSupport</code> attribute is not supported at this time.</p>"
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - xml:
                name: instanceId
              description: The ID of the instance.
    DescribeInstanceCreditSpecificationsMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeInstanceCreditSpecificationsRequest:
      type: object
      title: DescribeInstanceCreditSpecificationsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters.</p> <ul> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> </ul>
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIdStringList"
            - xml:
                name: InstanceId
              description: "<p>The instance IDs.</p> <p>Default: Describes all your instances.</p> <p>Constraints: Maximum 1000 explicitly specified instance IDs.</p>"
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeInstanceCreditSpecificationsMaxResults"
            - description: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to retrieve the next page of results.
    InstanceCreditSpecificationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceCreditSpecification"
          - xml:
              name: item
    DescribeInstanceEventNotificationAttributesRequest:
      type: object
      title: DescribeInstanceEventNotificationAttributesRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    InstanceEventWindowIdSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceEventWindowId"
          - xml:
              name: InstanceEventWindowId
    ResultRange:
      type: integer
      minimum: 20
      maximum: 500
    DescribeInstanceEventWindowsRequest:
      type: object
      title: DescribeInstanceEventWindowsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceEventWindowIds:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindowIdSet"
            - xml:
                name: InstanceEventWindowId
              description: The IDs of the event windows.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>dedicated-host-id</code> - The event windows associated with the specified Dedicated Host ID.</p> </li> <li> <p> <code>event-window-name</code> - The event windows associated with the specified names. </p> </li> <li> <p> <code>instance-id</code> - The event windows associated with the specified instance ID.</p> </li> <li> <p> <code>instance-tag</code> - The event windows associated with the specified tag and value.</p> </li> <li> <p> <code>instance-tag-key</code> - The event windows associated with the specified tag key, regardless of the value.</p> </li> <li> <p> <code>instance-tag-value</code> - The event windows associated with the specified tag value, regardless of the key.</p> </li> <li> <p> <code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the event window. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>CMX</code>, specify <code>tag:Owner</code> for the filter name and <code>CMX</code> for the filter value. </p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the event window. Use this filter to find all event windows that have a tag with a specific key, regardless of the tag value. </p> </li> <li> <p> <code>tag-value</code> - The value of a tag assigned to the event window. Use this filter to find all event windows that have a tag with a specific value, regardless of the tag key. </p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/ResultRange"
            - description: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 20 and 500. You cannot specify this parameter and the event window IDs parameter in the same call.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to request the next page of results.
      description: <para>Describe instance event windows by InstanceEventWindow.</para>
    InstanceEventWindowSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceEventWindow"
          - xml:
              name: item
    DescribeInstanceStatusRequest:
      type: object
      title: DescribeInstanceStatusRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone of the instance.</p> </li> <li> <p> <code>event.code</code> - The code for the scheduled event (<code>instance-reboot</code> | <code>system-reboot</code> | <code>system-maintenance</code> | <code>instance-retirement</code> | <code>instance-stop</code>).</p> </li> <li> <p> <code>event.description</code> - A description of the event.</p> </li> <li> <p> <code>event.instance-event-id</code> - The ID of the event whose date and time you are modifying.</p> </li> <li> <p> <code>event.not-after</code> - The latest end time for the scheduled event (for example, <code>2014-09-15T17:15:20.000Z</code>).</p> </li> <li> <p> <code>event.not-before</code> - The earliest start time for the scheduled event (for example, <code>2014-09-15T17:15:20.000Z</code>).</p> </li> <li> <p> <code>event.not-before-deadline</code> - The deadline for starting the event (for example, <code>2014-09-15T17:15:20.000Z</code>).</p> </li> <li> <p> <code>instance-state-code</code> - The code for the instance state, as a 16-bit unsigned integer. The high byte is used for internal purposes and should be ignored. The low byte is set based on the state represented. The valid values are 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).</p> </li> <li> <p> <code>instance-state-name</code> - The state of the instance (<code>pending</code> | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code> | <code>stopped</code>).</p> </li> <li> <p> <code>instance-status.reachability</code> - Filters on instance status where the name is <code>reachability</code> (<code>passed</code> | <code>failed</code> | <code>initializing</code> | <code>insufficient-data</code>).</p> </li> <li> <p> <code>instance-status.status</code> - The status of the instance (<code>ok</code> | <code>impaired</code> | <code>initializing</code> | <code>insufficient-data</code> | <code>not-applicable</code>).</p> </li> <li> <p> <code>system-status.reachability</code> - Filters on system status where the name is <code>reachability</code> (<code>passed</code> | <code>failed</code> | <code>initializing</code> | <code>insufficient-data</code>).</p> </li> <li> <p> <code>system-status.status</code> - The system status of the instance (<code>ok</code> | <code>impaired</code> | <code>initializing</code> | <code>insufficient-data</code> | <code>not-applicable</code>).</p> </li> </ul>
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIdStringList"
            - xml:
                name: InstanceId
              description: "<p>The instance IDs.</p> <p>Default: Describes all your instances.</p> <p>Constraints: Maximum 100 explicitly specified instance IDs.</p>"
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to retrieve the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        IncludeAllInstances:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: includeAllInstances
              description: "<p>When <code>true</code>, includes the health status for all instances. When <code>false</code>, includes the health status for running instances only.</p> <p>Default: <code>false</code> </p>"
    InstanceStatusList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceStatus"
          - xml:
              name: item
    LocationType:
      type: string
      enum:
        - region
        - availability-zone
        - availability-zone-id
    DescribeInstanceTypeOfferingsRequest:
      type: object
      title: DescribeInstanceTypeOfferingsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        LocationType:
          allOf:
            - $ref: "#/components/schemas/LocationType"
            - description: The location type.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. Filter names and values are case-sensitive.</p> <ul> <li> <p> <code>location</code> - This depends on the location type. For example, if the location type is <code>region</code> (default), the location is the Region code (for example, <code>us-east-2</code>.)</p> </li> <li> <p> <code>instance-type</code> - The instance type. For example, <code>c5.2xlarge</code>.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DITOMaxResults"
            - description: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the next token value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to retrieve the next page of results.
    InstanceTypeOfferingsList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceTypeOffering"
          - xml:
              name: item
    RequestInstanceTypeList:
      type: array
      items:
        $ref: "#/components/schemas/InstanceType"
      minItems: 0
      maxItems: 100
    DescribeInstanceTypesRequest:
      type: object
      title: DescribeInstanceTypesRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceTypes:
          allOf:
            - $ref: "#/components/schemas/RequestInstanceTypeList"
            - xml:
                name: InstanceType
              description: The instance types. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide</i>.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. Filter names and values are case-sensitive.</p> <ul> <li> <p> <code>auto-recovery-supported</code> - Indicates whether auto recovery is supported (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>bare-metal</code> - Indicates whether it is a bare metal instance type (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>burstable-performance-supported</code> - Indicates whether it is a burstable performance instance type (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>current-generation</code> - Indicates whether this instance type is the latest generation instance type of an instance family (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>ebs-info.ebs-optimized-info.baseline-bandwidth-in-mbps</code> - The baseline bandwidth performance for an EBS-optimized instance type, in Mbps.</p> </li> <li> <p> <code>ebs-info.ebs-optimized-info.baseline-iops</code> - The baseline input/output storage operations per second for an EBS-optimized instance type.</p> </li> <li> <p> <code>ebs-info.ebs-optimized-info.baseline-throughput-in-mbps</code> - The baseline throughput performance for an EBS-optimized instance type, in MB/s.</p> </li> <li> <p> <code>ebs-info.ebs-optimized-info.maximum-bandwidth-in-mbps</code> - The maximum bandwidth performance for an EBS-optimized instance type, in Mbps.</p> </li> <li> <p> <code>ebs-info.ebs-optimized-info.maximum-iops</code> - The maximum input/output storage operations per second for an EBS-optimized instance type.</p> </li> <li> <p> <code>ebs-info.ebs-optimized-info.maximum-throughput-in-mbps</code> - The maximum throughput performance for an EBS-optimized instance type, in MB/s.</p> </li> <li> <p> <code>ebs-info.ebs-optimized-support</code> - Indicates whether the instance type is EBS-optimized (<code>supported</code> | <code>unsupported</code> | <code>default</code>).</p> </li> <li> <p> <code>ebs-info.encryption-support</code> - Indicates whether EBS encryption is supported (<code>supported</code> | <code>unsupported</code>).</p> </li> <li> <p> <code>ebs-info.nvme-support</code> - Indicates whether non-volatile memory express (NVMe) is supported for EBS volumes (<code>required</code> | <code>supported</code> | <code>unsupported</code>).</p> </li> <li> <p> <code>free-tier-eligible</code> - Indicates whether the instance type is eligible to use in the free tier (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>hibernation-supported</code> - Indicates whether On-Demand hibernation is supported (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>hypervisor</code> - The hypervisor (<code>nitro</code> | <code>xen</code>).</p> </li> <li> <p> <code>instance-storage-info.disk.count</code> - The number of local disks.</p> </li> <li> <p> <code>instance-storage-info.disk.size-in-gb</code> - The storage size of each instance storage disk, in GB.</p> </li> <li> <p> <code>instance-storage-info.disk.type</code> - The storage technology for the local instance storage disks (<code>hdd</code> | <code>ssd</code>).</p> </li> <li> <p> <code>instance-storage-info.nvme-support</code> - Indicates whether non-volatile memory express (NVMe) is supported for instance store (<code>required</code> | <code>supported</code>) | <code>unsupported</code>).</p> </li> <li> <p> <code>instance-storage-info.total-size-in-gb</code> - The total amount of storage available from all local instance storage, in GB.</p> </li> <li> <p> <code>instance-storage-supported</code> - Indicates whether the instance type has local instance storage (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>instance-type</code> - The instance type (for example <code>c5.2xlarge</code> or c5*).</p> </li> <li> <p> <code>memory-info.size-in-mib</code> - The memory size.</p> </li> <li> <p> <code>network-info.efa-info.maximum-efa-interfaces</code> - The maximum number of Elastic Fabric Adapters (EFAs) per instance.</p> </li> <li> <p> <code>network-info.efa-supported</code> - Indicates whether the instance type supports Elastic Fabric Adapter (EFA) (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>network-info.ena-support</code> - Indicates whether Elastic Network Adapter (ENA) is supported or required (<code>required</code> | <code>supported</code> | <code>unsupported</code>).</p> </li> <li> <p> <code>network-info.encryption-in-transit-supported</code> - Indicates whether the instance type automatically encrypts in-transit traffic between instances (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>network-info.ipv4-addresses-per-interface</code> - The maximum number of private IPv4 addresses per network interface.</p> </li> <li> <p> <code>network-info.ipv6-addresses-per-interface</code> - The maximum number of private IPv6 addresses per network interface.</p> </li> <li> <p> <code>network-info.ipv6-supported</code> - Indicates whether the instance type supports IPv6 (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>network-info.maximum-network-interfaces</code> - The maximum number of network interfaces per instance.</p> </li> <li> <p> <code>network-info.network-performance</code> - The network performance (for example, "25 Gigabit").</p> </li> <li> <p> <code>processor-info.supported-architecture</code> - The CPU architecture (<code>arm64</code> | <code>i386</code> | <code>x86_64</code>).</p> </li> <li> <p> <code>processor-info.sustained-clock-speed-in-ghz</code> - The CPU clock speed, in GHz.</p> </li> <li> <p> <code>supported-boot-mode</code> - The boot mode (<code>legacy-bios</code> | <code>uefi</code>).</p> </li> <li> <p> <code>supported-root-device-type</code> - The root device type (<code>ebs</code> | <code>instance-store</code>).</p> </li> <li> <p> <code>supported-usage-class</code> - The usage class (<code>on-demand</code> | <code>spot</code>).</p> </li> <li> <p> <code>supported-virtualization-type</code> - The virtualization type (<code>hvm</code> | <code>paravirtual</code>).</p> </li> <li> <p> <code>vcpu-info.default-cores</code> - The default number of cores for the instance type.</p> </li> <li> <p> <code>vcpu-info.default-threads-per-core</code> - The default number of threads per core for the instance type.</p> </li> <li> <p> <code>vcpu-info.default-vcpus</code> - The default number of vCPUs for the instance type.</p> </li> <li> <p> <code>vcpu-info.valid-cores</code> - The number of cores that can be configured for the instance type.</p> </li> <li> <p> <code>vcpu-info.valid-threads-per-core</code> - The number of threads per core that can be configured for the instance type. For example, "1" or "1,2".</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DITMaxResults"
            - description: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the next token value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to retrieve the next page of results.
    InstanceTypeInfoList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceTypeInfo"
          - xml:
              name: item
    DescribeInstancesRequest:
      type: object
      title: DescribeInstancesRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: "<p>The filters.</p> <ul> <li> <p> <code>affinity</code> - The affinity setting for an instance running on a Dedicated Host (<code>default</code> | <code>host</code>).</p> </li> <li> <p> <code>architecture</code> - The instance architecture (<code>i386</code> | <code>x86_64</code> | <code>arm64</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the instance.</p> </li> <li> <p> <code>block-device-mapping.attach-time</code> - The attach time for an EBS volume mapped to the instance, for example, <code>2010-09-15T17:15:20.000Z</code>.</p> </li> <li> <p> <code>block-device-mapping.delete-on-termination</code> - A Boolean that indicates whether the EBS volume is deleted on instance termination.</p> </li> <li> <p> <code>block-device-mapping.device-name</code> - The device name specified in the block device mapping (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p> </li> <li> <p> <code>block-device-mapping.status</code> - The status for the EBS volume (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>block-device-mapping.volume-id</code> - The volume ID of the EBS volume.</p> </li> <li> <p> <code>client-token</code> - The idempotency token you provided when you launched the instance.</p> </li> <li> <p> <code>dns-name</code> - The public DNS name of the instance.</p> </li> <li> <p> <code>group-id</code> - The ID of the security group for the instance. EC2-Classic only.</p> </li> <li> <p> <code>group-name</code> - The name of the security group for the instance. EC2-Classic only.</p> </li> <li> <p> <code>hibernation-options.configured</code> - A Boolean that indicates whether the instance is enabled for hibernation. A value of <code>true</code> means that the instance is enabled for hibernation. </p> </li> <li> <p> <code>host-id</code> - The ID of the Dedicated Host on which the instance is running, if applicable.</p> </li> <li> <p> <code>hypervisor</code> - The hypervisor type of the instance (<code>ovm</code> | <code>xen</code>). The value <code>xen</code> is used for both Xen and Nitro hypervisors.</p> </li> <li> <p> <code>iam-instance-profile.arn</code> - The instance profile associated with the instance. Specified as an ARN.</p> </li> <li> <p> <code>image-id</code> - The ID of the image used to launch the instance.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance.</p> </li> <li> <p> <code>instance-lifecycle</code> - Indicates whether this is a Spot Instance or a Scheduled Instance (<code>spot</code> | <code>scheduled</code>).</p> </li> <li> <p> <code>instance-state-code</code> - The state of the instance, as a 16-bit unsigned integer. The high byte is used for internal purposes and should be ignored. The low byte is set based on the state represented. The valid values are: 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).</p> </li> <li> <p> <code>instance-state-name</code> - The state of the instance (<code>pending</code> | <code>running</code> | <code>shutting-down</code> | <code>terminated</code> | <code>stopping</code> | <code>stopped</code>).</p> </li> <li> <p> <code>instance-type</code> - The type of instance (for example, <code>t2.micro</code>).</p> </li> <li> <p> <code>instance.group-id</code> - The ID of the security group for the instance. </p> </li> <li> <p> <code>instance.group-name</code> - The name of the security group for the instance. </p> </li> <li> <p> <code>ip-address</code> - The public IPv4 address of the instance.</p> </li> <li> <p> <code>kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>key-name</code> - The name of the key pair used when the instance was launched.</p> </li> <li> <p> <code>launch-index</code> - When launching multiple instances, this is the index for the instance in the launch group (for example, 0, 1, 2, and so on). </p> </li> <li> <p> <code>launch-time</code> - The time when the instance was launched.</p> </li> <li> <p> <code>metadata-options.http-tokens</code> - The metadata request authorization state (<code>optional</code> | <code>required</code>)</p> </li> <li> <p> <code>metadata-options.http-put-response-hop-limit</code> - The http metadata request put response hop limit (integer, possible values <code>1</code> to <code>64</code>)</p> </li> <li> <p> <code>metadata-options.http-endpoint</code> - Enable or disable metadata access on http endpoint (<code>enabled</code> | <code>disabled</code>)</p> </li> <li> <p> <code>monitoring-state</code> - Indicates whether detailed monitoring is enabled (<code>disabled</code> | <code>enabled</code>).</p> </li> <li> <p> <code>network-interface.addresses.private-ip-address</code> - The private IPv4 address associated with the network interface.</p> </li> <li> <p> <code>network-interface.addresses.primary</code> - Specifies whether the IPv4 address of the network interface is the primary private IPv4 address.</p> </li> <li> <p> <code>network-interface.addresses.association.public-ip</code> - The ID of the association of an Elastic IP address (IPv4) with a network interface.</p> </li> <li> <p> <code>network-interface.addresses.association.ip-owner-id</code> - The owner ID of the private IPv4 address associated with the network interface.</p> </li> <li> <p> <code>network-interface.association.public-ip</code> - The address of the Elastic IP address (IPv4) bound to the network interface.</p> </li> <li> <p> <code>network-interface.association.ip-owner-id</code> - The owner of the Elastic IP address (IPv4) associated with the network interface.</p> </li> <li> <p> <code>network-interface.association.allocation-id</code> - The allocation ID returned when you allocated the Elastic IP address (IPv4) for your network interface.</p> </li> <li> <p> <code>network-interface.association.association-id</code> - The association ID returned when the network interface was associated with an IPv4 address.</p> </li> <li> <p> <code>network-interface.attachment.attachment-id</code> - The ID of the interface attachment.</p> </li> <li> <p> <code>network-interface.attachment.instance-id</code> - The ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.instance-owner-id</code> - The owner ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.device-index</code> - The device index to which the network interface is attached.</p> </li> <li> <p> <code>network-interface.attachment.status</code> - The status of the attachment (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>network-interface.attachment.attach-time</code> - The time that the network interface was attached to an instance.</p> </li> <li> <p> <code>network-interface.attachment.delete-on-termination</code> - Specifies whether the attachment is deleted when an instance is terminated.</p> </li> <li> <p> <code>network-interface.availability-zone</code> - The Availability Zone for the network interface.</p> </li> <li> <p> <code>network-interface.description</code> - The description of the network interface.</p> </li> <li> <p> <code>network-interface.group-id</code> - The ID of a security group associated with the network interface.</p> </li> <li> <p> <code>network-interface.group-name</code> - The name of a security group associated with the network interface.</p> </li> <li> <p> <code>network-interface.ipv6-addresses.ipv6-address</code> - The IPv6 address associated with the network interface.</p> </li> <li> <p> <code>network-interface.mac-address</code> - The MAC address of the network interface.</p> </li> <li> <p> <code>network-interface.network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>network-interface.owner-id</code> - The ID of the owner of the network interface.</p> </li> <li> <p> <code>network-interface.private-dns-name</code> - The private DNS name of the network interface.</p> </li> <li> <p> <code>network-interface.requester-id</code> - The requester ID for the network interface.</p> </li> <li> <p> <code>network-interface.requester-managed</code> - Indicates whether the network interface is being managed by Amazon Web Services.</p> </li> <li> <p> <code>network-interface.status</code> - The status of the network interface (<code>available</code>) | <code>in-use</code>).</p> </li> <li> <p> <code>network-interface.source-dest-check</code> - Whether the network interface performs source/destination checking. A value of <code>true</code> means that checking is enabled, and <code>false</code> means that checking is disabled. The value must be <code>false</code> for the network interface to perform network address translation (NAT) in your VPC.</p> </li> <li> <p> <code>network-interface.subnet-id</code> - The ID of the subnet for the network interface.</p> </li> <li> <p> <code>network-interface.vpc-id</code> - The ID of the VPC for the network interface.</p> </li> <li> <p> <code>outpost-arn</code> - The Amazon Resource Name (ARN) of the Outpost.</p> </li> <li> <p> <code>owner-id</code> - The Amazon Web Services account ID of the instance owner.</p> </li> <li> <p> <code>placement-group-name</code> - The name of the placement group for the instance.</p> </li> <li> <p> <code>placement-partition-number</code> - The partition in which the instance is located.</p> </li> <li> <p> <code>platform</code> - The platform. To list only Windows instances, use <code>windows</code>.</p> </li> <li> <p> <code>private-dns-name</code> - The private IPv4 DNS name of the instance.</p> </li> <li> <p> <code>private-ip-address</code> - The private IPv4 address of the instance.</p> </li> <li> <p> <code>product-code</code> - The product code associated with the AMI used to launch the instance.</p> </li> <li> <p> <code>product-code.type</code> - The type of product code (<code>devpay</code> | <code>marketplace</code>).</p> </li> <li> <p> <code>ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p> <code>reason</code> - The reason for the current state of the instance (for example, shows \"User Initiated [date]\" when you stop or terminate the instance). Similar to the state-reason-code filter.</p> </li> <li> <p> <code>requester-id</code> - The ID of the entity that launched the instance on your behalf (for example, Amazon Web Services Management Console, Auto Scaling, and so on).</p> </li> <li> <p> <code>reservation-id</code> - The ID of the instance's reservation. A reservation ID is created any time you launch an instance. A reservation ID has a one-to-one relationship with an instance launch request, but can be associated with more than one instance if you launch multiple instances using the same launch request. For example, if you launch one instance, you get one reservation ID. If you launch ten instances using the same launch request, you also get one reservation ID.</p> </li> <li> <p> <code>root-device-name</code> - The device name of the root device volume (for example, <code>/dev/sda1</code>).</p> </li> <li> <p> <code>root-device-type</code> - The type of the root device volume (<code>ebs</code> | <code>instance-store</code>).</p> </li> <li> <p> <code>source-dest-check</code> - Indicates whether the instance performs source/destination checking. A value of <code>true</code> means that checking is enabled, and <code>false</code> means that checking is disabled. The value must be <code>false</code> for the instance to perform network address translation (NAT) in your VPC. </p> </li> <li> <p> <code>spot-instance-request-id</code> - The ID of the Spot Instance request.</p> </li> <li> <p> <code>state-reason-code</code> - The reason code for the state change.</p> </li> <li> <p> <code>state-reason-message</code> - A message that describes the state change.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet for the instance.</p> </li> <li> <p> <code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources that have a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>tenancy</code> - The tenancy of an instance (<code>dedicated</code> | <code>default</code> | <code>host</code>).</p> </li> <li> <p> <code>virtualization-type</code> - The virtualization type of the instance (<code>paravirtual</code> | <code>hvm</code>).</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC that the instance is running in.</p> </li> </ul>"
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIdStringList"
            - xml:
                name: InstanceId
              description: "<p>The instance IDs.</p> <p>Default: Describes all your instances.</p>"
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: maxResults
              description: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 5 and 1000. You cannot specify this parameter and the instance IDs parameter in the same call.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to request the next page of results.
    ReservationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Reservation"
          - xml:
              name: item
    DescribeInternetGatewaysMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    InternetGatewayIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InternetGatewayId"
          - xml:
              name: item
    DescribeInternetGatewaysRequest:
      type: object
      title: DescribeInternetGatewaysRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>attachment.state</code> - The current state of the attachment between the gateway and the VPC (<code>available</code>). Present only if a VPC is attached.</p> </li> <li> <p> <code>attachment.vpc-id</code> - The ID of an attached VPC.</p> </li> <li> <p> <code>internet-gateway-id</code> - The ID of the Internet gateway.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the internet gateway.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InternetGatewayIds:
          allOf:
            - $ref: "#/components/schemas/InternetGatewayIdList"
            - xml:
                name: internetGatewayId
              description: "<p>One or more internet gateway IDs.</p> <p>Default: Describes all your internet gateways.</p>"
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeInternetGatewaysMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
    InternetGatewayList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InternetGateway"
          - xml:
              name: item
    Ipv6PoolIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Ipv6PoolEc2Id"
          - xml:
              name: item
    Ipv6PoolMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    DescribeIpv6PoolsRequest:
      type: object
      title: DescribeIpv6PoolsRequest
      properties:
        PoolIds:
          allOf:
            - $ref: "#/components/schemas/Ipv6PoolIdList"
            - xml:
                name: PoolId
              description: The IDs of the IPv6 address pools.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Ipv6PoolMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>
    Ipv6PoolSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Ipv6Pool"
          - xml:
              name: item
    KeyNameStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/KeyPairName"
          - xml:
              name: KeyName
    KeyPairIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/KeyPairId"
          - xml:
              name: KeyPairId
    DescribeKeyPairsRequest:
      type: object
      title: DescribeKeyPairsRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters.</p> <ul> <li> <p> <code>key-pair-id</code> - The ID of the key pair.</p> </li> <li> <p> <code>fingerprint</code> - The fingerprint of the key pair.</p> </li> <li> <p> <code>key-name</code> - The name of the key pair.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> </ul>
        KeyNames:
          allOf:
            - $ref: "#/components/schemas/KeyNameStringList"
            - xml:
                name: KeyName
              description: "<p>The key pair names.</p> <p>Default: Describes all of your key pairs.</p>"
        KeyPairIds:
          allOf:
            - $ref: "#/components/schemas/KeyPairIdStringList"
            - xml:
                name: KeyPairId
              description: The IDs of the key pairs.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    KeyPairList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/KeyPairInfo"
          - xml:
              name: item
    DescribeLaunchTemplateVersionsRequest:
      type: object
      title: DescribeLaunchTemplateVersionsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        LaunchTemplateId:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateId"
            - description: The ID of the launch template. To describe one or more versions of a specified launch template, you must specify either the launch template ID or the launch template name in the request. To describe all the latest or default launch template versions in your account, you must omit this parameter.
        LaunchTemplateName:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateName"
            - description: The name of the launch template. To describe one or more versions of a specified launch template, you must specify either the launch template ID or the launch template name in the request. To describe all the latest or default launch template versions in your account, you must omit this parameter.
        Versions:
          allOf:
            - $ref: "#/components/schemas/VersionStringList"
            - xml:
                name: LaunchTemplateVersion
              description: <p>One or more versions of the launch template. Valid values depend on whether you are describing a specified launch template (by ID or name) or all launch templates in your account.</p> <p>To describe one or more versions of a specified launch template, valid values are <code>$Latest</code>, <code>$Default</code>, and numbers.</p> <p>To describe all launch templates in your account that are defined as the latest version, the valid value is <code>$Latest</code>. To describe all launch templates in your account that are defined as the default version, the valid value is <code>$Default</code>. You can specify <code>$Latest</code> and <code>$Default</code> in the same call. You cannot specify numbers.</p>
        MinVersion:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The version number after which to describe launch template versions.
        MaxVersion:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The version number up to which to describe launch template versions.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to request the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 1 and 200.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>create-time</code> - The time the launch template version was created.</p> </li> <li> <p> <code>ebs-optimized</code> - A boolean that indicates whether the instance is optimized for Amazon EBS I/O.</p> </li> <li> <p> <code>iam-instance-profile</code> - The ARN of the IAM instance profile.</p> </li> <li> <p> <code>image-id</code> - The ID of the AMI.</p> </li> <li> <p> <code>instance-type</code> - The instance type.</p> </li> <li> <p> <code>is-default-version</code> - A boolean that indicates whether the launch template version is the default version.</p> </li> <li> <p> <code>kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>ram-disk-id</code> - The RAM disk ID.</p> </li> </ul>
    LaunchTemplateVersionSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LaunchTemplateVersion"
          - xml:
              name: item
    DescribeLaunchTemplatesMaxResults:
      type: integer
      minimum: 1
      maximum: 200
    LaunchTemplateIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LaunchTemplateId"
          - xml:
              name: item
    LaunchTemplateNameStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LaunchTemplateName"
          - xml:
              name: item
    DescribeLaunchTemplatesRequest:
      type: object
      title: DescribeLaunchTemplatesRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        LaunchTemplateIds:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateIdStringList"
            - xml:
                name: LaunchTemplateId
              description: One or more launch template IDs.
        LaunchTemplateNames:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateNameStringList"
            - xml:
                name: LaunchTemplateName
              description: One or more launch template names.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>create-time</code> - The time the launch template was created.</p> </li> <li> <p> <code>launch-template-name</code> - The name of the launch template.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to request the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeLaunchTemplatesMaxResults"
            - description: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 1 and 200.
    LaunchTemplateSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LaunchTemplate"
          - xml:
              name: item
    LocalGatewayRouteTableVirtualInterfaceGroupAssociationIdSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LocalGatewayRouteTableVirtualInterfaceGroupAssociationId"
          - xml:
              name: item
    LocalGatewayMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest:
      type: object
      title: DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest
      properties:
        LocalGatewayRouteTableVirtualInterfaceGroupAssociationIds:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRouteTableVirtualInterfaceGroupAssociationIdSet"
            - xml:
                name: LocalGatewayRouteTableVirtualInterfaceGroupAssociationId
              description: The IDs of the associations.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>local-gateway-id</code> - The ID of a local gateway.</p> </li> <li> <p> <code>local-gateway-route-table-id</code> - The ID of the local gateway route table.</p> </li> <li> <p> <code>local-gateway-route-table-virtual-interface-group-association-id</code> - The ID of the association.</p> </li> <li> <p> <code>local-gateway-route-table-virtual-interface-group-id</code> - The ID of the virtual interface group.</p> </li> <li> <p> <code>state</code> - The state of the association.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    LocalGatewayRouteTableVirtualInterfaceGroupAssociationSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LocalGatewayRouteTableVirtualInterfaceGroupAssociation"
          - xml:
              name: item
    LocalGatewayRouteTableVpcAssociationIdSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LocalGatewayRouteTableVpcAssociationId"
          - xml:
              name: item
    DescribeLocalGatewayRouteTableVpcAssociationsRequest:
      type: object
      title: DescribeLocalGatewayRouteTableVpcAssociationsRequest
      properties:
        LocalGatewayRouteTableVpcAssociationIds:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRouteTableVpcAssociationIdSet"
            - xml:
                name: LocalGatewayRouteTableVpcAssociationId
              description: The IDs of the associations.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>local-gateway-id</code> - The ID of a local gateway.</p> </li> <li> <p> <code>local-gateway-route-table-id</code> - The ID of the local gateway route table.</p> </li> <li> <p> <code>local-gateway-route-table-vpc-association-id</code> - The ID of the association.</p> </li> <li> <p> <code>state</code> - The state of the association.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    LocalGatewayRouteTableVpcAssociationSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LocalGatewayRouteTableVpcAssociation"
          - xml:
              name: item
    LocalGatewayRouteTableIdSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LocalGatewayRoutetableId"
          - xml:
              name: item
    DescribeLocalGatewayRouteTablesRequest:
      type: object
      title: DescribeLocalGatewayRouteTablesRequest
      properties:
        LocalGatewayRouteTableIds:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRouteTableIdSet"
            - xml:
                name: LocalGatewayRouteTableId
              description: The IDs of the local gateway route tables.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>local-gateway-id</code> - The ID of a local gateway.</p> </li> <li> <p> <code>local-gateway-route-table-id</code> - The ID of a local gateway route table.</p> </li> <li> <p> <code>outpost-arn</code> - The Amazon Resource Name (ARN) of the Outpost.</p> </li> <li> <p> <code>state</code> - The state of the local gateway route table.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    LocalGatewayRouteTableSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LocalGatewayRouteTable"
          - xml:
              name: item
    LocalGatewayVirtualInterfaceGroupIdSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LocalGatewayVirtualInterfaceGroupId"
          - xml:
              name: item
    DescribeLocalGatewayVirtualInterfaceGroupsRequest:
      type: object
      title: DescribeLocalGatewayVirtualInterfaceGroupsRequest
      properties:
        LocalGatewayVirtualInterfaceGroupIds:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayVirtualInterfaceGroupIdSet"
            - xml:
                name: LocalGatewayVirtualInterfaceGroupId
              description: The IDs of the virtual interface groups.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>local-gateway-id</code> - The ID of a local gateway.</p> </li> <li> <p> <code>local-gateway-virtual-interface-id</code> - The ID of the virtual interface.</p> </li> <li> <p> <code>local-gateway-virtual-interface-group-id</code> - The ID of the virtual interface group.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    LocalGatewayVirtualInterfaceGroupSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LocalGatewayVirtualInterfaceGroup"
          - xml:
              name: item
    LocalGatewayVirtualInterfaceIdSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LocalGatewayVirtualInterfaceId"
          - xml:
              name: item
    DescribeLocalGatewayVirtualInterfacesRequest:
      type: object
      title: DescribeLocalGatewayVirtualInterfacesRequest
      properties:
        LocalGatewayVirtualInterfaceIds:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayVirtualInterfaceIdSet"
            - xml:
                name: LocalGatewayVirtualInterfaceId
              description: The IDs of the virtual interfaces.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: One or more filters.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    LocalGatewayVirtualInterfaceSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LocalGatewayVirtualInterface"
          - xml:
              name: item
    LocalGatewayIdSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LocalGatewayId"
          - xml:
              name: item
    DescribeLocalGatewaysRequest:
      type: object
      title: DescribeLocalGatewaysRequest
      properties:
        LocalGatewayIds:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayIdSet"
            - xml:
                name: LocalGatewayId
              description: <p>One or more filters.</p> <ul> <li> <p> <code>local-gateway-id</code> - The ID of a local gateway.</p> </li> <li> <p> <code>local-gateway-route-table-id</code> - The ID of the local gateway route table.</p> </li> <li> <p> <code>local-gateway-route-table-virtual-interface-group-association-id</code> - The ID of the association.</p> </li> <li> <p> <code>local-gateway-route-table-virtual-interface-group-id</code> - The ID of the virtual interface group.</p> </li> <li> <p> <code>outpost-arn</code> - The Amazon Resource Name (ARN) of the Outpost.</p> </li> <li> <p> <code>state</code> - The state of the association.</p> </li> </ul>
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: One or more filters.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    LocalGatewaySet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LocalGateway"
          - xml:
              name: item
    PrefixListMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    DescribeManagedPrefixListsRequest:
      type: object
      title: DescribeManagedPrefixListsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>owner-id</code> - The ID of the prefix list owner.</p> </li> <li> <p> <code>prefix-list-id</code> - The ID of the prefix list.</p> </li> <li> <p> <code>prefix-list-name</code> - The name of the prefix list.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/PrefixListMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
        PrefixListIds:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: PrefixListId
              description: One or more prefix list IDs.
    ManagedPrefixListSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ManagedPrefixList"
          - xml:
              name: item
    DescribeMovingAddressesMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeMovingAddressesRequest:
      type: object
      title: DescribeMovingAddressesRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>moving-status</code> - The status of the Elastic IP address (<code>MovingToVpc</code> | <code>RestoringToClassic</code>).</p> </li> </ul>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeMovingAddressesMaxResults"
            - xml:
                name: maxResults
              description: "<p>The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000; if <code>MaxResults</code> is given a value outside of this range, an error is returned.</p> <p>Default: If no value is provided, the default is 1000.</p>"
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token for the next page of results.
        PublicIps:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: publicIp
              description: One or more Elastic IP addresses.
    MovingAddressStatusSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/MovingAddressStatus"
          - xml:
              name: item
    DescribeNatGatewaysMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    NatGatewayIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/NatGatewayId"
          - xml:
              name: item
    DescribeNatGatewaysRequest:
      type: object
      title: DescribeNatGatewaysRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Filter:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - description: <p>One or more filters.</p> <ul> <li> <p> <code>nat-gateway-id</code> - The ID of the NAT gateway.</p> </li> <li> <p> <code>state</code> - The state of the NAT gateway (<code>pending</code> | <code>failed</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet in which the NAT gateway resides.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC in which the NAT gateway resides.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeNatGatewaysMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NatGatewayIds:
          allOf:
            - $ref: "#/components/schemas/NatGatewayIdStringList"
            - xml:
                name: NatGatewayId
              description: One or more NAT gateway IDs.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
    NatGatewayList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/NatGateway"
          - xml:
              name: item
    DescribeNetworkAclsMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    NetworkAclIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/NetworkAclId"
          - xml:
              name: item
    DescribeNetworkAclsRequest:
      type: object
      title: DescribeNetworkAclsRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>association.association-id</code> - The ID of an association ID for the ACL.</p> </li> <li> <p> <code>association.network-acl-id</code> - The ID of the network ACL involved in the association.</p> </li> <li> <p> <code>association.subnet-id</code> - The ID of the subnet involved in the association.</p> </li> <li> <p> <code>default</code> - Indicates whether the ACL is the default network ACL for the VPC.</p> </li> <li> <p> <code>entry.cidr</code> - The IPv4 CIDR range specified in the entry.</p> </li> <li> <p> <code>entry.icmp.code</code> - The ICMP code specified in the entry, if any.</p> </li> <li> <p> <code>entry.icmp.type</code> - The ICMP type specified in the entry, if any.</p> </li> <li> <p> <code>entry.ipv6-cidr</code> - The IPv6 CIDR range specified in the entry.</p> </li> <li> <p> <code>entry.port-range.from</code> - The start of the port range specified in the entry. </p> </li> <li> <p> <code>entry.port-range.to</code> - The end of the port range specified in the entry. </p> </li> <li> <p> <code>entry.protocol</code> - The protocol specified in the entry (<code>tcp</code> | <code>udp</code> | <code>icmp</code> or a protocol number).</p> </li> <li> <p> <code>entry.rule-action</code> - Allows or denies the matching traffic (<code>allow</code> | <code>deny</code>).</p> </li> <li> <p> <code>entry.rule-number</code> - The number of an entry (in other words, rule) in the set of ACL entries.</p> </li> <li> <p> <code>network-acl-id</code> - The ID of the network ACL.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the network ACL.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the network ACL.</p> </li> </ul>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        NetworkAclIds:
          allOf:
            - $ref: "#/components/schemas/NetworkAclIdStringList"
            - xml:
                name: NetworkAclId
              description: "<p>One or more network ACL IDs.</p> <p>Default: Describes all your network ACLs.</p>"
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeNetworkAclsMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
    NetworkAclList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/NetworkAcl"
          - xml:
              name: item
    NetworkInsightsAnalysisIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/NetworkInsightsAnalysisId"
          - xml:
              name: item
    NetworkInsightsMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    DescribeNetworkInsightsAnalysesRequest:
      type: object
      title: DescribeNetworkInsightsAnalysesRequest
      properties:
        NetworkInsightsAnalysisIds:
          allOf:
            - $ref: "#/components/schemas/NetworkInsightsAnalysisIdList"
            - xml:
                name: NetworkInsightsAnalysisId
              description: The ID of the network insights analyses. You must specify either analysis IDs or a path ID.
        NetworkInsightsPathId:
          allOf:
            - $ref: "#/components/schemas/NetworkInsightsPathId"
            - description: The ID of the path. You must specify either a path ID or analysis IDs.
        AnalysisStartTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - description: The time when the network insights analyses started.
        AnalysisEndTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - description: The time when the network insights analyses ended.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters. The following are possible values:</p> <ul> <li> <p>PathFound - A Boolean value that indicates whether a feasible path is found.</p> </li> <li> <p>Status - The status of the analysis (running | succeeded | failed).</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/NetworkInsightsMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    NetworkInsightsAnalysisList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/NetworkInsightsAnalysis"
          - xml:
              name: item
    NetworkInsightsPathIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/NetworkInsightsPathId"
          - xml:
              name: item
    DescribeNetworkInsightsPathsRequest:
      type: object
      title: DescribeNetworkInsightsPathsRequest
      properties:
        NetworkInsightsPathIds:
          allOf:
            - $ref: "#/components/schemas/NetworkInsightsPathIdList"
            - xml:
                name: NetworkInsightsPathId
              description: The IDs of the paths.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters. The following are possible values:</p> <ul> <li> <p>Destination - The ID of the resource.</p> </li> <li> <p>DestinationPort - The destination port.</p> </li> <li> <p>Name - The path name.</p> </li> <li> <p>Protocol - The protocol.</p> </li> <li> <p>Source - The ID of the resource.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/NetworkInsightsMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    NetworkInsightsPathList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/NetworkInsightsPath"
          - xml:
              name: item
    NetworkInterfaceAttribute:
      type: string
      enum:
        - description
        - groupSet
        - sourceDestCheck
        - attachment
    DescribeNetworkInterfaceAttributeRequest:
      type: object
      required:
        - NetworkInterfaceId
      title: DescribeNetworkInterfaceAttributeRequest
      properties:
        Attribute:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceAttribute"
            - xml:
                name: attribute
              description: The attribute of the network interface. This parameter is required.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceId"
            - xml:
                name: networkInterfaceId
              description: The ID of the network interface.
      description: Contains the parameters for DescribeNetworkInterfaceAttribute.
    NetworkInterfaceAttachment:
      type: object
      properties:
        AttachTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: attachTime
              description: The timestamp indicating when the attachment initiated.
        AttachmentId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: attachmentId
              description: The ID of the network interface attachment.
        DeleteOnTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: deleteOnTermination
              description: Indicates whether the network interface is deleted when the instance is terminated.
        DeviceIndex:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: deviceIndex
              description: The device index of the network interface attachment on the instance.
        NetworkCardIndex:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: networkCardIndex
              description: The index of the network card.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance.
        InstanceOwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceOwnerId
              description: The Amazon Web Services account ID of the owner of the instance.
        Status:
          allOf:
            - $ref: "#/components/schemas/AttachmentStatus"
            - xml:
                name: status
              description: The attachment state.
      description: Describes a network interface attachment.
    DescribeNetworkInterfacePermissionsMaxResults:
      type: integer
      minimum: 5
      maximum: 255
    NetworkInterfacePermissionIdList:
      type: array
      items:
        $ref: "#/components/schemas/NetworkInterfacePermissionId"
    DescribeNetworkInterfacePermissionsRequest:
      type: object
      title: DescribeNetworkInterfacePermissionsRequest
      properties:
        NetworkInterfacePermissionIds:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfacePermissionIdList"
            - xml:
                name: NetworkInterfacePermissionId
              description: One or more network interface permission IDs.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>network-interface-permission.network-interface-permission-id</code> - The ID of the permission.</p> </li> <li> <p> <code>network-interface-permission.network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>network-interface-permission.aws-account-id</code> - The Amazon Web Services account ID.</p> </li> <li> <p> <code>network-interface-permission.aws-service</code> - The Amazon Web Service.</p> </li> <li> <p> <code>network-interface-permission.permission</code> - The type of permission (<code>INSTANCE-ATTACH</code> | <code>EIP-ASSOCIATE</code>).</p> </li> </ul>
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to request the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeNetworkInterfacePermissionsMaxResults"
            - description: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. If this parameter is not specified, up to 50 results are returned by default.
      description: Contains the parameters for DescribeNetworkInterfacePermissions.
    NetworkInterfacePermissionList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/NetworkInterfacePermission"
          - xml:
              name: item
    DescribeNetworkInterfacesMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    NetworkInterfaceIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/NetworkInterfaceId"
          - xml:
              name: item
    DescribeNetworkInterfacesRequest:
      type: object
      title: DescribeNetworkInterfacesRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>addresses.private-ip-address</code> - The private IPv4 addresses associated with the network interface.</p> </li> <li> <p> <code>addresses.primary</code> - Whether the private IPv4 address is the primary IP address associated with the network interface. </p> </li> <li> <p> <code>addresses.association.public-ip</code> - The association ID returned when the network interface was associated with the Elastic IP address (IPv4).</p> </li> <li> <p> <code>addresses.association.owner-id</code> - The owner ID of the addresses associated with the network interface.</p> </li> <li> <p> <code>association.association-id</code> - The association ID returned when the network interface was associated with an IPv4 address.</p> </li> <li> <p> <code>association.allocation-id</code> - The allocation ID returned when you allocated the Elastic IP address (IPv4) for your network interface.</p> </li> <li> <p> <code>association.ip-owner-id</code> - The owner of the Elastic IP address (IPv4) associated with the network interface.</p> </li> <li> <p> <code>association.public-ip</code> - The address of the Elastic IP address (IPv4) bound to the network interface.</p> </li> <li> <p> <code>association.public-dns-name</code> - The public DNS name for the network interface (IPv4).</p> </li> <li> <p> <code>attachment.attachment-id</code> - The ID of the interface attachment.</p> </li> <li> <p> <code>attachment.attach-time</code> - The time that the network interface was attached to an instance.</p> </li> <li> <p> <code>attachment.delete-on-termination</code> - Indicates whether the attachment is deleted when an instance is terminated.</p> </li> <li> <p> <code>attachment.device-index</code> - The device index to which the network interface is attached.</p> </li> <li> <p> <code>attachment.instance-id</code> - The ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>attachment.instance-owner-id</code> - The owner ID of the instance to which the network interface is attached.</p> </li> <li> <p> <code>attachment.status</code> - The status of the attachment (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the network interface.</p> </li> <li> <p> <code>description</code> - The description of the network interface.</p> </li> <li> <p> <code>group-id</code> - The ID of a security group associated with the network interface.</p> </li> <li> <p> <code>group-name</code> - The name of a security group associated with the network interface.</p> </li> <li> <p> <code>ipv6-addresses.ipv6-address</code> - An IPv6 address associated with the network interface.</p> </li> <li> <p> <code>mac-address</code> - The MAC address of the network interface.</p> </li> <li> <p> <code>network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>owner-id</code> - The Amazon Web Services account ID of the network interface owner.</p> </li> <li> <p> <code>private-ip-address</code> - The private IPv4 address or addresses of the network interface.</p> </li> <li> <p> <code>private-dns-name</code> - The private DNS name of the network interface (IPv4).</p> </li> <li> <p> <code>requester-id</code> - The alias or Amazon Web Services account ID of the principal or service that created the network interface.</p> </li> <li> <p> <code>requester-managed</code> - Indicates whether the network interface is being managed by an Amazon Web Service (for example, Amazon Web Services Management Console, Auto Scaling, and so on).</p> </li> <li> <p> <code>source-dest-check</code> - Indicates whether the network interface performs source/destination checking. A value of <code>true</code> means checking is enabled, and <code>false</code> means checking is disabled. The value must be <code>false</code> for the network interface to perform network address translation (NAT) in your VPC. </p> </li> <li> <p> <code>status</code> - The status of the network interface. If the network interface is not attached to an instance, the status is <code>available</code>; if a network interface is attached to an instance the status is <code>in-use</code>.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet for the network interface.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the network interface.</p> </li> </ul>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        NetworkInterfaceIds:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceIdList"
            - xml:
                name: NetworkInterfaceId
              description: "<p>One or more network interface IDs.</p> <p>Default: Describes all your network interfaces.</p>"
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to retrieve the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeNetworkInterfacesMaxResults"
            - description: The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results. You cannot specify this parameter and the network interface IDs parameter in the same request.
      description: Contains the parameters for DescribeNetworkInterfaces.
    NetworkInterfaceList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/NetworkInterface"
          - xml:
              name: item
    PlacementGroupStringList:
      type: array
      items:
        $ref: "#/components/schemas/PlacementGroupName"
    PlacementGroupIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PlacementGroupId"
          - xml:
              name: GroupId
    DescribePlacementGroupsRequest:
      type: object
      title: DescribePlacementGroupsRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters.</p> <ul> <li> <p> <code>group-name</code> - The name of the placement group.</p> </li> <li> <p> <code>state</code> - The state of the placement group (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>strategy</code> - The strategy of the placement group (<code>cluster</code> | <code>spread</code> | <code>partition</code>).</p> </li> <li> <p> <code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources that have a tag with a specific key, regardless of the tag value.</p> </li> </ul>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        GroupNames:
          allOf:
            - $ref: "#/components/schemas/PlacementGroupStringList"
            - xml:
                name: groupName
              description: "<p>The names of the placement groups.</p> <p>Default: Describes all your placement groups, or only those otherwise specified.</p>"
        GroupIds:
          allOf:
            - $ref: "#/components/schemas/PlacementGroupIdStringList"
            - xml:
                name: GroupId
              description: The IDs of the placement groups.
    PlacementGroupList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PlacementGroup"
          - xml:
              name: item
    PrefixListResourceIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PrefixListResourceId"
          - xml:
              name: item
    DescribePrefixListsRequest:
      type: object
      title: DescribePrefixListsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: "<p>One or more filters.</p> <ul> <li> <p> <code>prefix-list-id</code>: The ID of a prefix list.</p> </li> <li> <p> <code>prefix-list-name</code>: The name of a prefix list.</p> </li> </ul>"
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        PrefixListIds:
          allOf:
            - $ref: "#/components/schemas/PrefixListResourceIdStringList"
            - xml:
                name: PrefixListId
              description: One or more prefix list IDs.
    PrefixListSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PrefixList"
          - xml:
              name: item
    DescribePrincipalIdFormatMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    ResourceList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: item
    DescribePrincipalIdFormatRequest:
      type: object
      title: DescribePrincipalIdFormatRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Resources:
          allOf:
            - $ref: "#/components/schemas/ResourceList"
            - xml:
                name: Resource
              description: "The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>instance</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>reservation</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>snapshot</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code> "
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribePrincipalIdFormatMaxResults"
            - description: "The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned NextToken value. "
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to request the next page of results.
    PrincipalIdFormatList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PrincipalIdFormat"
          - xml:
              name: item
    PublicIpv4PoolIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Ipv4PoolEc2Id"
          - xml:
              name: item
    PoolMaxResults:
      type: integer
      minimum: 1
      maximum: 10
    DescribePublicIpv4PoolsRequest:
      type: object
      title: DescribePublicIpv4PoolsRequest
      properties:
        PoolIds:
          allOf:
            - $ref: "#/components/schemas/PublicIpv4PoolIdStringList"
            - xml:
                name: PoolId
              description: The IDs of the address pools.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/PoolMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>
    PublicIpv4PoolSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PublicIpv4Pool"
          - xml:
              name: item
    RegionNameStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: RegionName
    DescribeRegionsRequest:
      type: object
      title: DescribeRegionsRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters.</p> <ul> <li> <p> <code>endpoint</code> - The endpoint of the Region (for example, <code>ec2.us-east-1.amazonaws.com</code>).</p> </li> <li> <p> <code>opt-in-status</code> - The opt-in status of the Region (<code>opt-in-not-required</code> | <code>opted-in</code> | <code>not-opted-in</code>).</p> </li> <li> <p> <code>region-name</code> - The name of the Region (for example, <code>us-east-1</code>).</p> </li> </ul>
        RegionNames:
          allOf:
            - $ref: "#/components/schemas/RegionNameStringList"
            - xml:
                name: RegionName
              description: The names of the Regions. You can specify any Regions, whether they are enabled and disabled for your account.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        AllRegions:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether to display all Regions, including Regions that are disabled for your account.
    RegionList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Region"
          - xml:
              name: item
    DescribeReplaceRootVolumeTasksMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ReplaceRootVolumeTaskIds:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ReplaceRootVolumeTaskId"
          - xml:
              name: ReplaceRootVolumeTaskId
    DescribeReplaceRootVolumeTasksRequest:
      type: object
      title: DescribeReplaceRootVolumeTasksRequest
      properties:
        ReplaceRootVolumeTaskIds:
          allOf:
            - $ref: "#/components/schemas/ReplaceRootVolumeTaskIds"
            - xml:
                name: ReplaceRootVolumeTaskId
              description: The ID of the root volume replacement task to view.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>Filter to use:</p> <ul> <li> <p> <code>instance-id</code> - The ID of the instance for which the root volume replacement task was created.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeReplaceRootVolumeTasksMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ReplaceRootVolumeTasks:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ReplaceRootVolumeTask"
          - xml:
              name: item
    DescribeReservedInstancesListingsRequest:
      type: object
      title: DescribeReservedInstancesListingsRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>reserved-instances-id</code> - The ID of the Reserved Instances.</p> </li> <li> <p> <code>reserved-instances-listing-id</code> - The ID of the Reserved Instances listing.</p> </li> <li> <p> <code>status</code> - The status of the Reserved Instance listing (<code>pending</code> | <code>active</code> | <code>cancelled</code> | <code>closed</code>).</p> </li> <li> <p> <code>status-message</code> - The reason for the status.</p> </li> </ul>
        ReservedInstancesId:
          allOf:
            - $ref: "#/components/schemas/ReservationId"
            - xml:
                name: reservedInstancesId
              description: One or more Reserved Instance IDs.
        ReservedInstancesListingId:
          allOf:
            - $ref: "#/components/schemas/ReservedInstancesListingId"
            - xml:
                name: reservedInstancesListingId
              description: One or more Reserved Instance listing IDs.
      description: Contains the parameters for DescribeReservedInstancesListings.
    ReservedInstancesModificationIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ReservedInstancesModificationId"
          - xml:
              name: ReservedInstancesModificationId
    DescribeReservedInstancesModificationsRequest:
      type: object
      title: DescribeReservedInstancesModificationsRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>client-token</code> - The idempotency token for the modification request.</p> </li> <li> <p> <code>create-date</code> - The time when the modification request was created.</p> </li> <li> <p> <code>effective-date</code> - The time when the modification becomes effective.</p> </li> <li> <p> <code>modification-result.reserved-instances-id</code> - The ID for the Reserved Instances created as part of the modification request. This ID is only available when the status of the modification is <code>fulfilled</code>.</p> </li> <li> <p> <code>modification-result.target-configuration.availability-zone</code> - The Availability Zone for the new Reserved Instances.</p> </li> <li> <p> <code>modification-result.target-configuration.instance-count </code> - The number of new Reserved Instances.</p> </li> <li> <p> <code>modification-result.target-configuration.instance-type</code> - The instance type of the new Reserved Instances.</p> </li> <li> <p> <code>modification-result.target-configuration.platform</code> - The network platform of the new Reserved Instances (<code>EC2-Classic</code> | <code>EC2-VPC</code>).</p> </li> <li> <p> <code>reserved-instances-id</code> - The ID of the Reserved Instances modified.</p> </li> <li> <p> <code>reserved-instances-modification-id</code> - The ID of the modification request.</p> </li> <li> <p> <code>status</code> - The status of the Reserved Instances modification request (<code>processing</code> | <code>fulfilled</code> | <code>failed</code>).</p> </li> <li> <p> <code>status-message</code> - The reason for the status.</p> </li> <li> <p> <code>update-date</code> - The time when the modification request was last updated.</p> </li> </ul>
        ReservedInstancesModificationIds:
          allOf:
            - $ref: "#/components/schemas/ReservedInstancesModificationIdStringList"
            - xml:
                name: ReservedInstancesModificationId
              description: IDs for the submitted modification request.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to retrieve the next page of results.
      description: Contains the parameters for DescribeReservedInstancesModifications.
    ReservedInstancesModificationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ReservedInstancesModification"
          - xml:
              name: item
    OfferingClassType:
      type: string
      enum:
        - standard
        - convertible
    RIProductDescription:
      type: string
      enum:
        - Linux/UNIX
        - Linux/UNIX (Amazon VPC)
        - Windows
        - Windows (Amazon VPC)
    ReservedInstancesOfferingIdStringList:
      type: array
      items:
        $ref: "#/components/schemas/ReservedInstancesOfferingId"
    OfferingTypeValues:
      type: string
      enum:
        - Heavy Utilization
        - Medium Utilization
        - Light Utilization
        - No Upfront
        - Partial Upfront
        - All Upfront
    DescribeReservedInstancesOfferingsRequest:
      type: object
      title: DescribeReservedInstancesOfferingsRequest
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Availability Zone in which the Reserved Instance can be used.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone where the Reserved Instance can be used.</p> </li> <li> <p> <code>duration</code> - The duration of the Reserved Instance (for example, one year or three years), in seconds (<code>31536000</code> | <code>94608000</code>).</p> </li> <li> <p> <code>fixed-price</code> - The purchase price of the Reserved Instance (for example, 9800.0).</p> </li> <li> <p> <code>instance-type</code> - The instance type that is covered by the reservation.</p> </li> <li> <p> <code>marketplace</code> - Set to <code>true</code> to show only Reserved Instance Marketplace offerings. When this filter is not used, which is the default behavior, all offerings from both Amazon Web Services and the Reserved Instance Marketplace are listed.</p> </li> <li> <p> <code>product-description</code> - The Reserved Instance product platform description. Instances that include <code>(Amazon VPC)</code> in the product platform description will only be displayed to EC2-Classic account holders and are for use with Amazon VPC. (<code>Linux/UNIX</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE Linux</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Red Hat Enterprise Linux</code> | <code>Red Hat Enterprise Linux (Amazon VPC)</code> | <code>Red Hat Enterprise Linux with HA (Amazon VPC)</code> | <code>Windows</code> | <code>Windows (Amazon VPC)</code> | <code>Windows with SQL Server Standard</code> | <code>Windows with SQL Server Standard (Amazon VPC)</code> | <code>Windows with SQL Server Web</code> | <code> Windows with SQL Server Web (Amazon VPC)</code> | <code>Windows with SQL Server Enterprise</code> | <code>Windows with SQL Server Enterprise (Amazon VPC)</code>) </p> </li> <li> <p> <code>reserved-instances-offering-id</code> - The Reserved Instances offering ID.</p> </li> <li> <p> <code>scope</code> - The scope of the Reserved Instance (<code>Availability Zone</code> or <code>Region</code>).</p> </li> <li> <p> <code>usage-price</code> - The usage price of the Reserved Instance, per hour (for example, 0.84).</p> </li> </ul>
        IncludeMarketplace:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Include Reserved Instance Marketplace offerings in the response.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/InstanceType"
            - description: The instance type that the reservation will cover (for example, <code>m1.small</code>). For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide</i>.
        MaxDuration:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: "<p>The maximum duration (in seconds) to filter when searching for offerings.</p> <p>Default: 94608000 (3 years)</p>"
        MaxInstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The maximum number of instances to filter when searching for offerings.</p> <p>Default: 20</p>"
        MinDuration:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: "<p>The minimum duration (in seconds) to filter when searching for offerings.</p> <p>Default: 2592000 (1 month)</p>"
        OfferingClass:
          allOf:
            - $ref: "#/components/schemas/OfferingClassType"
            - description: The offering class of the Reserved Instance. Can be <code>standard</code> or <code>convertible</code>.
        ProductDescription:
          allOf:
            - $ref: "#/components/schemas/RIProductDescription"
            - description: The Reserved Instance product platform description. Instances that include <code>(Amazon VPC)</code> in the description are for use with Amazon VPC.
        ReservedInstancesOfferingIds:
          allOf:
            - $ref: "#/components/schemas/ReservedInstancesOfferingIdStringList"
            - xml:
                name: ReservedInstancesOfferingId
              description: One or more Reserved Instances offering IDs.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceTenancy:
          allOf:
            - $ref: "#/components/schemas/Tenancy"
            - xml:
                name: instanceTenancy
              description: "<p>The tenancy of the instances covered by the reservation. A Reserved Instance with a tenancy of <code>dedicated</code> is applied to instances that run in a VPC on single-tenant hardware (i.e., Dedicated Instances).</p> <p> <b>Important:</b> The <code>host</code> value cannot be used with this parameter. Use the <code>default</code> or <code>dedicated</code> values only.</p> <p>Default: <code>default</code> </p>"
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: maxResults
              description: "<p>The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. The maximum is 100.</p> <p>Default: 100</p>"
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to retrieve the next page of results.
        OfferingType:
          allOf:
            - $ref: "#/components/schemas/OfferingTypeValues"
            - xml:
                name: offeringType
              description: "The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the <code>Medium Utilization</code> Reserved Instance offering type. "
      description: Contains the parameters for DescribeReservedInstancesOfferings.
    ReservedInstancesOfferingList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ReservedInstancesOffering"
          - xml:
              name: item
    ReservedInstancesIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ReservationId"
          - xml:
              name: ReservedInstancesId
    DescribeReservedInstancesRequest:
      type: object
      title: DescribeReservedInstancesRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone where the Reserved Instance can be used.</p> </li> <li> <p> <code>duration</code> - The duration of the Reserved Instance (one year or three years), in seconds (<code>31536000</code> | <code>94608000</code>).</p> </li> <li> <p> <code>end</code> - The time when the Reserved Instance expires (for example, 2015-08-07T11:54:42.000Z).</p> </li> <li> <p> <code>fixed-price</code> - The purchase price of the Reserved Instance (for example, 9800.0).</p> </li> <li> <p> <code>instance-type</code> - The instance type that is covered by the reservation.</p> </li> <li> <p> <code>scope</code> - The scope of the Reserved Instance (<code>Region</code> or <code>Availability Zone</code>).</p> </li> <li> <p> <code>product-description</code> - The Reserved Instance product platform description. Instances that include <code>(Amazon VPC)</code> in the product platform description will only be displayed to EC2-Classic account holders and are for use with Amazon VPC (<code>Linux/UNIX</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>SUSE Linux</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Red Hat Enterprise Linux</code> | <code>Red Hat Enterprise Linux (Amazon VPC)</code> | <code>Red Hat Enterprise Linux with HA (Amazon VPC)</code> | <code>Windows</code> | <code>Windows (Amazon VPC)</code> | <code>Windows with SQL Server Standard</code> | <code>Windows with SQL Server Standard (Amazon VPC)</code> | <code>Windows with SQL Server Web</code> | <code>Windows with SQL Server Web (Amazon VPC)</code> | <code>Windows with SQL Server Enterprise</code> | <code>Windows with SQL Server Enterprise (Amazon VPC)</code>).</p> </li> <li> <p> <code>reserved-instances-id</code> - The ID of the Reserved Instance.</p> </li> <li> <p> <code>start</code> - The time at which the Reserved Instance purchase request was placed (for example, 2014-08-07T11:54:42.000Z).</p> </li> <li> <p> <code>state</code> - The state of the Reserved Instance (<code>payment-pending</code> | <code>active</code> | <code>payment-failed</code> | <code>retired</code>).</p> </li> <li> <p> <code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>usage-price</code> - The usage price of the Reserved Instance, per hour (for example, 0.84).</p> </li> </ul>
        OfferingClass:
          allOf:
            - $ref: "#/components/schemas/OfferingClassType"
            - description: Describes whether the Reserved Instance is Standard or Convertible.
        ReservedInstancesIds:
          allOf:
            - $ref: "#/components/schemas/ReservedInstancesIdStringList"
            - xml:
                name: ReservedInstancesId
              description: "<p>One or more Reserved Instance IDs.</p> <p>Default: Describes all your Reserved Instances, or only those otherwise specified.</p>"
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        OfferingType:
          allOf:
            - $ref: "#/components/schemas/OfferingTypeValues"
            - xml:
                name: offeringType
              description: The Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the <code>Medium Utilization</code> Reserved Instance offering type.
      description: Contains the parameters for DescribeReservedInstances.
    ReservedInstancesList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ReservedInstances"
          - xml:
              name: item
    DescribeRouteTablesMaxResults:
      type: integer
      minimum: 5
      maximum: 100
    RouteTableIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/RouteTableId"
          - xml:
              name: item
    DescribeRouteTablesRequest:
      type: object
      title: DescribeRouteTablesRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>association.route-table-association-id</code> - The ID of an association ID for the route table.</p> </li> <li> <p> <code>association.route-table-id</code> - The ID of the route table involved in the association.</p> </li> <li> <p> <code>association.subnet-id</code> - The ID of the subnet involved in the association.</p> </li> <li> <p> <code>association.main</code> - Indicates whether the route table is the main route table for the VPC (<code>true</code> | <code>false</code>). Route tables that do not have an association ID are not returned in the response.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the route table.</p> </li> <li> <p> <code>route-table-id</code> - The ID of the route table.</p> </li> <li> <p> <code>route.destination-cidr-block</code> - The IPv4 CIDR range specified in a route in the table.</p> </li> <li> <p> <code>route.destination-ipv6-cidr-block</code> - The IPv6 CIDR range specified in a route in the route table.</p> </li> <li> <p> <code>route.destination-prefix-list-id</code> - The ID (prefix) of the Amazon Web Service specified in a route in the table.</p> </li> <li> <p> <code>route.egress-only-internet-gateway-id</code> - The ID of an egress-only Internet gateway specified in a route in the route table.</p> </li> <li> <p> <code>route.gateway-id</code> - The ID of a gateway specified in a route in the table.</p> </li> <li> <p> <code>route.instance-id</code> - The ID of an instance specified in a route in the table.</p> </li> <li> <p> <code>route.nat-gateway-id</code> - The ID of a NAT gateway.</p> </li> <li> <p> <code>route.transit-gateway-id</code> - The ID of a transit gateway.</p> </li> <li> <p> <code>route.origin</code> - Describes how the route was created. <code>CreateRouteTable</code> indicates that the route was automatically created when the route table was created; <code>CreateRoute</code> indicates that the route was manually added to the route table; <code>EnableVgwRoutePropagation</code> indicates that the route was propagated by route propagation.</p> </li> <li> <p> <code>route.state</code> - The state of a route in the route table (<code>active</code> | <code>blackhole</code>). The blackhole state indicates that the route's target isn't available (for example, the specified gateway isn't attached to the VPC, the specified NAT instance has been terminated, and so on).</p> </li> <li> <p> <code>route.vpc-peering-connection-id</code> - The ID of a VPC peering connection specified in a route in the table.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the route table.</p> </li> </ul>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        RouteTableIds:
          allOf:
            - $ref: "#/components/schemas/RouteTableIdStringList"
            - xml:
                name: RouteTableId
              description: "<p>One or more route table IDs.</p> <p>Default: Describes all your route tables.</p>"
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeRouteTablesMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
    RouteTableList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/RouteTable"
          - xml:
              name: item
    DescribeScheduledInstanceAvailabilityMaxResults:
      type: integer
      minimum: 5
      maximum: 300
    SlotDateTimeRangeRequest:
      type: object
      required:
        - EarliestTime
        - LatestTime
      properties:
        EarliestTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The earliest date and time, in UTC, for the Scheduled Instance to start.
        LatestTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The latest date and time, in UTC, for the Scheduled Instance to start. This value must be later than or equal to the earliest date and at most three months in the future.
      description: Describes the time period for a Scheduled Instance to start its first schedule. The time period must span less than one day.
    ScheduledInstanceRecurrenceRequest:
      type: object
      properties:
        Frequency:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The frequency (<code>Daily</code>, <code>Weekly</code>, or <code>Monthly</code>).
        Interval:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The interval quantity. The interval unit depends on the value of <code>Frequency</code>. For example, every 2 weeks or every 2 months.
        OccurrenceDays:
          allOf:
            - $ref: "#/components/schemas/OccurrenceDayRequestSet"
            - xml:
                name: OccurrenceDay
              description: The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday). You can't specify this value with a daily schedule. If the occurrence is relative to the end of the month, you can specify only a single day.
        OccurrenceRelativeToEnd:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the occurrence is relative to the end of the specified week or month. You can't specify this value with a daily schedule.
        OccurrenceUnit:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The unit for <code>OccurrenceDays</code> (<code>DayOfWeek</code> or <code>DayOfMonth</code>). This value is required for a monthly schedule. You can't specify <code>DayOfWeek</code> with a weekly schedule. You can't specify this value with a daily schedule.
      description: Describes the recurring schedule for a Scheduled Instance.
    DescribeScheduledInstanceAvailabilityRequest:
      type: object
      required:
        - FirstSlotStartTimeRange
        - Recurrence
      title: DescribeScheduledInstanceAvailabilityRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone (for example, <code>us-west-2a</code>).</p> </li> <li> <p> <code>instance-type</code> - The instance type (for example, <code>c4.large</code>).</p> </li> <li> <p> <code>network-platform</code> - The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p> </li> <li> <p> <code>platform</code> - The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p> </li> </ul>
        FirstSlotStartTimeRange:
          allOf:
            - $ref: "#/components/schemas/SlotDateTimeRangeRequest"
            - description: The time period for the first schedule to start.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeScheduledInstanceAvailabilityMaxResults"
            - description: The maximum number of results to return in a single call. This value can be between 5 and 300. The default value is 300. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
        MaxSlotDurationInHours:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum available duration, in hours. This value must be greater than <code>MinSlotDurationInHours</code> and less than 1,720.
        MinSlotDurationInHours:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The minimum available duration, in hours. The minimum required duration is 1,200 hours per year. For example, the minimum daily schedule is 4 hours, the minimum weekly schedule is 24 hours, and the minimum monthly schedule is 100 hours.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results.
        Recurrence:
          allOf:
            - $ref: "#/components/schemas/ScheduledInstanceRecurrenceRequest"
            - description: The schedule recurrence.
      description: Contains the parameters for DescribeScheduledInstanceAvailability.
    ScheduledInstanceAvailabilitySet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ScheduledInstanceAvailability"
          - xml:
              name: item
    ScheduledInstanceIdRequestSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ScheduledInstanceId"
          - xml:
              name: ScheduledInstanceId
    SlotStartTimeRangeRequest:
      type: object
      properties:
        EarliestTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The earliest date and time, in UTC, for the Scheduled Instance to start.
        LatestTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The latest date and time, in UTC, for the Scheduled Instance to start.
      description: Describes the time period for a Scheduled Instance to start its first schedule.
    DescribeScheduledInstancesRequest:
      type: object
      title: DescribeScheduledInstancesRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone (for example, <code>us-west-2a</code>).</p> </li> <li> <p> <code>instance-type</code> - The instance type (for example, <code>c4.large</code>).</p> </li> <li> <p> <code>network-platform</code> - The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).</p> </li> <li> <p> <code>platform</code> - The platform (<code>Linux/UNIX</code> or <code>Windows</code>).</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of results to return in a single call. This value can be between 5 and 300. The default value is 100. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results.
        ScheduledInstanceIds:
          allOf:
            - $ref: "#/components/schemas/ScheduledInstanceIdRequestSet"
            - xml:
                name: ScheduledInstanceId
              description: The Scheduled Instance IDs.
        SlotStartTimeRange:
          allOf:
            - $ref: "#/components/schemas/SlotStartTimeRangeRequest"
            - description: The time period for the first schedule to start.
      description: Contains the parameters for DescribeScheduledInstances.
    ScheduledInstanceSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ScheduledInstance"
          - xml:
              name: item
    GroupIds:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SecurityGroupId"
          - xml:
              name: item
    DescribeSecurityGroupReferencesRequest:
      type: object
      required:
        - GroupId
      title: DescribeSecurityGroupReferencesRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        GroupId:
          allOf:
            - $ref: "#/components/schemas/GroupIds"
            - description: The IDs of the security groups in your account.
    SecurityGroupReferences:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SecurityGroupReference"
          - xml:
              name: item
    DescribeSecurityGroupRulesMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    SecurityGroupRuleIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: item
    DescribeSecurityGroupRulesRequest:
      type: object
      title: DescribeSecurityGroupRulesRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>group-id</code> - The ID of the security group.</p> </li> <li> <p> <code>security-group-rule-id</code> - The ID of the security group rule.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> </ul>
        SecurityGroupRuleIds:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupRuleIdList"
            - xml:
                name: SecurityGroupRuleId
              description: The IDs of the security group rules.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeSecurityGroupRulesMaxResults"
            - description: The maximum number of results to return in a single call. To retrieve the remaining results, make another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000. If this parameter is not specified, then all results are returned.
    DescribeSecurityGroupsMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    GroupNameStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SecurityGroupName"
          - xml:
              name: GroupName
    DescribeSecurityGroupsRequest:
      type: object
      title: DescribeSecurityGroupsRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters. If using multiple filters for rules, the results include security groups for which any combination of rules - not necessarily a single rule - match all filters.</p> <ul> <li> <p> <code>description</code> - The description of the security group.</p> </li> <li> <p> <code>egress.ip-permission.cidr</code> - An IPv4 CIDR block for an outbound security group rule.</p> </li> <li> <p> <code>egress.ip-permission.from-port</code> - For an outbound rule, the start of port range for the TCP and UDP protocols, or an ICMP type number.</p> </li> <li> <p> <code>egress.ip-permission.group-id</code> - The ID of a security group that has been referenced in an outbound security group rule.</p> </li> <li> <p> <code>egress.ip-permission.group-name</code> - The name of a security group that is referenced in an outbound security group rule.</p> </li> <li> <p> <code>egress.ip-permission.ipv6-cidr</code> - An IPv6 CIDR block for an outbound security group rule.</p> </li> <li> <p> <code>egress.ip-permission.prefix-list-id</code> - The ID of a prefix list to which a security group rule allows outbound access.</p> </li> <li> <p> <code>egress.ip-permission.protocol</code> - The IP protocol for an outbound security group rule (<code>tcp</code> | <code>udp</code> | <code>icmp</code>, a protocol number, or -1 for all protocols).</p> </li> <li> <p> <code>egress.ip-permission.to-port</code> - For an outbound rule, the end of port range for the TCP and UDP protocols, or an ICMP code.</p> </li> <li> <p> <code>egress.ip-permission.user-id</code> - The ID of an Amazon Web Services account that has been referenced in an outbound security group rule.</p> </li> <li> <p> <code>group-id</code> - The ID of the security group. </p> </li> <li> <p> <code>group-name</code> - The name of the security group.</p> </li> <li> <p> <code>ip-permission.cidr</code> - An IPv4 CIDR block for an inbound security group rule.</p> </li> <li> <p> <code>ip-permission.from-port</code> - For an inbound rule, the start of port range for the TCP and UDP protocols, or an ICMP type number.</p> </li> <li> <p> <code>ip-permission.group-id</code> - The ID of a security group that has been referenced in an inbound security group rule.</p> </li> <li> <p> <code>ip-permission.group-name</code> - The name of a security group that is referenced in an inbound security group rule.</p> </li> <li> <p> <code>ip-permission.ipv6-cidr</code> - An IPv6 CIDR block for an inbound security group rule.</p> </li> <li> <p> <code>ip-permission.prefix-list-id</code> - The ID of a prefix list from which a security group rule allows inbound access.</p> </li> <li> <p> <code>ip-permission.protocol</code> - The IP protocol for an inbound security group rule (<code>tcp</code> | <code>udp</code> | <code>icmp</code>, a protocol number, or -1 for all protocols).</p> </li> <li> <p> <code>ip-permission.to-port</code> - For an inbound rule, the end of port range for the TCP and UDP protocols, or an ICMP code.</p> </li> <li> <p> <code>ip-permission.user-id</code> - The ID of an Amazon Web Services account that has been referenced in an inbound security group rule.</p> </li> <li> <p> <code>owner-id</code> - The Amazon Web Services account ID of the owner of the security group.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC specified when the security group was created.</p> </li> </ul>
        GroupIds:
          allOf:
            - $ref: "#/components/schemas/GroupIdStringList"
            - xml:
                name: GroupId
              description: "<p>The IDs of the security groups. Required for security groups in a nondefault VPC.</p> <p>Default: Describes all of your security groups.</p>"
        GroupNames:
          allOf:
            - $ref: "#/components/schemas/GroupNameStringList"
            - xml:
                name: GroupName
              description: "<p>[EC2-Classic and default VPC only] The names of the security groups. You can specify either the security group name or the security group ID. For security groups in a nondefault VPC, use the <code>group-name</code> filter to describe security groups by name.</p> <p>Default: Describes all of your security groups.</p>"
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to request the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeSecurityGroupsMaxResults"
            - description: The maximum number of results to return in a single call. To retrieve the remaining results, make another request with the returned <code>NextToken</code> value. This value can be between 5 and 1000. If this parameter is not specified, then all results are returned.
    SecurityGroupList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SecurityGroup"
          - xml:
              name: item
    SnapshotAttributeName:
      type: string
      enum:
        - productCodes
        - createVolumePermission
    DescribeSnapshotAttributeRequest:
      type: object
      required:
        - Attribute
        - SnapshotId
      title: DescribeSnapshotAttributeRequest
      properties:
        Attribute:
          allOf:
            - $ref: "#/components/schemas/SnapshotAttributeName"
            - description: The snapshot attribute you would like to view.
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/SnapshotId"
            - description: The ID of the EBS snapshot.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ProductCodeList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ProductCode"
          - xml:
              name: item
    RestorableByStringList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    SnapshotIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SnapshotId"
          - xml:
              name: SnapshotId
    DescribeSnapshotsRequest:
      type: object
      title: DescribeSnapshotsRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters.</p> <ul> <li> <p> <code>description</code> - A description of the snapshot.</p> </li> <li> <p> <code>encrypted</code> - Indicates whether the snapshot is encrypted (<code>true</code> | <code>false</code>)</p> </li> <li> <p> <code>owner-alias</code> - The owner alias, from an Amazon-maintained list (<code>amazon</code>). This is not the user-configured Amazon Web Services account alias set using the IAM console. We recommend that you use the related parameter instead of this filter.</p> </li> <li> <p> <code>owner-id</code> - The Amazon Web Services account ID of the owner. We recommend that you use the related parameter instead of this filter.</p> </li> <li> <p> <code>progress</code> - The progress of the snapshot, as a percentage (for example, 80%).</p> </li> <li> <p> <code>snapshot-id</code> - The snapshot ID.</p> </li> <li> <p> <code>start-time</code> - The time stamp when the snapshot was initiated.</p> </li> <li> <p> <code>status</code> - The status of the snapshot (<code>pending</code> | <code>completed</code> | <code>error</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>volume-id</code> - The ID of the volume the snapshot is for.</p> </li> <li> <p> <code>volume-size</code> - The size of the volume, in GiB.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of snapshot results returned by <code>DescribeSnapshots</code> in paginated output. When this parameter is used, <code>DescribeSnapshots</code> only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeSnapshots</code> request with the returned <code>NextToken</code> value. This value can be between 5 and 1,000; if <code>MaxResults</code> is given a value larger than 1,000, only 1,000 results are returned. If this parameter is not used, then <code>DescribeSnapshots</code> returns all results. You cannot specify this parameter and the snapshot IDs parameter in the same request.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The <code>NextToken</code> value returned from a previous paginated <code>DescribeSnapshots</code> request where <code>MaxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>NextToken</code> value. This value is <code>null</code> when there are no more results to return.
        OwnerIds:
          allOf:
            - $ref: "#/components/schemas/OwnerStringList"
            - xml:
                name: Owner
              description: Scopes the results to snapshots with the specified owners. You can specify a combination of Amazon Web Services account IDs, <code>self</code>, and <code>amazon</code>.
        RestorableByUserIds:
          allOf:
            - $ref: "#/components/schemas/RestorableByStringList"
            - xml:
                name: RestorableBy
              description: The IDs of the Amazon Web Services accounts that can create volumes from the snapshot.
        SnapshotIds:
          allOf:
            - $ref: "#/components/schemas/SnapshotIdStringList"
            - xml:
                name: SnapshotId
              description: "<p>The snapshot IDs.</p> <p>Default: Describes the snapshots for which you have create volume permissions.</p>"
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    SnapshotList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Snapshot"
          - xml:
              name: item
    DescribeSpotDatafeedSubscriptionRequest:
      type: object
      title: DescribeSpotDatafeedSubscriptionRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for DescribeSpotDatafeedSubscription.
    DescribeSpotFleetInstancesMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    DescribeSpotFleetInstancesRequest:
      type: object
      required:
        - SpotFleetRequestId
      title: DescribeSpotFleetInstancesRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeSpotFleetInstancesMaxResults"
            - xml:
                name: maxResults
              description: The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token for the next set of results.
        SpotFleetRequestId:
          allOf:
            - $ref: "#/components/schemas/SpotFleetRequestId"
            - xml:
                name: spotFleetRequestId
              description: The ID of the Spot Fleet request.
      description: Contains the parameters for DescribeSpotFleetInstances.
    DescribeSpotFleetRequestHistoryMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    EventType:
      type: string
      enum:
        - instanceChange
        - fleetRequestChange
        - error
        - information
    DescribeSpotFleetRequestHistoryRequest:
      type: object
      required:
        - SpotFleetRequestId
        - StartTime
      title: DescribeSpotFleetRequestHistoryRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        EventType:
          allOf:
            - $ref: "#/components/schemas/EventType"
            - xml:
                name: eventType
              description: The type of events to describe. By default, all events are described.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeSpotFleetRequestHistoryMaxResults"
            - xml:
                name: maxResults
              description: The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token for the next set of results.
        SpotFleetRequestId:
          allOf:
            - $ref: "#/components/schemas/SpotFleetRequestId"
            - xml:
                name: spotFleetRequestId
              description: The ID of the Spot Fleet request.
        StartTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: startTime
              description: The starting date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
      description: Contains the parameters for DescribeSpotFleetRequestHistory.
    HistoryRecords:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/HistoryRecord"
          - xml:
              name: item
    DescribeSpotFleetRequestsRequest:
      type: object
      title: DescribeSpotFleetRequestsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: maxResults
              description: The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token for the next set of results.
        SpotFleetRequestIds:
          allOf:
            - $ref: "#/components/schemas/SpotFleetRequestIdList"
            - xml:
                name: spotFleetRequestId
              description: The IDs of the Spot Fleet requests.
      description: Contains the parameters for DescribeSpotFleetRequests.
    SpotFleetRequestConfigSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SpotFleetRequestConfig"
          - xml:
              name: item
    DescribeSpotInstanceRequestsRequest:
      type: object
      title: DescribeSpotInstanceRequestsRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: '<p>One or more filters.</p> <ul> <li> <p> <code>availability-zone-group</code> - The Availability Zone group.</p> </li> <li> <p> <code>create-time</code> - The time stamp when the Spot Instance request was created.</p> </li> <li> <p> <code>fault-code</code> - The fault code related to the request.</p> </li> <li> <p> <code>fault-message</code> - The fault message related to the request.</p> </li> <li> <p> <code>instance-id</code> - The ID of the instance that fulfilled the request.</p> </li> <li> <p> <code>launch-group</code> - The Spot Instance launch group.</p> </li> <li> <p> <code>launch.block-device-mapping.delete-on-termination</code> - Indicates whether the EBS volume is deleted on instance termination.</p> </li> <li> <p> <code>launch.block-device-mapping.device-name</code> - The device name for the volume in the block device mapping (for example, <code>/dev/sdh</code> or <code>xvdh</code>).</p> </li> <li> <p> <code>launch.block-device-mapping.snapshot-id</code> - The ID of the snapshot for the EBS volume.</p> </li> <li> <p> <code>launch.block-device-mapping.volume-size</code> - The size of the EBS volume, in GiB.</p> </li> <li> <p> <code>launch.block-device-mapping.volume-type</code> - The type of EBS volume: <code>gp2</code> for General Purpose SSD, <code>io1</code> or <code>io2</code> for Provisioned IOPS SSD, <code>st1</code> for Throughput Optimized HDD, <code>sc1</code>for Cold HDD, or <code>standard</code> for Magnetic.</p> </li> <li> <p> <code>launch.group-id</code> - The ID of the security group for the instance.</p> </li> <li> <p> <code>launch.group-name</code> - The name of the security group for the instance.</p> </li> <li> <p> <code>launch.image-id</code> - The ID of the AMI.</p> </li> <li> <p> <code>launch.instance-type</code> - The type of instance (for example, <code>m3.medium</code>).</p> </li> <li> <p> <code>launch.kernel-id</code> - The kernel ID.</p> </li> <li> <p> <code>launch.key-name</code> - The name of the key pair the instance launched with.</p> </li> <li> <p> <code>launch.monitoring-enabled</code> - Whether detailed monitoring is enabled for the Spot Instance.</p> </li> <li> <p> <code>launch.ramdisk-id</code> - The RAM disk ID.</p> </li> <li> <p> <code>launched-availability-zone</code> - The Availability Zone in which the request is launched.</p> </li> <li> <p> <code>network-interface.addresses.primary</code> - Indicates whether the IP address is the primary private IP address.</p> </li> <li> <p> <code>network-interface.delete-on-termination</code> - Indicates whether the network interface is deleted when the instance is terminated.</p> </li> <li> <p> <code>network-interface.description</code> - A description of the network interface.</p> </li> <li> <p> <code>network-interface.device-index</code> - The index of the device for the network interface attachment on the instance.</p> </li> <li> <p> <code>network-interface.group-id</code> - The ID of the security group associated with the network interface.</p> </li> <li> <p> <code>network-interface.network-interface-id</code> - The ID of the network interface.</p> </li> <li> <p> <code>network-interface.private-ip-address</code> - The primary private IP address of the network interface.</p> </li> <li> <p> <code>network-interface.subnet-id</code> - The ID of the subnet for the instance.</p> </li> <li> <p> <code>product-description</code> - The product description associated with the instance (<code>Linux/UNIX</code> | <code>Windows</code>).</p> </li> <li> <p> <code>spot-instance-request-id</code> - The Spot Instance request ID.</p> </li> <li> <p> <code>spot-price</code> - The maximum hourly price for any Spot Instance launched to fulfill the request.</p> </li> <li> <p> <code>state</code> - The state of the Spot Instance request (<code>open</code> | <code>active</code> | <code>closed</code> | <code>cancelled</code> | <code>failed</code>). Spot request status information can help you track your Amazon EC2 Spot Instance requests. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html">Spot request status</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.</p> </li> <li> <p> <code>status-code</code> - The short code describing the most recent evaluation of your Spot Instance request.</p> </li> <li> <p> <code>status-message</code> - The message explaining the status of the Spot Instance request.</p> </li> <li> <p> <code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>type</code> - The type of Spot Instance request (<code>one-time</code> | <code>persistent</code>).</p> </li> <li> <p> <code>valid-from</code> - The start date of the request.</p> </li> <li> <p> <code>valid-until</code> - The end date of the request.</p> </li> </ul>'
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        SpotInstanceRequestIds:
          allOf:
            - $ref: "#/components/schemas/SpotInstanceRequestIdList"
            - xml:
                name: SpotInstanceRequestId
              description: One or more Spot Instance request IDs.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to request the next set of results. This value is <code>null</code> when there are no more results to return.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of results to return in a single call. Specify a value between 5 and 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
      description: Contains the parameters for DescribeSpotInstanceRequests.
    SpotInstanceRequestList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SpotInstanceRequest"
          - xml:
              name: item
    InstanceTypeList:
      type: array
      items:
        $ref: "#/components/schemas/InstanceType"
    ProductDescriptionList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    DescribeSpotPriceHistoryRequest:
      type: object
      title: DescribeSpotPriceHistoryRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone for which prices should be returned.</p> </li> <li> <p> <code>instance-type</code> - The type of instance (for example, <code>m3.medium</code>).</p> </li> <li> <p> <code>product-description</code> - The product description for the Spot price (<code>Linux/UNIX</code> | <code>Red Hat Enterprise Linux</code> | <code>SUSE Linux</code> | <code>Windows</code> | <code>Linux/UNIX (Amazon VPC)</code> | <code>Red Hat Enterprise Linux (Amazon VPC)</code> | <code>SUSE Linux (Amazon VPC)</code> | <code>Windows (Amazon VPC)</code>).</p> </li> <li> <p> <code>spot-price</code> - The Spot price. The value must match exactly (or use wildcards; greater than or less than comparison is not supported).</p> </li> <li> <p> <code>timestamp</code> - The time stamp of the Spot price history, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). You can use wildcards (* and ?). Greater than or less than comparison is not supported.</p> </li> </ul>
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: Filters the results by the specified Availability Zone.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        EndTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: endTime
              description: The date and time, up to the current date, from which to stop retrieving the price history data, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
        InstanceTypes:
          allOf:
            - $ref: "#/components/schemas/InstanceTypeList"
            - xml:
                name: InstanceType
              description: Filters the results by the specified instance types.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: maxResults
              description: The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token for the next set of results.
        ProductDescriptions:
          allOf:
            - $ref: "#/components/schemas/ProductDescriptionList"
            - xml:
                name: ProductDescription
              description: Filters the results by the specified basic product descriptions.
        StartTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: startTime
              description: The date and time, up to the past 90 days, from which to start retrieving the price history data, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
      description: Contains the parameters for DescribeSpotPriceHistory.
    SpotPriceHistoryList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SpotPrice"
          - xml:
              name: item
    DescribeStaleSecurityGroupsMaxResults:
      type: integer
      minimum: 5
      maximum: 255
    DescribeStaleSecurityGroupsNextToken:
      type: string
      minLength: 1
      maxLength: 1024
    DescribeStaleSecurityGroupsRequest:
      type: object
      required:
        - VpcId
      title: DescribeStaleSecurityGroupsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeStaleSecurityGroupsMaxResults"
            - description: The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/DescribeStaleSecurityGroupsNextToken"
            - description: The token for the next set of items to return. (You received this token from a prior call.)
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - description: The ID of the VPC.
    StaleSecurityGroupSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/StaleSecurityGroup"
          - xml:
              name: item
    ImageIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ImageId"
          - xml:
              name: item
    DescribeStoreImageTasksRequestMaxResults:
      type: integer
      minimum: 1
      maximum: 200
    DescribeStoreImageTasksRequest:
      type: object
      title: DescribeStoreImageTasksRequest
      properties:
        ImageIds:
          allOf:
            - $ref: "#/components/schemas/ImageIdList"
            - xml:
                name: ImageId
              description: The AMI IDs for which to show progress. Up to 20 AMI IDs can be included in a request.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters.</p> <ul> <li> <p> <code>task-state</code> - Returns tasks in a certain state (<code>InProgress</code> | <code>Completed</code> | <code>Failed</code>)</p> </li> <li> <p> <code>bucket</code> - Returns task information for tasks that targeted a specific bucket. For the filter value, specify the bucket name.</p> </li> </ul>
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeStoreImageTasksRequestMaxResults"
            - description: The maximum number of results to return in a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value. This value can be between 1 and 200. You cannot specify this parameter and the <code>ImageIDs</code> parameter in the same call.
    StoreImageTaskResultSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/StoreImageTaskResult"
          - xml:
              name: item
    DescribeSubnetsMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    SubnetIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SubnetId"
          - xml:
              name: SubnetId
    DescribeSubnetsRequest:
      type: object
      title: DescribeSubnetsRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>availability-zone</code> - The Availability Zone for the subnet. You can also use <code>availabilityZone</code> as the filter name.</p> </li> <li> <p> <code>availability-zone-id</code> - The ID of the Availability Zone for the subnet. You can also use <code>availabilityZoneId</code> as the filter name.</p> </li> <li> <p> <code>available-ip-address-count</code> - The number of IPv4 addresses in the subnet that are available.</p> </li> <li> <p> <code>cidr-block</code> - The IPv4 CIDR block of the subnet. The CIDR block you specify must exactly match the subnet's CIDR block for information to be returned for the subnet. You can also use <code>cidr</code> or <code>cidrBlock</code> as the filter names.</p> </li> <li> <p> <code>default-for-az</code> - Indicates whether this is the default subnet for the Availability Zone. You can also use <code>defaultForAz</code> as the filter name.</p> </li> <li> <p> <code>ipv6-cidr-block-association.ipv6-cidr-block</code> - An IPv6 CIDR block associated with the subnet.</p> </li> <li> <p> <code>ipv6-cidr-block-association.association-id</code> - An association ID for an IPv6 CIDR block associated with the subnet.</p> </li> <li> <p> <code>ipv6-cidr-block-association.state</code> - The state of an IPv6 CIDR block associated with the subnet.</p> </li> <li> <p> <code>outpost-arn</code> - The Amazon Resource Name (ARN) of the Outpost.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the subnet.</p> </li> <li> <p> <code>state</code> - The state of the subnet (<code>pending</code> | <code>available</code>).</p> </li> <li> <p> <code>subnet-arn</code> - The Amazon Resource Name (ARN) of the subnet.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC for the subnet.</p> </li> </ul>
        SubnetIds:
          allOf:
            - $ref: "#/components/schemas/SubnetIdStringList"
            - xml:
                name: SubnetId
              description: "<p>One or more subnet IDs.</p> <p>Default: Describes all your subnets.</p>"
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeSubnetsMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
    SubnetList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Subnet"
          - xml:
              name: item
    DescribeTagsRequest:
      type: object
      title: DescribeTagsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters.</p> <ul> <li> <p> <code>key</code> - The tag key.</p> </li> <li> <p> <code>resource-id</code> - The ID of the resource.</p> </li> <li> <p> <code>resource-type</code> - The resource type (<code>customer-gateway</code> | <code>dedicated-host</code> | <code>dhcp-options</code> | <code>elastic-ip</code> | <code>fleet</code> | <code>fpga-image</code> | <code>host-reservation</code> | <code>image</code> | <code>instance</code> | <code>internet-gateway</code> | <code>key-pair</code> | <code>launch-template</code> | <code>natgateway</code> | <code>network-acl</code> | <code>network-interface</code> | <code>placement-group</code> | <code>reserved-instances</code> | <code>route-table</code> | <code>security-group</code> | <code>snapshot</code> | <code>spot-instances-request</code> | <code>subnet</code> | <code>volume</code> | <code>vpc</code> | <code>vpc-endpoint</code> | <code>vpc-endpoint-service</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of the tag. For example, specify "tag:Owner" for the filter name and "TeamA" for the filter value to find resources with the tag "Owner=TeamA".</p> </li> <li> <p> <code>value</code> - The tag value.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: maxResults
              description: The maximum number of results to return in a single call. This value can be between 5 and 1000. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The token to retrieve the next page of results.
    TagDescriptionList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TagDescription"
          - xml:
              name: item
    TrafficMirrorFilterIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TrafficMirrorFilterId"
          - xml:
              name: item
    TrafficMirroringMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeTrafficMirrorFiltersRequest:
      type: object
      title: DescribeTrafficMirrorFiltersRequest
      properties:
        TrafficMirrorFilterIds:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorFilterIdList"
            - xml:
                name: TrafficMirrorFilterId
              description: The ID of the Traffic Mirror filter.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: "<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>description</code>: The Traffic Mirror filter description.</p> </li> <li> <p> <code>traffic-mirror-filter-id</code>: The ID of the Traffic Mirror filter.</p> </li> </ul>"
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/TrafficMirroringMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    TrafficMirrorFilterSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TrafficMirrorFilter"
          - xml:
              name: item
    TrafficMirrorSessionIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TrafficMirrorSessionId"
          - xml:
              name: item
    DescribeTrafficMirrorSessionsRequest:
      type: object
      title: DescribeTrafficMirrorSessionsRequest
      properties:
        TrafficMirrorSessionIds:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorSessionIdList"
            - xml:
                name: TrafficMirrorSessionId
              description: The ID of the Traffic Mirror session.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: "<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>description</code>: The Traffic Mirror session description.</p> </li> <li> <p> <code>network-interface-id</code>: The ID of the Traffic Mirror session network interface.</p> </li> <li> <p> <code>owner-id</code>: The ID of the account that owns the Traffic Mirror session.</p> </li> <li> <p> <code>packet-length</code>: The assigned number of packets to mirror. </p> </li> <li> <p> <code>session-number</code>: The assigned session number. </p> </li> <li> <p> <code>traffic-mirror-filter-id</code>: The ID of the Traffic Mirror filter.</p> </li> <li> <p> <code>traffic-mirror-session-id</code>: The ID of the Traffic Mirror session.</p> </li> <li> <p> <code>traffic-mirror-target-id</code>: The ID of the Traffic Mirror target.</p> </li> <li> <p> <code>virtual-network-id</code>: The virtual network ID of the Traffic Mirror session.</p> </li> </ul>"
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/TrafficMirroringMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    TrafficMirrorSessionSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TrafficMirrorSession"
          - xml:
              name: item
    TrafficMirrorTargetIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TrafficMirrorTargetId"
          - xml:
              name: item
    DescribeTrafficMirrorTargetsRequest:
      type: object
      title: DescribeTrafficMirrorTargetsRequest
      properties:
        TrafficMirrorTargetIds:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorTargetIdList"
            - xml:
                name: TrafficMirrorTargetId
              description: The ID of the Traffic Mirror targets.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: "<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>description</code>: The Traffic Mirror target description.</p> </li> <li> <p> <code>network-interface-id</code>: The ID of the Traffic Mirror session network interface.</p> </li> <li> <p> <code>network-load-balancer-arn</code>: The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the session.</p> </li> <li> <p> <code>owner-id</code>: The ID of the account that owns the Traffic Mirror session.</p> </li> <li> <p> <code>traffic-mirror-target-id</code>: The ID of the Traffic Mirror target.</p> </li> </ul>"
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/TrafficMirroringMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    TrafficMirrorTargetSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TrafficMirrorTarget"
          - xml:
              name: item
    TransitGatewayAttachmentIdStringList:
      type: array
      items:
        $ref: "#/components/schemas/TransitGatewayAttachmentId"
    TransitGatewayMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    DescribeTransitGatewayAttachmentsRequest:
      type: object
      title: DescribeTransitGatewayAttachmentsRequest
      properties:
        TransitGatewayAttachmentIds:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentIdStringList"
            - description: The IDs of the attachments.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>association.state</code> - The state of the association (<code>associating</code> | <code>associated</code> | <code>disassociating</code>).</p> </li> <li> <p> <code>association.transit-gateway-route-table-id</code> - The ID of the route table for the transit gateway.</p> </li> <li> <p> <code>resource-id</code> - The ID of the resource.</p> </li> <li> <p> <code>resource-owner-id</code> - The ID of the Amazon Web Services account that owns the resource.</p> </li> <li> <p> <code>resource-type</code> - The resource type. Valid values are <code>vpc</code> | <code>vpn</code> | <code>direct-connect-gateway</code> | <code>peering</code> | <code>connect</code>.</p> </li> <li> <p> <code>state</code> - The state of the attachment. Valid values are <code>available</code> | <code>deleted</code> | <code>deleting</code> | <code>failed</code> | <code>failing</code> | <code>initiatingRequest</code> | <code>modifying</code> | <code>pendingAcceptance</code> | <code>pending</code> | <code>rollingBack</code> | <code>rejected</code> | <code>rejecting</code>.</p> </li> <li> <p> <code>transit-gateway-attachment-id</code> - The ID of the attachment.</p> </li> <li> <p> <code>transit-gateway-id</code> - The ID of the transit gateway.</p> </li> <li> <p> <code>transit-gateway-owner-id</code> - The ID of the Amazon Web Services account that owns the transit gateway.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayAttachmentList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGatewayAttachment"
          - xml:
              name: item
    TransitGatewayConnectPeerIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGatewayConnectPeerId"
          - xml:
              name: item
    DescribeTransitGatewayConnectPeersRequest:
      type: object
      title: DescribeTransitGatewayConnectPeersRequest
      properties:
        TransitGatewayConnectPeerIds:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayConnectPeerIdStringList"
            - description: The IDs of the Connect peers.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>state</code> - The state of the Connect peer (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>transit-gateway-attachment-id</code> - The ID of the attachment.</p> </li> <li> <p> <code>transit-gateway-connect-peer-id</code> - The ID of the Connect peer.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayConnectPeerList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGatewayConnectPeer"
          - xml:
              name: item
    DescribeTransitGatewayConnectsRequest:
      type: object
      title: DescribeTransitGatewayConnectsRequest
      properties:
        TransitGatewayAttachmentIds:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentIdStringList"
            - description: The IDs of the attachments.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>options.protocol</code> - The tunnel protocol (<code>gre</code>).</p> </li> <li> <p> <code>state</code> - The state of the attachment (<code>initiating</code> | <code>initiatingRequest</code> | <code>pendingAcceptance</code> | <code>rollingBack</code> | <code>pending</code> | <code>available</code> | <code>modifying</code> | <code>deleting</code> | <code>deleted</code> | <code>failed</code> | <code>rejected</code> | <code>rejecting</code> | <code>failing</code>).</p> </li> <li> <p> <code>transit-gateway-attachment-id</code> - The ID of the Connect attachment.</p> </li> <li> <p> <code>transit-gateway-id</code> - The ID of the transit gateway.</p> </li> <li> <p> <code>transport-transit-gateway-attachment-id</code> - The ID of the transit gateway attachment from which the Connect attachment was created.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayConnectList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGatewayConnect"
          - xml:
              name: item
    TransitGatewayMulticastDomainIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGatewayMulticastDomainId"
          - xml:
              name: item
    DescribeTransitGatewayMulticastDomainsRequest:
      type: object
      title: DescribeTransitGatewayMulticastDomainsRequest
      properties:
        TransitGatewayMulticastDomainIds:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomainIdStringList"
            - description: The ID of the transit gateway multicast domain.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>state</code> - The state of the transit gateway multicast domain. Valid values are <code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>.</p> </li> <li> <p> <code>transit-gateway-id</code> - The ID of the transit gateway.</p> </li> <li> <p> <code>transit-gateway-multicast-domain-id</code> - The ID of the transit gateway multicast domain.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayMulticastDomainList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGatewayMulticastDomain"
          - xml:
              name: item
    DescribeTransitGatewayPeeringAttachmentsRequest:
      type: object
      title: DescribeTransitGatewayPeeringAttachmentsRequest
      properties:
        TransitGatewayAttachmentIds:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentIdStringList"
            - description: One or more IDs of the transit gateway peering attachments.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>transit-gateway-attachment-id</code> - The ID of the transit gateway attachment.</p> </li> <li> <p> <code>local-owner-id</code> - The ID of your Amazon Web Services account.</p> </li> <li> <p> <code>remote-owner-id</code> - The ID of the Amazon Web Services account in the remote Region that owns the transit gateway.</p> </li> <li> <p> <code>state</code> - The state of the peering attachment. Valid values are <code>available</code> | <code>deleted</code> | <code>deleting</code> | <code>failed</code> | <code>failing</code> | <code>initiatingRequest</code> | <code>modifying</code> | <code>pendingAcceptance</code> | <code>pending</code> | <code>rollingBack</code> | <code>rejected</code> | <code>rejecting</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources that have a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>transit-gateway-id</code> - The ID of the transit gateway.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayPeeringAttachmentList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGatewayPeeringAttachment"
          - xml:
              name: item
    TransitGatewayRouteTableIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGatewayRouteTableId"
          - xml:
              name: item
    DescribeTransitGatewayRouteTablesRequest:
      type: object
      title: DescribeTransitGatewayRouteTablesRequest
      properties:
        TransitGatewayRouteTableIds:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableIdStringList"
            - description: The IDs of the transit gateway route tables.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>default-association-route-table</code> - Indicates whether this is the default association route table for the transit gateway (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>default-propagation-route-table</code> - Indicates whether this is the default propagation route table for the transit gateway (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>state</code> - The state of the route table (<code>available</code> | <code>deleting</code> | <code>deleted</code> | <code>pending</code>).</p> </li> <li> <p> <code>transit-gateway-id</code> - The ID of the transit gateway.</p> </li> <li> <p> <code>transit-gateway-route-table-id</code> - The ID of the transit gateway route table.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayRouteTableList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGatewayRouteTable"
          - xml:
              name: item
    DescribeTransitGatewayVpcAttachmentsRequest:
      type: object
      title: DescribeTransitGatewayVpcAttachmentsRequest
      properties:
        TransitGatewayAttachmentIds:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentIdStringList"
            - description: The IDs of the attachments.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>state</code> - The state of the attachment. Valid values are <code>available</code> | <code>deleted</code> | <code>deleting</code> | <code>failed</code> | <code>failing</code> | <code>initiatingRequest</code> | <code>modifying</code> | <code>pendingAcceptance</code> | <code>pending</code> | <code>rollingBack</code> | <code>rejected</code> | <code>rejecting</code>.</p> </li> <li> <p> <code>transit-gateway-attachment-id</code> - The ID of the attachment.</p> </li> <li> <p> <code>transit-gateway-id</code> - The ID of the transit gateway.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayVpcAttachmentList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGatewayVpcAttachment"
          - xml:
              name: item
    TransitGatewayIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGatewayId"
          - xml:
              name: item
    DescribeTransitGatewaysRequest:
      type: object
      title: DescribeTransitGatewaysRequest
      properties:
        TransitGatewayIds:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayIdStringList"
            - description: The IDs of the transit gateways.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>options.propagation-default-route-table-id</code> - The ID of the default propagation route table.</p> </li> <li> <p> <code>options.amazon-side-asn</code> - The private ASN for the Amazon side of a BGP session.</p> </li> <li> <p> <code>options.association-default-route-table-id</code> - The ID of the default association route table.</p> </li> <li> <p> <code>options.auto-accept-shared-attachments</code> - Indicates whether there is automatic acceptance of attachment requests (<code>enable</code> | <code>disable</code>).</p> </li> <li> <p> <code>options.default-route-table-association</code> - Indicates whether resource attachments are automatically associated with the default association route table (<code>enable</code> | <code>disable</code>).</p> </li> <li> <p> <code>options.default-route-table-propagation</code> - Indicates whether resource attachments automatically propagate routes to the default propagation route table (<code>enable</code> | <code>disable</code>).</p> </li> <li> <p> <code>options.dns-support</code> - Indicates whether DNS support is enabled (<code>enable</code> | <code>disable</code>).</p> </li> <li> <p> <code>options.vpn-ecmp-support</code> - Indicates whether Equal Cost Multipath Protocol support is enabled (<code>enable</code> | <code>disable</code>).</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the transit gateway.</p> </li> <li> <p> <code>state</code> - The state of the transit gateway (<code>available</code> | <code>deleted</code> | <code>deleting</code> | <code>modifying</code> | <code>pending</code>).</p> </li> <li> <p> <code>transit-gateway-id</code> - The ID of the transit gateway.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGateway"
          - xml:
              name: item
    DescribeTrunkInterfaceAssociationsMaxResults:
      type: integer
      minimum: 5
      maximum: 255
    TrunkInterfaceAssociationIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TrunkInterfaceAssociationId"
          - xml:
              name: item
    DescribeTrunkInterfaceAssociationsRequest:
      type: object
      title: DescribeTrunkInterfaceAssociationsRequest
      properties:
        AssociationIds:
          allOf:
            - $ref: "#/components/schemas/TrunkInterfaceAssociationIdList"
            - xml:
                name: AssociationId
              description: The IDs of the associations.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>gre-key</code> - The ID of a trunk interface association.</p> </li> <li> <p> <code>interface-protocol</code> - The interface protocol. Valid values are <code>VLAN</code> and <code>GRE</code>.</p> </li> </ul>
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeTrunkInterfaceAssociationsMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
    TrunkInterfaceAssociationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TrunkInterfaceAssociation"
          - xml:
              name: item
    VolumeAttributeName:
      type: string
      enum:
        - autoEnableIO
        - productCodes
    DescribeVolumeAttributeRequest:
      type: object
      required:
        - Attribute
        - VolumeId
      title: DescribeVolumeAttributeRequest
      properties:
        Attribute:
          allOf:
            - $ref: "#/components/schemas/VolumeAttributeName"
            - description: The attribute of the volume. This parameter is required.
        VolumeId:
          allOf:
            - $ref: "#/components/schemas/VolumeId"
            - description: The ID of the volume.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    VolumeIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VolumeId"
          - xml:
              name: VolumeId
    DescribeVolumeStatusRequest:
      type: object
      title: DescribeVolumeStatusRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: "<p>The filters.</p> <ul> <li> <p> <code>action.code</code> - The action code for the event (for example, <code>enable-volume-io</code>).</p> </li> <li> <p> <code>action.description</code> - A description of the action.</p> </li> <li> <p> <code>action.event-id</code> - The event ID associated with the action.</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone of the instance.</p> </li> <li> <p> <code>event.description</code> - A description of the event.</p> </li> <li> <p> <code>event.event-id</code> - The event ID.</p> </li> <li> <p> <code>event.event-type</code> - The event type (for <code>io-enabled</code>: <code>passed</code> | <code>failed</code>; for <code>io-performance</code>: <code>io-performance:degraded</code> | <code>io-performance:severely-degraded</code> | <code>io-performance:stalled</code>).</p> </li> <li> <p> <code>event.not-after</code> - The latest end time for the event.</p> </li> <li> <p> <code>event.not-before</code> - The earliest start time for the event.</p> </li> <li> <p> <code>volume-status.details-name</code> - The cause for <code>volume-status.status</code> (<code>io-enabled</code> | <code>io-performance</code>).</p> </li> <li> <p> <code>volume-status.details-status</code> - The status of <code>volume-status.details-name</code> (for <code>io-enabled</code>: <code>passed</code> | <code>failed</code>; for <code>io-performance</code>: <code>normal</code> | <code>degraded</code> | <code>severely-degraded</code> | <code>stalled</code>).</p> </li> <li> <p> <code>volume-status.status</code> - The status of the volume (<code>ok</code> | <code>impaired</code> | <code>warning</code> | <code>insufficient-data</code>).</p> </li> </ul>"
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of volume results returned by <code>DescribeVolumeStatus</code> in paginated output. When this parameter is used, the request only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1,000; if <code>MaxResults</code> is given a value larger than 1,000, only 1,000 results are returned. If this parameter is not used, then <code>DescribeVolumeStatus</code> returns all results. You cannot specify this parameter and the volume IDs parameter in the same request.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The <code>NextToken</code> value to include in a future <code>DescribeVolumeStatus</code> request. When the results of the request exceed <code>MaxResults</code>, this value can be used to retrieve the next page of results. This value is <code>null</code> when there are no more results to return.
        VolumeIds:
          allOf:
            - $ref: "#/components/schemas/VolumeIdStringList"
            - xml:
                name: VolumeId
              description: "<p>The IDs of the volumes.</p> <p>Default: Describes all your volumes.</p>"
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    VolumeStatusList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VolumeStatusItem"
          - xml:
              name: item
    DescribeVolumesModificationsRequest:
      type: object
      title: DescribeVolumesModificationsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        VolumeIds:
          allOf:
            - $ref: "#/components/schemas/VolumeIdStringList"
            - xml:
                name: VolumeId
              description: The IDs of the volumes.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters.</p> <ul> <li> <p> <code>modification-state</code> - The current modification state (modifying | optimizing | completed | failed).</p> </li> <li> <p> <code>original-iops</code> - The original IOPS rate of the volume.</p> </li> <li> <p> <code>original-size</code> - The original size of the volume, in GiB.</p> </li> <li> <p> <code>original-volume-type</code> - The original volume type of the volume (standard | io1 | io2 | gp2 | sc1 | st1).</p> </li> <li> <p> <code>originalMultiAttachEnabled</code> - Indicates whether Multi-Attach support was enabled (true | false).</p> </li> <li> <p> <code>start-time</code> - The modification start time.</p> </li> <li> <p> <code>target-iops</code> - The target IOPS rate of the volume.</p> </li> <li> <p> <code>target-size</code> - The target size of the volume, in GiB.</p> </li> <li> <p> <code>target-volume-type</code> - The target volume type of the volume (standard | io1 | io2 | gp2 | sc1 | st1).</p> </li> <li> <p> <code>targetMultiAttachEnabled</code> - Indicates whether Multi-Attach support is to be enabled (true | false).</p> </li> <li> <p> <code>volume-id</code> - The ID of the volume.</p> </li> </ul>
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The <code>nextToken</code> value returned by a previous paginated request.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of results (up to a limit of 500) to be returned in a paginated request.
    VolumeModificationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VolumeModification"
          - xml:
              name: item
    DescribeVolumesRequest:
      type: object
      title: DescribeVolumesRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters.</p> <ul> <li> <p> <code>attachment.attach-time</code> - The time stamp when the attachment initiated.</p> </li> <li> <p> <code>attachment.delete-on-termination</code> - Whether the volume is deleted on instance termination.</p> </li> <li> <p> <code>attachment.device</code> - The device name specified in the block device mapping (for example, <code>/dev/sda1</code>).</p> </li> <li> <p> <code>attachment.instance-id</code> - The ID of the instance the volume is attached to.</p> </li> <li> <p> <code>attachment.status</code> - The attachment state (<code>attaching</code> | <code>attached</code> | <code>detaching</code>).</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone in which the volume was created.</p> </li> <li> <p> <code>create-time</code> - The time stamp when the volume was created.</p> </li> <li> <p> <code>encrypted</code> - Indicates whether the volume is encrypted (<code>true</code> | <code>false</code>)</p> </li> <li> <p> <code>multi-attach-enabled</code> - Indicates whether the volume is enabled for Multi-Attach (<code>true</code> | <code>false</code>)</p> </li> <li> <p> <code>fast-restored</code> - Indicates whether the volume was created from a snapshot that is enabled for fast snapshot restore (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>size</code> - The size of the volume, in GiB.</p> </li> <li> <p> <code>snapshot-id</code> - The snapshot from which the volume was created.</p> </li> <li> <p> <code>status</code> - The state of the volume (<code>creating</code> | <code>available</code> | <code>in-use</code> | <code>deleting</code> | <code>deleted</code> | <code>error</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>volume-id</code> - The volume ID.</p> </li> <li> <p> <code>volume-type</code> - The Amazon EBS volume type (<code>gp2</code> | <code>gp3</code> | <code>io1</code> | <code>io2</code> | <code>st1</code> | <code>sc1</code>| <code>standard</code>)</p> </li> </ul>
        VolumeIds:
          allOf:
            - $ref: "#/components/schemas/VolumeIdStringList"
            - xml:
                name: VolumeId
              description: The volume IDs.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: maxResults
              description: The maximum number of volume results returned by <code>DescribeVolumes</code> in paginated output. When this parameter is used, <code>DescribeVolumes</code> only returns <code>MaxResults</code> results in a single page along with a <code>NextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>DescribeVolumes</code> request with the returned <code>NextToken</code> value. This value can be between 5 and 500; if <code>MaxResults</code> is given a value larger than 500, only 500 results are returned. If this parameter is not used, then <code>DescribeVolumes</code> returns all results. You cannot specify this parameter and the volume IDs parameter in the same request.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: nextToken
              description: The <code>NextToken</code> value returned from a previous paginated <code>DescribeVolumes</code> request where <code>MaxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>NextToken</code> value. This value is <code>null</code> when there are no more results to return.
    VolumeList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Volume"
          - xml:
              name: item
    VpcAttributeName:
      type: string
      enum:
        - enableDnsSupport
        - enableDnsHostnames
    DescribeVpcAttributeRequest:
      type: object
      required:
        - Attribute
        - VpcId
      title: DescribeVpcAttributeRequest
      properties:
        Attribute:
          allOf:
            - $ref: "#/components/schemas/VpcAttributeName"
            - description: The VPC attribute.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - description: The ID of the VPC.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DescribeVpcClassicLinkDnsSupportMaxResults:
      type: integer
      minimum: 5
      maximum: 255
    DescribeVpcClassicLinkDnsSupportNextToken:
      type: string
      minLength: 1
      maxLength: 1024
    VpcClassicLinkIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VpcId"
          - xml:
              name: VpcId
    DescribeVpcClassicLinkDnsSupportRequest:
      type: object
      title: DescribeVpcClassicLinkDnsSupportRequest
      properties:
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeVpcClassicLinkDnsSupportMaxResults"
            - xml:
                name: maxResults
              description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/DescribeVpcClassicLinkDnsSupportNextToken"
            - xml:
                name: nextToken
              description: The token for the next page of results.
        VpcIds:
          allOf:
            - $ref: "#/components/schemas/VpcClassicLinkIdList"
            - description: One or more VPC IDs.
    DescribeVpcClassicLinkRequest:
      type: object
      title: DescribeVpcClassicLinkRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>is-classic-link-enabled</code> - Whether the VPC is enabled for ClassicLink (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        VpcIds:
          allOf:
            - $ref: "#/components/schemas/VpcClassicLinkIdList"
            - xml:
                name: VpcId
              description: One or more VPCs for which you want to describe the ClassicLink status.
    VpcClassicLinkList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VpcClassicLink"
          - xml:
              name: item
    DescribeVpcEndpointConnectionNotificationsRequest:
      type: object
      title: DescribeVpcEndpointConnectionNotificationsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ConnectionNotificationId:
          allOf:
            - $ref: "#/components/schemas/ConnectionNotificationId"
            - description: The ID of the notification.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>connection-notification-arn</code> - The ARN of the SNS topic for the notification.</p> </li> <li> <p> <code>connection-notification-id</code> - The ID of the notification.</p> </li> <li> <p> <code>connection-notification-state</code> - The state of the notification (<code>Enabled</code> | <code>Disabled</code>).</p> </li> <li> <p> <code>connection-notification-type</code> - The type of notification (<code>Topic</code>).</p> </li> <li> <p> <code>service-id</code> - The ID of the endpoint service.</p> </li> <li> <p> <code>vpc-endpoint-id</code> - The ID of the VPC endpoint.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of results to return in a single call. To retrieve the remaining results, make another request with the returned <code>NextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to request the next page of results.
    DescribeVpcEndpointConnectionsRequest:
      type: object
      title: DescribeVpcEndpointConnectionsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>service-id</code> - The ID of the service.</p> </li> <li> <p> <code>vpc-endpoint-owner</code> - The AWS account number of the owner of the endpoint.</p> </li> <li> <p> <code>vpc-endpoint-state</code> - The state of the endpoint (<code>pendingAcceptance</code> | <code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code> | <code>rejected</code> | <code>failed</code>).</p> </li> <li> <p> <code>vpc-endpoint-id</code> - The ID of the endpoint.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1,000; if <code>MaxResults</code> is given a value larger than 1,000, only 1,000 results are returned.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to retrieve the next page of results.
    VpcEndpointConnectionSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VpcEndpointConnection"
          - xml:
              name: item
    DescribeVpcEndpointServiceConfigurationsRequest:
      type: object
      title: DescribeVpcEndpointServiceConfigurationsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ServiceIds:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointServiceIdList"
            - xml:
                name: ServiceId
              description: The IDs of one or more services.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>service-name</code> - The name of the service.</p> </li> <li> <p> <code>service-id</code> - The ID of the service.</p> </li> <li> <p> <code>service-state</code> - The state of the service (<code>Pending</code> | <code>Available</code> | <code>Deleting</code> | <code>Deleted</code> | <code>Failed</code>). </p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1,000; if <code>MaxResults</code> is given a value larger than 1,000, only 1,000 results are returned.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to retrieve the next page of results.
    ServiceConfigurationSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ServiceConfiguration"
          - xml:
              name: item
    DescribeVpcEndpointServicePermissionsRequest:
      type: object
      required:
        - ServiceId
      title: DescribeVpcEndpointServicePermissionsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ServiceId:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointServiceId"
            - description: The ID of the service.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>principal</code> - The ARN of the principal.</p> </li> <li> <p> <code>principal-type</code> - The principal type (<code>All</code> | <code>Service</code> | <code>OrganizationUnit</code> | <code>Account</code> | <code>User</code> | <code>Role</code>).</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of results to return for the request in a single page. The remaining results of the initial request can be seen by sending another request with the returned <code>NextToken</code> value. This value can be between 5 and 1,000; if <code>MaxResults</code> is given a value larger than 1,000, only 1,000 results are returned.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to retrieve the next page of results.
    DescribeVpcEndpointServicesRequest:
      type: object
      title: DescribeVpcEndpointServicesRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ServiceNames:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: ServiceName
              description: One or more service names.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>service-name</code> - The name of the service.</p> </li> <li> <p> <code>service-type</code> - The type of service (<code>Interface</code> | <code>Gateway</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p> <p>Constraint: If the value is greater than 1,000, we return only 1,000 items.</p>"
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of items to return. (You received this token from a prior call.)
      description: Contains the parameters for DescribeVpcEndpointServices.
    ServiceDetailSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ServiceDetail"
          - xml:
              name: item
    DescribeVpcEndpointsRequest:
      type: object
      title: DescribeVpcEndpointsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        VpcEndpointIds:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointIdList"
            - xml:
                name: VpcEndpointId
              description: One or more endpoint IDs.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>service-name</code> - The name of the service.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC in which the endpoint resides.</p> </li> <li> <p> <code>vpc-endpoint-id</code> - The ID of the endpoint.</p> </li> <li> <p> <code>vpc-endpoint-state</code> - The state of the endpoint (<code>pendingAcceptance</code> | <code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code> | <code>rejected</code> | <code>failed</code>).</p> </li> <li> <p> <code>vpc-endpoint-type</code> - The type of VPC endpoint (<code>Interface</code> | <code>Gateway</code> | <code>GatewayLoadBalancer</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The maximum number of items to return for this request. The request returns a token that you can specify in a subsequent call to get the next set of results.</p> <p>Constraint: If the value is greater than 1,000, we return only 1,000 items.</p>"
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of items to return. (You received this token from a prior call.)
      description: Contains the parameters for DescribeVpcEndpoints.
    VpcEndpointSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VpcEndpoint"
          - xml:
              name: item
    DescribeVpcPeeringConnectionsMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    VpcPeeringConnectionIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VpcPeeringConnectionId"
          - xml:
              name: item
    DescribeVpcPeeringConnectionsRequest:
      type: object
      title: DescribeVpcPeeringConnectionsRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>accepter-vpc-info.cidr-block</code> - The IPv4 CIDR block of the accepter VPC.</p> </li> <li> <p> <code>accepter-vpc-info.owner-id</code> - The ID of the Amazon Web Services account that owns the accepter VPC.</p> </li> <li> <p> <code>accepter-vpc-info.vpc-id</code> - The ID of the accepter VPC.</p> </li> <li> <p> <code>expiration-time</code> - The expiration date and time for the VPC peering connection.</p> </li> <li> <p> <code>requester-vpc-info.cidr-block</code> - The IPv4 CIDR block of the requester's VPC.</p> </li> <li> <p> <code>requester-vpc-info.owner-id</code> - The ID of the Amazon Web Services account that owns the requester VPC.</p> </li> <li> <p> <code>requester-vpc-info.vpc-id</code> - The ID of the requester VPC.</p> </li> <li> <p> <code>status-code</code> - The status of the VPC peering connection (<code>pending-acceptance</code> | <code>failed</code> | <code>expired</code> | <code>provisioning</code> | <code>active</code> | <code>deleting</code> | <code>deleted</code> | <code>rejected</code>).</p> </li> <li> <p> <code>status-message</code> - A message that provides more information about the status of the VPC peering connection, if applicable.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-peering-connection-id</code> - The ID of the VPC peering connection.</p> </li> </ul>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        VpcPeeringConnectionIds:
          allOf:
            - $ref: "#/components/schemas/VpcPeeringConnectionIdList"
            - xml:
                name: VpcPeeringConnectionId
              description: "<p>One or more VPC peering connection IDs.</p> <p>Default: Describes all your VPC peering connections.</p>"
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeVpcPeeringConnectionsMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
    VpcPeeringConnectionList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VpcPeeringConnection"
          - xml:
              name: item
    DescribeVpcsMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    VpcIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VpcId"
          - xml:
              name: VpcId
    DescribeVpcsRequest:
      type: object
      title: DescribeVpcsRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>cidr</code> - The primary IPv4 CIDR block of the VPC. The CIDR block you specify must exactly match the VPC's CIDR block for information to be returned for the VPC. Must contain the slash followed by one or two digits (for example, <code>/28</code>).</p> </li> <li> <p> <code>cidr-block-association.cidr-block</code> - An IPv4 CIDR block associated with the VPC.</p> </li> <li> <p> <code>cidr-block-association.association-id</code> - The association ID for an IPv4 CIDR block associated with the VPC.</p> </li> <li> <p> <code>cidr-block-association.state</code> - The state of an IPv4 CIDR block associated with the VPC.</p> </li> <li> <p> <code>dhcp-options-id</code> - The ID of a set of DHCP options.</p> </li> <li> <p> <code>ipv6-cidr-block-association.ipv6-cidr-block</code> - An IPv6 CIDR block associated with the VPC.</p> </li> <li> <p> <code>ipv6-cidr-block-association.ipv6-pool</code> - The ID of the IPv6 address pool from which the IPv6 CIDR block is allocated.</p> </li> <li> <p> <code>ipv6-cidr-block-association.association-id</code> - The association ID for an IPv6 CIDR block associated with the VPC.</p> </li> <li> <p> <code>ipv6-cidr-block-association.state</code> - The state of an IPv6 CIDR block associated with the VPC.</p> </li> <li> <p> <code>is-default</code> - Indicates whether the VPC is the default VPC.</p> </li> <li> <p> <code>owner-id</code> - The ID of the Amazon Web Services account that owns the VPC.</p> </li> <li> <p> <code>state</code> - The state of the VPC (<code>pending</code> | <code>available</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>vpc-id</code> - The ID of the VPC.</p> </li> </ul>
        VpcIds:
          allOf:
            - $ref: "#/components/schemas/VpcIdStringList"
            - xml:
                name: VpcId
              description: "<p>One or more VPC IDs.</p> <p>Default: Describes all your VPCs.</p>"
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/DescribeVpcsMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
    VpcList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Vpc"
          - xml:
              name: item
    VpnConnectionIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VpnConnectionId"
          - xml:
              name: VpnConnectionId
    DescribeVpnConnectionsRequest:
      type: object
      title: DescribeVpnConnectionsRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>customer-gateway-configuration</code> - The configuration information for the customer gateway.</p> </li> <li> <p> <code>customer-gateway-id</code> - The ID of a customer gateway associated with the VPN connection.</p> </li> <li> <p> <code>state</code> - The state of the VPN connection (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>option.static-routes-only</code> - Indicates whether the connection has static routes only. Used for devices that do not support Border Gateway Protocol (BGP).</p> </li> <li> <p> <code>route.destination-cidr-block</code> - The destination CIDR block. This corresponds to the subnet used in a customer data center.</p> </li> <li> <p> <code>bgp-asn</code> - The BGP Autonomous System Number (ASN) associated with a BGP device.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>type</code> - The type of VPN connection. Currently the only supported type is <code>ipsec.1</code>.</p> </li> <li> <p> <code>vpn-connection-id</code> - The ID of the VPN connection.</p> </li> <li> <p> <code>vpn-gateway-id</code> - The ID of a virtual private gateway associated with the VPN connection.</p> </li> <li> <p> <code>transit-gateway-id</code> - The ID of a transit gateway associated with the VPN connection.</p> </li> </ul>
        VpnConnectionIds:
          allOf:
            - $ref: "#/components/schemas/VpnConnectionIdStringList"
            - xml:
                name: VpnConnectionId
              description: "<p>One or more VPN connection IDs.</p> <p>Default: Describes your VPN connections.</p>"
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for DescribeVpnConnections.
    VpnConnectionList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VpnConnection"
          - xml:
              name: item
    VpnGatewayIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VpnGatewayId"
          - xml:
              name: VpnGatewayId
    DescribeVpnGatewaysRequest:
      type: object
      title: DescribeVpnGatewaysRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>amazon-side-asn</code> - The Autonomous System Number (ASN) for the Amazon side of the gateway.</p> </li> <li> <p> <code>attachment.state</code> - The current state of the attachment between the gateway and the VPC (<code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code>).</p> </li> <li> <p> <code>attachment.vpc-id</code> - The ID of an attached VPC.</p> </li> <li> <p> <code>availability-zone</code> - The Availability Zone for the virtual private gateway (if applicable).</p> </li> <li> <p> <code>state</code> - The state of the virtual private gateway (<code>pending</code> | <code>available</code> | <code>deleting</code> | <code>deleted</code>).</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> <li> <p> <code>type</code> - The type of virtual private gateway. Currently the only supported type is <code>ipsec.1</code>.</p> </li> <li> <p> <code>vpn-gateway-id</code> - The ID of the virtual private gateway.</p> </li> </ul>
        VpnGatewayIds:
          allOf:
            - $ref: "#/components/schemas/VpnGatewayIdStringList"
            - xml:
                name: VpnGatewayId
              description: "<p>One or more virtual private gateway IDs.</p> <p>Default: Describes all your virtual private gateways.</p>"
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for DescribeVpnGateways.
    VpnGatewayList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VpnGateway"
          - xml:
              name: item
    DetachClassicLinkVpcRequest:
      type: object
      required:
        - InstanceId
        - VpcId
      title: DetachClassicLinkVpcRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - xml:
                name: instanceId
              description: The ID of the instance to unlink from the VPC.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - xml:
                name: vpcId
              description: The ID of the VPC to which the instance is linked.
    DetachInternetGatewayRequest:
      type: object
      required:
        - InternetGatewayId
        - VpcId
      title: DetachInternetGatewayRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InternetGatewayId:
          allOf:
            - $ref: "#/components/schemas/InternetGatewayId"
            - xml:
                name: internetGatewayId
              description: The ID of the internet gateway.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - xml:
                name: vpcId
              description: The ID of the VPC.
    DetachNetworkInterfaceRequest:
      type: object
      required:
        - AttachmentId
      title: DetachNetworkInterfaceRequest
      properties:
        AttachmentId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceAttachmentId"
            - xml:
                name: attachmentId
              description: The ID of the attachment.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Force:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: force
              description: <p>Specifies whether to force a detachment.</p> <note> <ul> <li> <p>Use the <code>Force</code> parameter only as a last resort to detach a network interface from a failed instance. </p> </li> <li> <p>If you use the <code>Force</code> parameter to detach a network interface, you might not be able to attach a different network interface to the same index on the instance without first stopping and starting the instance.</p> </li> <li> <p>If you force the detachment of a network interface, the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">instance metadata</a> might not get updated. This means that the attributes associated with the detached network interface might still be visible. The instance metadata will get updated when you stop and start the instance.</p> </li> </ul> </note>
      description: Contains the parameters for DetachNetworkInterface.
    DetachVolumeRequest:
      type: object
      required:
        - VolumeId
      title: DetachVolumeRequest
      properties:
        Device:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The device name.
        Force:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Forces detachment if the previous detachment attempt did not occur cleanly (for example, logging into an instance, unmounting the volume, and detaching normally). This option can lead to data loss or a corrupted file system. Use this option only as a last resort to detach a volume from a failed instance. The instance won't have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - description: The ID of the instance. If you are detaching a Multi-Attach enabled volume, you must specify an instance ID.
        VolumeId:
          allOf:
            - $ref: "#/components/schemas/VolumeId"
            - description: The ID of the volume.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DetachVpnGatewayRequest:
      type: object
      required:
        - VpcId
        - VpnGatewayId
      title: DetachVpnGatewayRequest
      properties:
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - description: The ID of the VPC.
        VpnGatewayId:
          allOf:
            - $ref: "#/components/schemas/VpnGatewayId"
            - description: The ID of the virtual private gateway.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for DetachVpnGateway.
    DeviceType:
      type: string
      enum:
        - ebs
        - instance-store
    DhcpConfigurationValueList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/AttributeValue"
          - xml:
              name: item
    DhcpConfiguration:
      type: object
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: key
              description: The name of a DHCP option.
        Values:
          allOf:
            - $ref: "#/components/schemas/DhcpConfigurationValueList"
            - xml:
                name: valueSet
              description: One or more values for the DHCP option.
      description: Describes a DHCP configuration option.
    DhcpConfigurationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/DhcpConfiguration"
          - xml:
              name: item
    DisableEbsEncryptionByDefaultRequest:
      type: object
      title: DisableEbsEncryptionByDefaultRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DisableFastSnapshotRestoreStateErrorSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/DisableFastSnapshotRestoreStateErrorItem"
          - xml:
              name: item
    DisableFastSnapshotRestoreErrorItem:
      type: object
      properties:
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: snapshotId
              description: The ID of the snapshot.
        FastSnapshotRestoreStateErrors:
          allOf:
            - $ref: "#/components/schemas/DisableFastSnapshotRestoreStateErrorSet"
            - xml:
                name: fastSnapshotRestoreStateErrorSet
              description: The errors.
      description: Contains information about the errors that occurred when disabling fast snapshot restores.
    DisableFastSnapshotRestoreErrorSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/DisableFastSnapshotRestoreErrorItem"
          - xml:
              name: item
    DisableFastSnapshotRestoreStateError:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: code
              description: The error code.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: The error message.
      description: Describes an error that occurred when disabling fast snapshot restores.
    DisableFastSnapshotRestoreStateErrorItem:
      type: object
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone.
        Error:
          allOf:
            - $ref: "#/components/schemas/DisableFastSnapshotRestoreStateError"
            - xml:
                name: error
              description: The error.
      description: Contains information about an error that occurred when disabling fast snapshot restores.
    DisableFastSnapshotRestoreSuccessItem:
      type: object
      properties:
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: snapshotId
              description: The ID of the snapshot.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone.
        State:
          allOf:
            - $ref: "#/components/schemas/FastSnapshotRestoreStateCode"
            - xml:
                name: state
              description: The state of fast snapshot restores for the snapshot.
        StateTransitionReason:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: stateTransitionReason
              description: <p>The reason for the state transition. The possible values are as follows:</p> <ul> <li> <p> <code>Client.UserInitiated</code> - The state successfully transitioned to <code>enabling</code> or <code>disabling</code>.</p> </li> <li> <p> <code>Client.UserInitiated - Lifecycle state transition</code> - The state successfully transitioned to <code>optimizing</code>, <code>enabled</code>, or <code>disabled</code>.</p> </li> </ul>
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the Amazon Web Services account that enabled fast snapshot restores on the snapshot.
        OwnerAlias:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerAlias
              description: The Amazon Web Services owner alias that enabled fast snapshot restores on the snapshot. This is intended for future use.
        EnablingTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: enablingTime
              description: The time at which fast snapshot restores entered the <code>enabling</code> state.
        OptimizingTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: optimizingTime
              description: The time at which fast snapshot restores entered the <code>optimizing</code> state.
        EnabledTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: enabledTime
              description: The time at which fast snapshot restores entered the <code>enabled</code> state.
        DisablingTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: disablingTime
              description: The time at which fast snapshot restores entered the <code>disabling</code> state.
        DisabledTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: disabledTime
              description: The time at which fast snapshot restores entered the <code>disabled</code> state.
      description: Describes fast snapshot restores that were successfully disabled.
    DisableFastSnapshotRestoreSuccessSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/DisableFastSnapshotRestoreSuccessItem"
          - xml:
              name: item
    DisableFastSnapshotRestoresRequest:
      type: object
      required:
        - AvailabilityZones
        - SourceSnapshotIds
      title: DisableFastSnapshotRestoresRequest
      properties:
        AvailabilityZones:
          allOf:
            - $ref: "#/components/schemas/AvailabilityZoneStringList"
            - xml:
                name: AvailabilityZone
              description: One or more Availability Zones. For example, <code>us-east-2a</code>.
        SourceSnapshotIds:
          allOf:
            - $ref: "#/components/schemas/SnapshotIdStringList"
            - xml:
                name: SourceSnapshotId
              description: The IDs of one or more snapshots. For example, <code>snap-1234567890abcdef0</code>.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DisableImageDeprecationRequest:
      type: object
      required:
        - ImageId
      title: DisableImageDeprecationRequest
      properties:
        ImageId:
          allOf:
            - $ref: "#/components/schemas/ImageId"
            - description: The ID of the AMI.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DisableSerialConsoleAccessRequest:
      type: object
      title: DisableSerialConsoleAccessRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DisableTransitGatewayRouteTablePropagationRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
        - TransitGatewayAttachmentId
      title: DisableTransitGatewayRouteTablePropagationRequest
      properties:
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableId"
            - description: The ID of the propagation route table.
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the attachment.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayPropagation:
      type: object
      properties:
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - xml:
                name: transitGatewayAttachmentId
              description: The ID of the attachment.
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resourceId
              description: The ID of the resource.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentResourceType"
            - xml:
                name: resourceType
              description: The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated.
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayRouteTableId
              description: The ID of the transit gateway route table.
        State:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayPropagationState"
            - xml:
                name: state
              description: The state.
      description: Describes route propagation.
    DisableVgwRoutePropagationRequest:
      type: object
      required:
        - GatewayId
        - RouteTableId
      title: DisableVgwRoutePropagationRequest
      properties:
        GatewayId:
          allOf:
            - $ref: "#/components/schemas/VpnGatewayId"
            - description: The ID of the virtual private gateway.
        RouteTableId:
          allOf:
            - $ref: "#/components/schemas/RouteTableId"
            - description: The ID of the route table.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for DisableVgwRoutePropagation.
    DisableVpcClassicLinkDnsSupportRequest:
      type: object
      title: DisableVpcClassicLinkDnsSupportRequest
      properties:
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - description: The ID of the VPC.
    DisableVpcClassicLinkRequest:
      type: object
      required:
        - VpcId
      title: DisableVpcClassicLinkRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - xml:
                name: vpcId
              description: The ID of the VPC.
    ElasticIpAssociationId:
      type: string
    DisassociateAddressRequest:
      type: object
      title: DisassociateAddressRequest
      properties:
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/ElasticIpAssociationId"
            - description: "[EC2-VPC] The association ID. Required for EC2-VPC."
        PublicIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "[EC2-Classic] The Elastic IP address. Required for EC2-Classic."
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DisassociateClientVpnTargetNetworkRequest:
      type: object
      required:
        - ClientVpnEndpointId
        - AssociationId
      title: DisassociateClientVpnTargetNetworkRequest
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointId"
            - description: The ID of the Client VPN endpoint from which to disassociate the target network.
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/ClientVpnAssociationId"
            - description: The ID of the target network association.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DisassociateEnclaveCertificateIamRoleRequest:
      type: object
      title: DisassociateEnclaveCertificateIamRoleRequest
      properties:
        CertificateArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The ARN of the ACM certificate from which to disassociate the IAM role.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The ARN of the IAM role to disassociate.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DisassociateIamInstanceProfileRequest:
      type: object
      required:
        - AssociationId
      title: DisassociateIamInstanceProfileRequest
      properties:
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/IamInstanceProfileAssociationId"
            - description: The ID of the IAM instance profile association.
    InstanceEventWindowDisassociationRequest:
      type: object
      properties:
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIdList"
            - xml:
                name: InstanceId
              description: The IDs of the instances to disassociate from the event window.
        InstanceTags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: InstanceTag
              description: The instance tags to disassociate from the event window. Any instances associated with the tags will be disassociated from the event window.
        DedicatedHostIds:
          allOf:
            - $ref: "#/components/schemas/DedicatedHostIdList"
            - xml:
                name: DedicatedHostId
              description: The IDs of the Dedicated Hosts to disassociate from the event window.
      description: The targets to disassociate from the specified event window.
    DisassociateInstanceEventWindowRequest:
      type: object
      required:
        - InstanceEventWindowId
        - AssociationTarget
      title: DisassociateInstanceEventWindowRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceEventWindowId:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindowId"
            - description: The ID of the event window.
        AssociationTarget:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindowDisassociationRequest"
            - description: One or more targets to disassociate from the specified event window.
    RouteTableAssociationId:
      type: string
    DisassociateRouteTableRequest:
      type: object
      required:
        - AssociationId
      title: DisassociateRouteTableRequest
      properties:
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/RouteTableAssociationId"
            - xml:
                name: associationId
              description: The association ID representing the current association between the route table and subnet or gateway.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    SubnetCidrAssociationId:
      type: string
    DisassociateSubnetCidrBlockRequest:
      type: object
      required:
        - AssociationId
      title: DisassociateSubnetCidrBlockRequest
      properties:
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/SubnetCidrAssociationId"
            - xml:
                name: associationId
              description: The association ID for the CIDR block.
    DisassociateTransitGatewayMulticastDomainRequest:
      type: object
      title: DisassociateTransitGatewayMulticastDomainRequest
      properties:
        TransitGatewayMulticastDomainId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomainId"
            - description: The ID of the transit gateway multicast domain.
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the attachment.
        SubnetIds:
          allOf:
            - $ref: "#/components/schemas/TransitGatewaySubnetIdList"
            - description: The IDs of the subnets;
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DisassociateTransitGatewayRouteTableRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
        - TransitGatewayAttachmentId
      title: DisassociateTransitGatewayRouteTableRequest
      properties:
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableId"
            - description: The ID of the transit gateway route table.
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the attachment.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    DisassociateTrunkInterfaceRequest:
      type: object
      required:
        - AssociationId
      title: DisassociateTrunkInterfaceRequest
      properties:
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/TrunkInterfaceAssociationId"
            - description: The ID of the association
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    VpcCidrAssociationId:
      type: string
    DisassociateVpcCidrBlockRequest:
      type: object
      required:
        - AssociationId
      title: DisassociateVpcCidrBlockRequest
      properties:
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/VpcCidrAssociationId"
            - xml:
                name: associationId
              description: The association ID for the CIDR block.
    DiskCount:
      type: integer
    DiskImageDetail:
      type: object
      required:
        - Bytes
        - Format
        - ImportManifestUrl
      properties:
        Bytes:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: bytes
              description: The size of the disk image, in GiB.
        Format:
          allOf:
            - $ref: "#/components/schemas/DiskImageFormat"
            - xml:
                name: format
              description: The disk image format.
        ImportManifestUrl:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: importManifestUrl
              description: <p>A presigned URL for the import manifest stored in Amazon S3 and presented here as an Amazon S3 presigned URL. For information about creating a presigned URL for an Amazon S3 object, read the "Query String Request Authentication Alternative" section of the <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">Authenticating REST Requests</a> topic in the <i>Amazon Simple Storage Service Developer Guide</i>.</p> <p>For information about the import manifest referenced by this API action, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>
      description: Describes a disk image.
    VolumeDetail:
      type: object
      required:
        - Size
      properties:
        Size:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: size
              description: The size of the volume, in GiB.
      description: Describes an EBS volume.
    DiskImageDescription:
      type: object
      properties:
        Checksum:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: checksum
              description: The checksum computed for the disk image.
        Format:
          allOf:
            - $ref: "#/components/schemas/DiskImageFormat"
            - xml:
                name: format
              description: The disk image format.
        ImportManifestUrl:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: importManifestUrl
              description: <p>A presigned URL for the import manifest stored in Amazon S3. For information about creating a presigned URL for an Amazon S3 object, read the "Query String Request Authentication Alternative" section of the <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html">Authenticating REST Requests</a> topic in the <i>Amazon Simple Storage Service Developer Guide</i>.</p> <p>For information about the import manifest referenced by this API action, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>
        Size:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: size
              description: The size of the disk image, in GiB.
      description: Describes a disk image.
    DiskImageList:
      type: array
      items:
        $ref: "#/components/schemas/DiskImage"
    DiskImageVolumeDescription:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: id
              description: The volume identifier.
        Size:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: size
              description: The size of the volume, in GiB.
      description: Describes a disk image volume.
    DiskSize:
      type: integer
    DiskType:
      type: string
      enum:
        - hdd
        - ssd
    DiskInfo:
      type: object
      properties:
        SizeInGB:
          allOf:
            - $ref: "#/components/schemas/DiskSize"
            - xml:
                name: sizeInGB
              description: The size of the disk in GB.
        Count:
          allOf:
            - $ref: "#/components/schemas/DiskCount"
            - xml:
                name: count
              description: The number of disks with this configuration.
        Type:
          allOf:
            - $ref: "#/components/schemas/DiskType"
            - xml:
                name: type
              description: The type of disk.
      description: Describes the disk.
    DiskInfoList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/DiskInfo"
          - xml:
              name: item
    DnsEntry:
      type: object
      properties:
        DnsName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: dnsName
              description: The DNS name.
        HostedZoneId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: hostedZoneId
              description: The ID of the private hosted zone.
      description: Describes a DNS entry.
    DnsEntrySet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/DnsEntry"
          - xml:
              name: item
    DnsNameState:
      type: string
      enum:
        - pendingVerification
        - verified
        - failed
    DnsServersOptionsModifyStructure:
      type: object
      properties:
        CustomDnsServers:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - description: The IPv4 address range, in CIDR notation, of the DNS servers to be used. You can specify up to two DNS servers. Ensure that the DNS servers can be reached by the clients. The specified values overwrite the existing values.
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether DNS servers should be used. Specify <code>False</code> to delete the existing DNS servers.
      description: Information about the DNS server to be used.
    EbsEncryptionSupport:
      type: string
      enum:
        - unsupported
        - supported
    EbsOptimizedSupport:
      type: string
      enum:
        - unsupported
        - supported
        - default
    EbsOptimizedInfo:
      type: object
      properties:
        BaselineBandwidthInMbps:
          allOf:
            - $ref: "#/components/schemas/BaselineBandwidthInMbps"
            - xml:
                name: baselineBandwidthInMbps
              description: The baseline bandwidth performance for an EBS-optimized instance type, in Mbps.
        BaselineThroughputInMBps:
          allOf:
            - $ref: "#/components/schemas/BaselineThroughputInMBps"
            - xml:
                name: baselineThroughputInMBps
              description: The baseline throughput performance for an EBS-optimized instance type, in MB/s.
        BaselineIops:
          allOf:
            - $ref: "#/components/schemas/BaselineIops"
            - xml:
                name: baselineIops
              description: The baseline input/output storage operations per seconds for an EBS-optimized instance type.
        MaximumBandwidthInMbps:
          allOf:
            - $ref: "#/components/schemas/MaximumBandwidthInMbps"
            - xml:
                name: maximumBandwidthInMbps
              description: The maximum bandwidth performance for an EBS-optimized instance type, in Mbps.
        MaximumThroughputInMBps:
          allOf:
            - $ref: "#/components/schemas/MaximumThroughputInMBps"
            - xml:
                name: maximumThroughputInMBps
              description: The maximum throughput performance for an EBS-optimized instance type, in MB/s.
        MaximumIops:
          allOf:
            - $ref: "#/components/schemas/MaximumIops"
            - xml:
                name: maximumIops
              description: The maximum input/output storage operations per second for an EBS-optimized instance type.
      description: Describes the optimized EBS performance for supported instance types.
    EbsNvmeSupport:
      type: string
      enum:
        - unsupported
        - supported
        - required
    EbsInfo:
      type: object
      properties:
        EbsOptimizedSupport:
          allOf:
            - $ref: "#/components/schemas/EbsOptimizedSupport"
            - xml:
                name: ebsOptimizedSupport
              description: Indicates whether the instance type is Amazon EBS-optimized. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html">Amazon EBS-optimized instances</a> in <i>Amazon EC2 User Guide</i>.
        EncryptionSupport:
          allOf:
            - $ref: "#/components/schemas/EbsEncryptionSupport"
            - xml:
                name: encryptionSupport
              description: Indicates whether Amazon EBS encryption is supported.
        EbsOptimizedInfo:
          allOf:
            - $ref: "#/components/schemas/EbsOptimizedInfo"
            - xml:
                name: ebsOptimizedInfo
              description: Describes the optimized EBS performance for the instance type.
        NvmeSupport:
          allOf:
            - $ref: "#/components/schemas/EbsNvmeSupport"
            - xml:
                name: nvmeSupport
              description: Indicates whether non-volatile memory express (NVMe) is supported.
      description: Describes the Amazon EBS features supported by the instance type.
    EbsInstanceBlockDevice:
      type: object
      properties:
        AttachTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: attachTime
              description: The time stamp when the attachment initiated.
        DeleteOnTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: deleteOnTermination
              description: Indicates whether the volume is deleted on instance termination.
        Status:
          allOf:
            - $ref: "#/components/schemas/AttachmentStatus"
            - xml:
                name: status
              description: The attachment state.
        VolumeId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: volumeId
              description: The ID of the EBS volume.
      description: Describes a parameter used to set up an EBS volume in a block device mapping.
    EbsInstanceBlockDeviceSpecification:
      type: object
      properties:
        DeleteOnTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: deleteOnTermination
              description: Indicates whether the volume is deleted on instance termination.
        VolumeId:
          allOf:
            - $ref: "#/components/schemas/VolumeId"
            - xml:
                name: volumeId
              description: The ID of the EBS volume.
      description: Describes information used to set up an EBS volume specified in a block device mapping.
    MaximumBandwidthInMbps:
      type: integer
    MaximumThroughputInMBps:
      type: number
      format: double
    MaximumIops:
      type: integer
    MaximumEfaInterfaces:
      type: integer
    EfaInfo:
      type: object
      properties:
        MaximumEfaInterfaces:
          allOf:
            - $ref: "#/components/schemas/MaximumEfaInterfaces"
            - xml:
                name: maximumEfaInterfaces
              description: The maximum number of Elastic Fabric Adapters for the instance type.
      description: Describes the Elastic Fabric Adapters for the instance type.
    EfaSupportedFlag:
      type: boolean
    InternetGatewayAttachmentList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InternetGatewayAttachment"
          - xml:
              name: item
    ElasticGpuAssociation:
      type: object
      properties:
        ElasticGpuId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: elasticGpuId
              description: The ID of the Elastic Graphics accelerator.
        ElasticGpuAssociationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: elasticGpuAssociationId
              description: The ID of the association.
        ElasticGpuAssociationState:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: elasticGpuAssociationState
              description: The state of the association between the instance and the Elastic Graphics accelerator.
        ElasticGpuAssociationTime:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: elasticGpuAssociationTime
              description: The time the Elastic Graphics accelerator was associated with the instance.
      description: Describes the association between an instance and an Elastic Graphics accelerator.
    ElasticGpuAssociationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ElasticGpuAssociation"
          - xml:
              name: item
    ElasticGpuStatus:
      type: string
      enum:
        - OK
        - IMPAIRED
    ElasticGpuHealth:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/ElasticGpuStatus"
            - xml:
                name: status
              description: The health status.
      description: Describes the status of an Elastic Graphics accelerator.
    ElasticGpus:
      type: object
      properties:
        ElasticGpuId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: elasticGpuId
              description: The ID of the Elastic Graphics accelerator.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone in the which the Elastic Graphics accelerator resides.
        ElasticGpuType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: elasticGpuType
              description: The type of Elastic Graphics accelerator.
        ElasticGpuHealth:
          allOf:
            - $ref: "#/components/schemas/ElasticGpuHealth"
            - xml:
                name: elasticGpuHealth
              description: The status of the Elastic Graphics accelerator.
        ElasticGpuState:
          allOf:
            - $ref: "#/components/schemas/ElasticGpuState"
            - xml:
                name: elasticGpuState
              description: The state of the Elastic Graphics accelerator.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance to which the Elastic Graphics accelerator is attached.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags assigned to the Elastic Graphics accelerator.
      description: Describes an Elastic Graphics accelerator.
    ElasticGpuSpecificationResponse:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: type
              description: The elastic GPU type.
      description: Describes an elastic GPU.
    ElasticGpuSpecificationResponseList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ElasticGpuSpecificationResponse"
          - xml:
              name: item
    ElasticGpuSpecifications:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ElasticGpuSpecification"
          - xml:
              name: item
    ElasticGpuState:
      type: string
      enum:
        - ATTACHED
    ElasticInferenceAcceleratorCount:
      type: integer
      minimum: 1
    ElasticInferenceAcceleratorAssociation:
      type: object
      properties:
        ElasticInferenceAcceleratorArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: elasticInferenceAcceleratorArn
              description: " The Amazon Resource Name (ARN) of the elastic inference accelerator. "
        ElasticInferenceAcceleratorAssociationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: elasticInferenceAcceleratorAssociationId
              description: " The ID of the association. "
        ElasticInferenceAcceleratorAssociationState:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: elasticInferenceAcceleratorAssociationState
              description: " The state of the elastic inference accelerator. "
        ElasticInferenceAcceleratorAssociationTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: elasticInferenceAcceleratorAssociationTime
              description: " The time at which the elastic inference accelerator is associated with an instance. "
      description: " Describes the association between an instance and an elastic inference accelerator. "
    ElasticInferenceAcceleratorAssociationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ElasticInferenceAcceleratorAssociation"
          - xml:
              name: item
    ElasticInferenceAccelerators:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ElasticInferenceAccelerator"
          - xml:
              name: item
    EnaSupport:
      type: string
      enum:
        - unsupported
        - supported
        - required
    EnableEbsEncryptionByDefaultRequest:
      type: object
      title: EnableEbsEncryptionByDefaultRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    EnableFastSnapshotRestoreStateErrorSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/EnableFastSnapshotRestoreStateErrorItem"
          - xml:
              name: item
    EnableFastSnapshotRestoreErrorItem:
      type: object
      properties:
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: snapshotId
              description: The ID of the snapshot.
        FastSnapshotRestoreStateErrors:
          allOf:
            - $ref: "#/components/schemas/EnableFastSnapshotRestoreStateErrorSet"
            - xml:
                name: fastSnapshotRestoreStateErrorSet
              description: The errors.
      description: Contains information about the errors that occurred when enabling fast snapshot restores.
    EnableFastSnapshotRestoreErrorSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/EnableFastSnapshotRestoreErrorItem"
          - xml:
              name: item
    EnableFastSnapshotRestoreStateError:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: code
              description: The error code.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: The error message.
      description: Describes an error that occurred when enabling fast snapshot restores.
    EnableFastSnapshotRestoreStateErrorItem:
      type: object
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone.
        Error:
          allOf:
            - $ref: "#/components/schemas/EnableFastSnapshotRestoreStateError"
            - xml:
                name: error
              description: The error.
      description: Contains information about an error that occurred when enabling fast snapshot restores.
    EnableFastSnapshotRestoreSuccessItem:
      type: object
      properties:
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: snapshotId
              description: The ID of the snapshot.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone.
        State:
          allOf:
            - $ref: "#/components/schemas/FastSnapshotRestoreStateCode"
            - xml:
                name: state
              description: The state of fast snapshot restores.
        StateTransitionReason:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: stateTransitionReason
              description: <p>The reason for the state transition. The possible values are as follows:</p> <ul> <li> <p> <code>Client.UserInitiated</code> - The state successfully transitioned to <code>enabling</code> or <code>disabling</code>.</p> </li> <li> <p> <code>Client.UserInitiated - Lifecycle state transition</code> - The state successfully transitioned to <code>optimizing</code>, <code>enabled</code>, or <code>disabled</code>.</p> </li> </ul>
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the Amazon Web Services account that enabled fast snapshot restores on the snapshot.
        OwnerAlias:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerAlias
              description: The Amazon Web Services owner alias that enabled fast snapshot restores on the snapshot. This is intended for future use.
        EnablingTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: enablingTime
              description: The time at which fast snapshot restores entered the <code>enabling</code> state.
        OptimizingTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: optimizingTime
              description: The time at which fast snapshot restores entered the <code>optimizing</code> state.
        EnabledTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: enabledTime
              description: The time at which fast snapshot restores entered the <code>enabled</code> state.
        DisablingTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: disablingTime
              description: The time at which fast snapshot restores entered the <code>disabling</code> state.
        DisabledTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: disabledTime
              description: The time at which fast snapshot restores entered the <code>disabled</code> state.
      description: Describes fast snapshot restores that were successfully enabled.
    EnableFastSnapshotRestoreSuccessSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/EnableFastSnapshotRestoreSuccessItem"
          - xml:
              name: item
    EnableFastSnapshotRestoresRequest:
      type: object
      required:
        - AvailabilityZones
        - SourceSnapshotIds
      title: EnableFastSnapshotRestoresRequest
      properties:
        AvailabilityZones:
          allOf:
            - $ref: "#/components/schemas/AvailabilityZoneStringList"
            - xml:
                name: AvailabilityZone
              description: One or more Availability Zones. For example, <code>us-east-2a</code>.
        SourceSnapshotIds:
          allOf:
            - $ref: "#/components/schemas/SnapshotIdStringList"
            - xml:
                name: SourceSnapshotId
              description: The IDs of one or more snapshots. For example, <code>snap-1234567890abcdef0</code>. You can specify a snapshot that was shared with you from another Amazon Web Services account.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    EnableImageDeprecationRequest:
      type: object
      required:
        - ImageId
        - DeprecateAt
      title: EnableImageDeprecationRequest
      properties:
        ImageId:
          allOf:
            - $ref: "#/components/schemas/ImageId"
            - description: The ID of the AMI.
        DeprecateAt:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - description: "<p>The date and time to deprecate the AMI, in UTC, in the following format: <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z. If you specify a value for seconds, Amazon EC2 rounds the seconds to the nearest minute.</p> <p>You can’t specify a date in the past. The upper limit for <code>DeprecateAt</code> is 10 years from now.</p>"
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    EnableSerialConsoleAccessRequest:
      type: object
      title: EnableSerialConsoleAccessRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    EnableTransitGatewayRouteTablePropagationRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
        - TransitGatewayAttachmentId
      title: EnableTransitGatewayRouteTablePropagationRequest
      properties:
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableId"
            - description: The ID of the propagation route table.
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the attachment.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    EnableVgwRoutePropagationRequest:
      type: object
      required:
        - GatewayId
        - RouteTableId
      title: EnableVgwRoutePropagationRequest
      properties:
        GatewayId:
          allOf:
            - $ref: "#/components/schemas/VpnGatewayId"
            - description: "The ID of the virtual private gateway that is attached to a VPC. The virtual private gateway must be attached to the same VPC that the routing tables are associated with. "
        RouteTableId:
          allOf:
            - $ref: "#/components/schemas/RouteTableId"
            - description: "The ID of the route table. The routing table must be associated with the same VPC that the virtual private gateway is attached to. "
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for EnableVgwRoutePropagation.
    EnableVolumeIORequest:
      type: object
      required:
        - VolumeId
      title: EnableVolumeIORequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        VolumeId:
          allOf:
            - $ref: "#/components/schemas/VolumeId"
            - xml:
                name: volumeId
              description: The ID of the volume.
    EnableVpcClassicLinkDnsSupportRequest:
      type: object
      title: EnableVpcClassicLinkDnsSupportRequest
      properties:
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - description: The ID of the VPC.
    EnableVpcClassicLinkRequest:
      type: object
      required:
        - VpcId
      title: EnableVpcClassicLinkRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - xml:
                name: vpcId
              description: The ID of the VPC.
    EnclaveOptions:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: enabled
              description: If this parameter is set to <code>true</code>, the instance is enabled for Amazon Web Services Nitro Enclaves; otherwise, it is not enabled for Amazon Web Services Nitro Enclaves.
      description: Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.
    EnclaveOptionsRequest:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: To enable the instance for Amazon Web Services Nitro Enclaves, set this parameter to <code>true</code>.
      description: Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves. For more information, see <a href="https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html"> What is Amazon Web Services Nitro Enclaves?</a> in the <i>Amazon Web Services Nitro Enclaves User Guide</i>.
    EncryptionInTransitSupported:
      type: boolean
    EphemeralNvmeSupport:
      type: string
      enum:
        - unsupported
        - supported
        - required
    ValidationError:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: code
              description: The error code that indicates why the parameter or parameter combination is not valid. For more information about error codes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html.html">Error Codes</a>.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: The error message that describes why the parameter or parameter combination is not valid. For more information about error messages, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html.html">Error Codes</a>.
      description: The error code and error message that is returned for a parameter or parameter combination that is not valid when a new launch template or new version of a launch template is created.
    ErrorSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ValidationError"
          - xml:
              name: item
    EventCode:
      type: string
      enum:
        - instance-reboot
        - system-reboot
        - system-maintenance
        - instance-retirement
        - instance-stop
    EventInformation:
      type: object
      properties:
        EventDescription:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: eventDescription
              description: The description of the event.
        EventSubType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: eventSubType
              description: <p>The event.</p> <p>The following are the <code>error</code> events:</p> <ul> <li> <p> <code>iamFleetRoleInvalid</code> - The EC2 Fleet or Spot Fleet did not have the required permissions either to launch or terminate an instance.</p> </li> <li> <p> <code>spotFleetRequestConfigurationInvalid</code> - The configuration is not valid. For more information, see the description of the event.</p> </li> <li> <p> <code>spotInstanceCountLimitExceeded</code> - You've reached the limit on the number of Spot Instances that you can launch.</p> </li> </ul> <p>The following are the <code>fleetRequestChange</code> events:</p> <ul> <li> <p> <code>active</code> - The EC2 Fleet or Spot Fleet request has been validated and Amazon EC2 is attempting to maintain the target number of running Spot Instances.</p> </li> <li> <p> <code>cancelled</code> - The EC2 Fleet or Spot Fleet request is canceled and has no running Spot Instances. The EC2 Fleet or Spot Fleet will be deleted two days after its instances were terminated.</p> </li> <li> <p> <code>cancelled_running</code> - The EC2 Fleet or Spot Fleet request is canceled and does not launch additional Spot Instances. Existing Spot Instances continue to run until they are interrupted or terminated.</p> </li> <li> <p> <code>cancelled_terminating</code> - The EC2 Fleet or Spot Fleet request is canceled and its Spot Instances are terminating.</p> </li> <li> <p> <code>expired</code> - The EC2 Fleet or Spot Fleet request has expired. A subsequent event indicates that the instances were terminated, if the request was created with <code>TerminateInstancesWithExpiration</code> set.</p> </li> <li> <p> <code>modify_in_progress</code> - A request to modify the EC2 Fleet or Spot Fleet request was accepted and is in progress.</p> </li> <li> <p> <code>modify_succeeded</code> - The EC2 Fleet or Spot Fleet request was modified.</p> </li> <li> <p> <code>submitted</code> - The EC2 Fleet or Spot Fleet request is being evaluated and Amazon EC2 is preparing to launch the target number of Spot Instances.</p> </li> </ul> <p>The following are the <code>instanceChange</code> events:</p> <ul> <li> <p> <code>launched</code> - A request was fulfilled and a new instance was launched.</p> </li> <li> <p> <code>terminated</code> - An instance was terminated by the user.</p> </li> </ul> <p>The following are the <code>Information</code> events:</p> <ul> <li> <p> <code>launchSpecTemporarilyBlacklisted</code> - The configuration is not valid and several attempts to launch instances have failed. For more information, see the description of the event.</p> </li> <li> <p> <code>launchSpecUnusable</code> - The price in a launch specification is not valid because it is below the Spot price or the Spot price is above the On-Demand price.</p> </li> <li> <p> <code>fleetProgressHalted</code> - The price in every launch specification is not valid. A launch specification might become valid if the Spot price changes.</p> </li> </ul>
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance. This information is available only for <code>instanceChange</code> events.
      description: Describes an EC2 Fleet or Spot Fleet event.
    StringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: item
    Explanation:
      type: object
      properties:
        Acl:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: acl
              description: The network ACL.
        AclRule:
          allOf:
            - $ref: "#/components/schemas/AnalysisAclRule"
            - xml:
                name: aclRule
              description: The network ACL rule.
        Address:
          allOf:
            - $ref: "#/components/schemas/IpAddress"
            - xml:
                name: address
              description: The IPv4 address, in CIDR notation.
        Addresses:
          allOf:
            - $ref: "#/components/schemas/IpAddressList"
            - xml:
                name: addressSet
              description: The IPv4 addresses, in CIDR notation.
        AttachedTo:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: attachedTo
              description: The resource to which the component is attached.
        AvailabilityZones:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: availabilityZoneSet
              description: The Availability Zones.
        Cidrs:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: cidrSet
              description: The CIDR ranges.
        Component:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: component
              description: The component.
        CustomerGateway:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: customerGateway
              description: The customer gateway.
        Destination:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: destination
              description: The destination.
        DestinationVpc:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: destinationVpc
              description: The destination VPC.
        Direction:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: direction
              description: <p>The direction. The following are possible values:</p> <ul> <li> <p>egress</p> </li> <li> <p>ingress</p> </li> </ul>
        ExplanationCode:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: explanationCode
              description: The explanation code.
        IngressRouteTable:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: ingressRouteTable
              description: The route table.
        InternetGateway:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: internetGateway
              description: The internet gateway.
        LoadBalancerArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - xml:
                name: loadBalancerArn
              description: The Amazon Resource Name (ARN) of the load balancer.
        ClassicLoadBalancerListener:
          allOf:
            - $ref: "#/components/schemas/AnalysisLoadBalancerListener"
            - xml:
                name: classicLoadBalancerListener
              description: The listener for a Classic Load Balancer.
        LoadBalancerListenerPort:
          allOf:
            - $ref: "#/components/schemas/Port"
            - xml:
                name: loadBalancerListenerPort
              description: The listener port of the load balancer.
        LoadBalancerTarget:
          allOf:
            - $ref: "#/components/schemas/AnalysisLoadBalancerTarget"
            - xml:
                name: loadBalancerTarget
              description: The target.
        LoadBalancerTargetGroup:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: loadBalancerTargetGroup
              description: The target group.
        LoadBalancerTargetGroups:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponentList"
            - xml:
                name: loadBalancerTargetGroupSet
              description: The target groups.
        LoadBalancerTargetPort:
          allOf:
            - $ref: "#/components/schemas/Port"
            - xml:
                name: loadBalancerTargetPort
              description: The target port.
        ElasticLoadBalancerListener:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: elasticLoadBalancerListener
              description: The load balancer listener.
        MissingComponent:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: missingComponent
              description: The missing component.
        NatGateway:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: natGateway
              description: The NAT gateway.
        NetworkInterface:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: networkInterface
              description: The network interface.
        PacketField:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: packetField
              description: The packet field.
        VpcPeeringConnection:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: vpcPeeringConnection
              description: The VPC peering connection.
        Port:
          allOf:
            - $ref: "#/components/schemas/Port"
            - xml:
                name: port
              description: The port.
        PortRanges:
          allOf:
            - $ref: "#/components/schemas/PortRangeList"
            - xml:
                name: portRangeSet
              description: The port ranges.
        PrefixList:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: prefixList
              description: The prefix list.
        Protocols:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - xml:
                name: protocolSet
              description: The protocols.
        RouteTableRoute:
          allOf:
            - $ref: "#/components/schemas/AnalysisRouteTableRoute"
            - xml:
                name: routeTableRoute
              description: The route table route.
        RouteTable:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: routeTable
              description: The route table.
        SecurityGroup:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: securityGroup
              description: The security group.
        SecurityGroupRule:
          allOf:
            - $ref: "#/components/schemas/AnalysisSecurityGroupRule"
            - xml:
                name: securityGroupRule
              description: The security group rule.
        SecurityGroups:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponentList"
            - xml:
                name: securityGroupSet
              description: The security groups.
        SourceVpc:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: sourceVpc
              description: The source VPC.
        State:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: state
              description: The state.
        Subnet:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: subnet
              description: The subnet.
        SubnetRouteTable:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: subnetRouteTable
              description: The route table for the subnet.
        Vpc:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: vpc
              description: The component VPC.
        VpcEndpoint:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: vpcEndpoint
              description: The VPC endpoint.
        VpnConnection:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: vpnConnection
              description: The VPN connection.
        VpnGateway:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: vpnGateway
              description: The VPN gateway.
      description: Describes an explanation code for an unreachable path. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/reachability/explanation-codes.html">Reachability Analyzer explanation codes</a>.
    ExplanationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Explanation"
          - xml:
              name: item
    ExportClientVpnClientCertificateRevocationListRequest:
      type: object
      required:
        - ClientVpnEndpointId
      title: ExportClientVpnClientCertificateRevocationListRequest
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointId"
            - description: The ID of the Client VPN endpoint.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ExportClientVpnClientConfigurationRequest:
      type: object
      required:
        - ClientVpnEndpointId
      title: ExportClientVpnClientConfigurationRequest
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointId"
            - description: The ID of the Client VPN endpoint.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ExportTaskS3LocationRequest:
      type: object
      required:
        - S3Bucket
      properties:
        S3Bucket:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The destination Amazon S3 bucket.
        S3Prefix:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The prefix (logical hierarchy) in the bucket.
      description: Describes the destination for an export image task.
    ExportImageRequest:
      type: object
      required:
        - DiskImageFormat
        - ImageId
        - S3ExportLocation
      title: ExportImageRequest
      properties:
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Token to enable idempotency for export image requests.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A description of the image being exported. The maximum length is 255 characters.
        DiskImageFormat:
          allOf:
            - $ref: "#/components/schemas/DiskImageFormat"
            - description: The disk image format.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ImageId:
          allOf:
            - $ref: "#/components/schemas/ImageId"
            - description: The ID of the image.
        S3ExportLocation:
          allOf:
            - $ref: "#/components/schemas/ExportTaskS3LocationRequest"
            - description: Information about the destination Amazon S3 bucket. The bucket must exist and grant WRITE and READ_ACP permissions to the Amazon Web Services account vm-import-export@amazon.com.
        RoleName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the role that grants VM Import/Export permission to export images to your Amazon S3 bucket. If this parameter is not specified, the default role is named 'vmimport'.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the export image task during creation.
    ExportTaskS3Location:
      type: object
      properties:
        S3Bucket:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: s3Bucket
              description: The destination Amazon S3 bucket.
        S3Prefix:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: s3Prefix
              description: The prefix (logical hierarchy) in the bucket.
      description: Describes the destination for an export image task.
    ExportImageTask:
      type: object
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description of the image being exported.
        ExportImageTaskId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: exportImageTaskId
              description: The ID of the export image task.
        ImageId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: imageId
              description: The ID of the image.
        Progress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: progress
              description: The percent complete of the export image task.
        S3ExportLocation:
          allOf:
            - $ref: "#/components/schemas/ExportTaskS3Location"
            - xml:
                name: s3ExportLocation
              description: Information about the destination Amazon S3 bucket.
        Status:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: status
              description: The status of the export image task. The possible values are <code>active</code>, <code>completed</code>, <code>deleting</code>, and <code>deleted</code>.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: statusMessage
              description: The status message for the export image task.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the export image task.
      description: Describes an export image task.
    ExportToS3Task:
      type: object
      properties:
        ContainerFormat:
          allOf:
            - $ref: "#/components/schemas/ContainerFormat"
            - xml:
                name: containerFormat
              description: The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported.
        DiskImageFormat:
          allOf:
            - $ref: "#/components/schemas/DiskImageFormat"
            - xml:
                name: diskImageFormat
              description: The format for the exported image.
        S3Bucket:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: s3Bucket
              description: The Amazon S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACP permissions to the Amazon Web Services account <code>vm-import-export@amazon.com</code>.
        S3Key:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: s3Key
              description: The encryption key for your S3 bucket.
      description: Describes the format and location for the export task.
    InstanceExportDetails:
      type: object
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the resource being exported.
        TargetEnvironment:
          allOf:
            - $ref: "#/components/schemas/ExportEnvironment"
            - xml:
                name: targetEnvironment
              description: The target virtualization environment.
      description: Describes an instance to export.
    ExportTaskState:
      type: string
      enum:
        - active
        - cancelling
        - cancelled
        - completed
    ExportTransitGatewayRoutesRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
        - S3Bucket
      title: ExportTransitGatewayRoutesRequest
      properties:
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableId"
            - description: The ID of the route table.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>attachment.transit-gateway-attachment-id</code> - The id of the transit gateway attachment.</p> </li> <li> <p> <code>attachment.resource-id</code> - The resource id of the transit gateway attachment.</p> </li> <li> <p> <code>route-search.exact-match</code> - The exact match of the specified filter.</p> </li> <li> <p> <code>route-search.longest-prefix-match</code> - The longest prefix that matches the route.</p> </li> <li> <p> <code>route-search.subnet-of-match</code> - The routes with a subnet that match the specified CIDR filter.</p> </li> <li> <p> <code>route-search.supernet-of-match</code> - The routes with a CIDR that encompass the CIDR filter. For example, if you have 10.0.1.0/29 and 10.0.1.0/31 routes in your route table and you specify supernet-of-match as 10.0.1.0/30, then the result returns 10.0.1.0/29.</p> </li> <li> <p> <code>state</code> - The state of the route (<code>active</code> | <code>blackhole</code>).</p> </li> <li> <p> <code>transit-gateway-route-destination-cidr-block</code> - The CIDR range.</p> </li> <li> <p> <code>type</code> - The type of route (<code>propagated</code> | <code>static</code>).</p> </li> </ul>
        S3Bucket:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the S3 bucket.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    FailedQueuedPurchaseDeletion:
      type: object
      properties:
        Error:
          allOf:
            - $ref: "#/components/schemas/DeleteQueuedReservedInstancesError"
            - xml:
                name: error
              description: The error.
        ReservedInstancesId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: reservedInstancesId
              description: The ID of the Reserved Instance.
      description: Describes a Reserved Instance whose queued purchase was not deleted.
    FleetActivityStatus:
      type: string
      enum:
        - error
        - pending_fulfillment
        - pending_termination
        - fulfilled
    FleetLaunchTemplateConfigList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/FleetLaunchTemplateConfig"
          - xml:
              name: item
    TargetCapacitySpecification:
      type: object
      properties:
        TotalTargetCapacity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: totalTargetCapacity
              description: The number of units to request, filled using <code>DefaultTargetCapacityType</code>.
        OnDemandTargetCapacity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: onDemandTargetCapacity
              description: The number of On-Demand units to request. If you specify a target capacity for Spot units, you cannot specify a target capacity for On-Demand units.
        SpotTargetCapacity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: spotTargetCapacity
              description: The maximum number of Spot units to launch. If you specify a target capacity for On-Demand units, you cannot specify a target capacity for Spot units.
        DefaultTargetCapacityType:
          allOf:
            - $ref: "#/components/schemas/DefaultTargetCapacityType"
            - xml:
                name: defaultTargetCapacityType
              description: The default <code>TotalTargetCapacity</code>, which is either <code>Spot</code> or <code>On-Demand</code>.
      description: <p>The number of units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>, you can specify a target capacity of 0 and add capacity later.</p> <p>You can use the On-Demand Instance <code>MaxTotalPrice</code> parameter, the Spot Instance <code>MaxTotalPrice</code>, or both to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, EC2 Fleet will launch instances until it reaches the maximum amount that you're willing to pay. When the maximum amount you're willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity. The <code>MaxTotalPrice</code> parameters are located in <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_OnDemandOptions.html">OnDemandOptions</a> and <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotOptions">SpotOptions</a>.</p>
    SpotOptions:
      type: object
      properties:
        AllocationStrategy:
          allOf:
            - $ref: "#/components/schemas/SpotAllocationStrategy"
            - xml:
                name: allocationStrategy
              description: <p>Indicates how to allocate the target Spot Instance capacity across the Spot Instance pools specified by the EC2 Fleet.</p> <p>If the allocation strategy is <code>lowest-price</code>, EC2 Fleet launches instances from the Spot Instance pools with the lowest price. This is the default allocation strategy.</p> <p>If the allocation strategy is <code>diversified</code>, EC2 Fleet launches instances from all of the Spot Instance pools that you specify.</p> <p>If the allocation strategy is <code>capacity-optimized</code> (recommended), EC2 Fleet launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching. To give certain instance types a higher chance of launching first, use <code>capacity-optimized-prioritized</code>. Set a priority for each instance type by using the <code>Priority</code> parameter for <code>LaunchTemplateOverrides</code>. You can assign the same priority to different <code>LaunchTemplateOverrides</code>. EC2 implements the priorities on a best-effort basis, but optimizes for capacity first. <code>capacity-optimized-prioritized</code> is supported only if your fleet uses a launch template. Note that if the On-Demand <code>AllocationStrategy</code> is set to <code>prioritized</code>, the same priority is applied when fulfilling On-Demand capacity.</p>
        MaintenanceStrategies:
          allOf:
            - $ref: "#/components/schemas/FleetSpotMaintenanceStrategies"
            - xml:
                name: maintenanceStrategies
              description: The strategies for managing your workloads on your Spot Instances that will be interrupted. Currently only the capacity rebalance strategy is available.
        InstanceInterruptionBehavior:
          allOf:
            - $ref: "#/components/schemas/SpotInstanceInterruptionBehavior"
            - xml:
                name: instanceInterruptionBehavior
              description: The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>.
        InstancePoolsToUseCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: instancePoolsToUseCount
              description: <p>The number of Spot pools across which to allocate your target Spot capacity. Valid only when <b>AllocationStrategy</b> is set to <code>lowest-price</code>. EC2 Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.</p> <p>Note that EC2 Fleet attempts to draw Spot Instances from the number of pools that you specify on a best effort basis. If a pool runs out of Spot capacity before fulfilling your target capacity, EC2 Fleet will continue to fulfill your request by drawing from the next cheapest pool. To ensure that your target capacity is met, you might receive Spot Instances from more than the number of pools that you specified. Similarly, if most of the pools have no Spot capacity, you might receive your full target capacity from fewer than the number of pools that you specified.</p>
        SingleInstanceType:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: singleInstanceType
              description: Indicates that the fleet uses a single instance type to launch all Spot Instances in the fleet. Supported only for fleets of type <code>instant</code>.
        SingleAvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: singleAvailabilityZone
              description: Indicates that the fleet launches all Spot Instances into a single Availability Zone. Supported only for fleets of type <code>instant</code>.
        MinTargetCapacity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: minTargetCapacity
              description: The minimum target capacity for Spot Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances.
        MaxTotalPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: maxTotalPrice
              description: The maximum amount per hour for Spot Instances that you're willing to pay.
      description: Describes the configuration of Spot Instances in an EC2 Fleet.
    OnDemandOptions:
      type: object
      properties:
        AllocationStrategy:
          allOf:
            - $ref: "#/components/schemas/FleetOnDemandAllocationStrategy"
            - xml:
                name: allocationStrategy
              description: The order of the launch template overrides to use in fulfilling On-Demand capacity. If you specify <code>lowest-price</code>, EC2 Fleet uses price to determine the order, launching the lowest price first. If you specify <code>prioritized</code>, EC2 Fleet uses the priority that you assigned to each launch template override, launching the highest priority first. If you do not specify a value, EC2 Fleet defaults to <code>lowest-price</code>.
        CapacityReservationOptions:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationOptions"
            - xml:
                name: capacityReservationOptions
              description: The strategy for using unused Capacity Reservations for fulfilling On-Demand capacity. Supported only for fleets of type <code>instant</code>.
        SingleInstanceType:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: singleInstanceType
              description: Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet. Supported only for fleets of type <code>instant</code>.
        SingleAvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: singleAvailabilityZone
              description: Indicates that the fleet launches all On-Demand Instances into a single Availability Zone. Supported only for fleets of type <code>instant</code>.
        MinTargetCapacity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: minTargetCapacity
              description: The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances.
        MaxTotalPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: maxTotalPrice
              description: The maximum amount per hour for On-Demand Instances that you're willing to pay.
      description: Describes the configuration of On-Demand Instances in an EC2 Fleet.
    FleetData:
      type: object
      properties:
        ActivityStatus:
          allOf:
            - $ref: "#/components/schemas/FleetActivityStatus"
            - xml:
                name: activityStatus
              description: The progress of the EC2 Fleet. If there is an error, the status is <code>error</code>. After all requests are placed, the status is <code>pending_fulfillment</code>. If the size of the EC2 Fleet is equal to or greater than its target capacity, the status is <code>fulfilled</code>. If the size of the EC2 Fleet is decreased, the status is <code>pending_termination</code> while instances are terminating.
        CreateTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: createTime
              description: The creation date and time of the EC2 Fleet.
        FleetId:
          allOf:
            - $ref: "#/components/schemas/FleetId"
            - xml:
                name: fleetId
              description: The ID of the EC2 Fleet.
        FleetState:
          allOf:
            - $ref: "#/components/schemas/FleetStateCode"
            - xml:
                name: fleetState
              description: The state of the EC2 Fleet.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: '<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p> <p>Constraints: Maximum 64 ASCII characters</p>'
        ExcessCapacityTerminationPolicy:
          allOf:
            - $ref: "#/components/schemas/FleetExcessCapacityTerminationPolicy"
            - xml:
                name: excessCapacityTerminationPolicy
              description: Indicates whether running instances should be terminated if the target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.
        FulfilledCapacity:
          allOf:
            - $ref: "#/components/schemas/Double"
            - xml:
                name: fulfilledCapacity
              description: The number of units fulfilled by this request compared to the set target capacity.
        FulfilledOnDemandCapacity:
          allOf:
            - $ref: "#/components/schemas/Double"
            - xml:
                name: fulfilledOnDemandCapacity
              description: The number of units fulfilled by this request compared to the set target On-Demand capacity.
        LaunchTemplateConfigs:
          allOf:
            - $ref: "#/components/schemas/FleetLaunchTemplateConfigList"
            - xml:
                name: launchTemplateConfigs
              description: The launch template and overrides.
        TargetCapacitySpecification:
          allOf:
            - $ref: "#/components/schemas/TargetCapacitySpecification"
            - xml:
                name: targetCapacitySpecification
              description: The number of units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>, you can specify a target capacity of 0 and add capacity later.
        TerminateInstancesWithExpiration:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: terminateInstancesWithExpiration
              description: "Indicates whether running instances should be terminated when the EC2 Fleet expires. "
        Type:
          allOf:
            - $ref: "#/components/schemas/FleetType"
            - xml:
                name: type
              description: "The type of request. Indicates whether the EC2 Fleet only <code>requests</code> the target capacity, or also attempts to <code>maintain</code> it. If you request a certain target capacity, EC2 Fleet only places the required requests; it does not attempt to replenish instances if capacity is diminished, and it does not submit requests in alternative capacity pools if capacity is unavailable. To maintain a certain target capacity, EC2 Fleet places the required requests to meet this target capacity. It also automatically replenishes any interrupted Spot Instances. Default: <code>maintain</code>."
        ValidFrom:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: validFrom
              description: "The start date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). The default is to start fulfilling the request immediately. "
        ValidUntil:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: validUntil
              description: "The end date and time of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). At this point, no new instance requests are placed or able to fulfill the request. The default end date is 7 days from the current date. "
        ReplaceUnhealthyInstances:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: replaceUnhealthyInstances
              description: Indicates whether EC2 Fleet should replace unhealthy Spot Instances. Supported only for fleets of type <code>maintain</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#ec2-fleet-health-checks">EC2 Fleet health checks</a> in the <i>Amazon EC2 User Guide</i>.
        SpotOptions:
          allOf:
            - $ref: "#/components/schemas/SpotOptions"
            - xml:
                name: spotOptions
              description: The configuration of Spot Instances in an EC2 Fleet.
        OnDemandOptions:
          allOf:
            - $ref: "#/components/schemas/OnDemandOptions"
            - xml:
                name: onDemandOptions
              description: The allocation strategy of On-Demand Instances in an EC2 Fleet.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags for an EC2 Fleet resource.
        Errors:
          allOf:
            - $ref: "#/components/schemas/DescribeFleetsErrorSet"
            - xml:
                name: errorSet
              description: Information about the instances that could not be launched by the fleet. Valid only when <b>Type</b> is set to <code>instant</code>.
        Instances:
          allOf:
            - $ref: "#/components/schemas/DescribeFleetsInstancesSet"
            - xml:
                name: fleetInstanceSet
              description: Information about the instances that were launched by the fleet. Valid only when <b>Type</b> is set to <code>instant</code>.
        Context:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: context
              description: Reserved.
      description: Describes an EC2 Fleet.
    FleetLaunchTemplateSpecification:
      type: object
      properties:
        LaunchTemplateId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: launchTemplateId
              description: The ID of the launch template. If you specify the template ID, you can't specify the template name.
        LaunchTemplateName:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateName"
            - xml:
                name: launchTemplateName
              description: The name of the launch template. If you specify the template name, you can't specify the template ID.
        Version:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: version
              description: <p>The launch template version number, <code>$Latest</code>, or <code>$Default</code>. You must specify a value, otherwise the request fails.</p> <p>If the value is <code>$Latest</code>, Amazon EC2 uses the latest version of the launch template.</p> <p>If the value is <code>$Default</code>, Amazon EC2 uses the default version of the launch template.</p>
      description: Describes the Amazon EC2 launch template and the launch template version that can be used by a Spot Fleet request to configure Amazon EC2 instances. For information about launch templates, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html">Launching an instance from a launch template</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
    FleetLaunchTemplateOverridesList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/FleetLaunchTemplateOverrides"
          - xml:
              name: item
    FleetLaunchTemplateConfig:
      type: object
      properties:
        LaunchTemplateSpecification:
          allOf:
            - $ref: "#/components/schemas/FleetLaunchTemplateSpecification"
            - xml:
                name: launchTemplateSpecification
              description: The launch template.
        Overrides:
          allOf:
            - $ref: "#/components/schemas/FleetLaunchTemplateOverridesList"
            - xml:
                name: overrides
              description: Any parameters that you specify override the same parameters in the launch template.
      description: Describes a launch template and overrides.
    FleetLaunchTemplateSpecificationRequest:
      type: object
      properties:
        LaunchTemplateId:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateId"
            - description: The ID of the launch template. If you specify the template ID, you can't specify the template name.
        LaunchTemplateName:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateName"
            - description: The name of the launch template. If you specify the template name, you can't specify the template ID.
        Version:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The launch template version number, <code>$Latest</code>, or <code>$Default</code>. You must specify a value, otherwise the request fails.</p> <p>If the value is <code>$Latest</code>, Amazon EC2 uses the latest version of the launch template.</p> <p>If the value is <code>$Default</code>, Amazon EC2 uses the default version of the launch template.</p>
      description: Describes the Amazon EC2 launch template and the launch template version that can be used by an EC2 Fleet to configure Amazon EC2 instances. For information about launch templates, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html">Launching an instance from a launch template</a> in the <i>Amazon EC2 User Guide</i>.
    FleetLaunchTemplateOverridesListRequest:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/FleetLaunchTemplateOverridesRequest"
          - xml:
              name: item
    PlacementResponse:
      type: object
      properties:
        GroupName:
          allOf:
            - $ref: "#/components/schemas/PlacementGroupName"
            - xml:
                name: groupName
              description: The name of the placement group that the instance is in.
      description: Describes the placement of an instance.
    FleetLaunchTemplateOverrides:
      type: object
      properties:
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/InstanceType"
            - xml:
                name: instanceType
              description: The instance type.
        MaxPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: maxPrice
              description: The maximum price per unit hour that you are willing to pay for a Spot Instance.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: subnetId
              description: The ID of the subnet in which to launch the instances.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone in which to launch the instances.
        WeightedCapacity:
          allOf:
            - $ref: "#/components/schemas/Double"
            - xml:
                name: weightedCapacity
              description: The number of units provided by the specified instance type.
        Priority:
          allOf:
            - $ref: "#/components/schemas/Double"
            - xml:
                name: priority
              description: <p>The priority for the launch template override. The highest priority is launched first.</p> <p>If the On-Demand <code>AllocationStrategy</code> is set to <code>prioritized</code>, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity.</p> <p>If the Spot <code>AllocationStrategy</code> is set to <code>capacity-optimized-prioritized</code>, EC2 Fleet uses priority on a best-effort basis to determine which launch template override to use in fulfilling Spot capacity, but optimizes for capacity first.</p> <p>Valid values are whole numbers starting at <code>0</code>. The lower the number, the higher the priority. If no number is set, the override has the lowest priority. You can set the same priority for different launch template overrides.</p>
        Placement:
          allOf:
            - $ref: "#/components/schemas/PlacementResponse"
            - xml:
                name: placement
              description: The location where the instance launched, if applicable.
      description: Describes overrides for a launch template.
    FleetLaunchTemplateOverridesRequest:
      type: object
      properties:
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/InstanceType"
            - description: The instance type.
        MaxPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The maximum price per unit hour that you are willing to pay for a Spot Instance.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - description: The IDs of the subnets in which to launch the instances. Separate multiple subnet IDs using commas (for example, <code>subnet-1234abcdeexample1, subnet-0987cdef6example2</code>). A request of type <code>instant</code> can have only one subnet ID.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Availability Zone in which to launch the instances.
        WeightedCapacity:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The number of units provided by the specified instance type.
        Priority:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: <p>The priority for the launch template override. The highest priority is launched first.</p> <p>If the On-Demand <code>AllocationStrategy</code> is set to <code>prioritized</code>, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity.</p> <p>If the Spot <code>AllocationStrategy</code> is set to <code>capacity-optimized-prioritized</code>, EC2 Fleet uses priority on a best-effort basis to determine which launch template override to use in fulfilling Spot capacity, but optimizes for capacity first.</p> <p>Valid values are whole numbers starting at <code>0</code>. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. You can set the same priority for different launch template overrides.</p>
        Placement:
          allOf:
            - $ref: "#/components/schemas/Placement"
            - description: The location where the instance launched, if applicable.
      description: Describes overrides for a launch template.
    FleetReplacementStrategy:
      type: string
      enum:
        - launch
    FleetSpotCapacityRebalance:
      type: object
      properties:
        ReplacementStrategy:
          allOf:
            - $ref: "#/components/schemas/FleetReplacementStrategy"
            - xml:
                name: replacementStrategy
              description: <p>To allow EC2 Fleet to launch a replacement Spot Instance when an instance rebalance notification is emitted for an existing Spot Instance in the fleet, specify <code>launch</code>. Only available for fleets of type <code>maintain</code>.</p> <note> <p>When a replacement instance is launched, the instance marked for rebalance is not automatically terminated. You can terminate it, or you can leave it running. You are charged for both instances while they are running.</p> </note>
      description: The strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted.
    FleetSpotCapacityRebalanceRequest:
      type: object
      properties:
        ReplacementStrategy:
          allOf:
            - $ref: "#/components/schemas/FleetReplacementStrategy"
            - description: <p>The replacement strategy to use. Only available for fleets of type <code>maintain</code>.</p> <p>To allow EC2 Fleet to launch a replacement Spot Instance when an instance rebalance notification is emitted for an existing Spot Instance in the fleet, specify <code>launch</code>. You must specify a value, otherwise you get an error.</p> <note> <p>When a replacement instance is launched, the instance marked for rebalance is not automatically terminated. You can terminate it, or you can leave it running. You are charged for all instances while they are running.</p> </note>
      description: The Spot Instance replacement strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-configuration-strategies.html#ec2-fleet-capacity-rebalance">Capacity rebalancing</a> in the <i>Amazon EC2 User Guide</i>.
    FleetSpotMaintenanceStrategies:
      type: object
      properties:
        CapacityRebalance:
          allOf:
            - $ref: "#/components/schemas/FleetSpotCapacityRebalance"
            - xml:
                name: capacityRebalance
              description: The strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted.
      description: The strategies for managing your Spot Instances that are at an elevated risk of being interrupted.
    Float:
      type: number
      format: float
    FlowLog:
      type: object
      properties:
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: creationTime
              description: The date and time the flow log was created.
        DeliverLogsErrorMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: deliverLogsErrorMessage
              description: Information about the error that occurred. <code>Rate limited</code> indicates that CloudWatch Logs throttling has been applied for one or more network interfaces, or that you've reached the limit on the number of log groups that you can create. <code>Access error</code> indicates that the IAM role associated with the flow log does not have sufficient permissions to publish to CloudWatch Logs. <code>Unknown error</code> indicates an internal error.
        DeliverLogsPermissionArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: deliverLogsPermissionArn
              description: The ARN of the IAM role that posts logs to CloudWatch Logs.
        DeliverLogsStatus:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: deliverLogsStatus
              description: The status of the logs delivery (<code>SUCCESS</code> | <code>FAILED</code>).
        FlowLogId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: flowLogId
              description: The flow log ID.
        FlowLogStatus:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: flowLogStatus
              description: The status of the flow log (<code>ACTIVE</code>).
        LogGroupName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: logGroupName
              description: The name of the flow log group.
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resourceId
              description: The ID of the resource on which the flow log was created.
        TrafficType:
          allOf:
            - $ref: "#/components/schemas/TrafficType"
            - xml:
                name: trafficType
              description: The type of traffic captured for the flow log.
        LogDestinationType:
          allOf:
            - $ref: "#/components/schemas/LogDestinationType"
            - xml:
                name: logDestinationType
              description: Specifies the type of destination to which the flow log data is published. Flow log data can be published to CloudWatch Logs or Amazon S3.
        LogDestination:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: logDestination
              description: Specifies the destination to which the flow log data is published. Flow log data can be published to an CloudWatch Logs log group or an Amazon S3 bucket. If the flow log publishes to CloudWatch Logs, this element indicates the Amazon Resource Name (ARN) of the CloudWatch Logs log group to which the data is published. If the flow log publishes to Amazon S3, this element indicates the ARN of the Amazon S3 bucket to which the data is published.
        LogFormat:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: logFormat
              description: The format of the flow log record.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags for the flow log.
        MaxAggregationInterval:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: maxAggregationInterval
              description: '<p>The maximum interval of time, in seconds, during which a flow of packets is captured and aggregated into a flow log record.</p> <p>When a network interface is attached to a <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances">Nitro-based instance</a>, the aggregation interval is always 60 seconds (1 minute) or less, regardless of the specified value.</p> <p>Valid Values: <code>60</code> | <code>600</code> </p>'
      description: Describes a flow log.
    FpgaDeviceCount:
      type: integer
    FpgaDeviceName:
      type: string
    FpgaDeviceManufacturerName:
      type: string
    FpgaDeviceMemoryInfo:
      type: object
      properties:
        SizeInMiB:
          allOf:
            - $ref: "#/components/schemas/FpgaDeviceMemorySize"
            - xml:
                name: sizeInMiB
              description: The size of the memory available to the FPGA accelerator, in MiB.
      description: Describes the memory for the FPGA accelerator for the instance type.
    FpgaDeviceInfo:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/FpgaDeviceName"
            - xml:
                name: name
              description: The name of the FPGA accelerator.
        Manufacturer:
          allOf:
            - $ref: "#/components/schemas/FpgaDeviceManufacturerName"
            - xml:
                name: manufacturer
              description: The manufacturer of the FPGA accelerator.
        Count:
          allOf:
            - $ref: "#/components/schemas/FpgaDeviceCount"
            - xml:
                name: count
              description: The count of FPGA accelerators for the instance type.
        MemoryInfo:
          allOf:
            - $ref: "#/components/schemas/FpgaDeviceMemoryInfo"
            - xml:
                name: memoryInfo
              description: Describes the memory for the FPGA accelerator for the instance type.
      description: Describes the FPGA accelerator for the instance type.
    FpgaDeviceInfoList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/FpgaDeviceInfo"
          - xml:
              name: item
    FpgaDeviceMemorySize:
      type: integer
    PciId:
      type: object
      properties:
        DeviceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the device.
        VendorId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the vendor.
        SubsystemId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the subsystem.
        SubsystemVendorId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the vendor for the subsystem.
      description: Describes the data that identifies an Amazon FPGA image (AFI) on the PCI bus.
    FpgaImageState:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/FpgaImageStateCode"
            - xml:
                name: code
              description: <p>The state. The following are the possible values:</p> <ul> <li> <p> <code>pending</code> - AFI bitstream generation is in progress.</p> </li> <li> <p> <code>available</code> - The AFI is available for use.</p> </li> <li> <p> <code>failed</code> - AFI bitstream generation failed.</p> </li> <li> <p> <code>unavailable</code> - The AFI is no longer available for use.</p> </li> </ul>
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: If the state is <code>failed</code>, this is the error message.
      description: Describes the state of the bitstream generation process for an Amazon FPGA image (AFI).
    FpgaImage:
      type: object
      properties:
        FpgaImageId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: fpgaImageId
              description: The FPGA image identifier (AFI ID).
        FpgaImageGlobalId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: fpgaImageGlobalId
              description: The global FPGA image identifier (AGFI ID).
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: name
              description: The name of the AFI.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: The description of the AFI.
        ShellVersion:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: shellVersion
              description: The version of the AWS Shell that was used to create the bitstream.
        PciId:
          allOf:
            - $ref: "#/components/schemas/PciId"
            - xml:
                name: pciId
              description: Information about the PCI bus.
        State:
          allOf:
            - $ref: "#/components/schemas/FpgaImageState"
            - xml:
                name: state
              description: Information about the state of the AFI.
        CreateTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: createTime
              description: The date and time the AFI was created.
        UpdateTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: updateTime
              description: The time of the most recent update to the AFI.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The AWS account ID of the AFI owner.
        OwnerAlias:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerAlias
              description: The alias of the AFI owner. Possible values include <code>self</code>, <code>amazon</code>, and <code>aws-marketplace</code>.
        ProductCodes:
          allOf:
            - $ref: "#/components/schemas/ProductCodeList"
            - xml:
                name: productCodes
              description: The product codes for the AFI.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tags
              description: Any tags assigned to the AFI.
        Public:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: public
              description: Indicates whether the AFI is public.
        DataRetentionSupport:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dataRetentionSupport
              description: Indicates whether data retention support is enabled for the AFI.
      description: Describes an Amazon FPGA image (AFI).
    LoadPermissionList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LoadPermission"
          - xml:
              name: item
    FpgaImageStateCode:
      type: string
      enum:
        - pending
        - failed
        - available
        - unavailable
    totalFpgaMemory:
      type: integer
    FpgaInfo:
      type: object
      properties:
        Fpgas:
          allOf:
            - $ref: "#/components/schemas/FpgaDeviceInfoList"
            - xml:
                name: fpgas
              description: Describes the FPGAs for the instance type.
        TotalFpgaMemoryInMiB:
          allOf:
            - $ref: "#/components/schemas/totalFpgaMemory"
            - xml:
                name: totalFpgaMemoryInMiB
              description: The total memory of all FPGA accelerators for the instance type.
      description: Describes the FPGAs for the instance type.
    FreeTierEligibleFlag:
      type: boolean
    GetAssociatedEnclaveCertificateIamRolesRequest:
      type: object
      title: GetAssociatedEnclaveCertificateIamRolesRequest
      properties:
        CertificateArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The ARN of the ACM certificate for which to view the associated IAM roles, encryption keys, and Amazon S3 object information.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    GetAssociatedIpv6PoolCidrsRequest:
      type: object
      required:
        - PoolId
      title: GetAssociatedIpv6PoolCidrsRequest
      properties:
        PoolId:
          allOf:
            - $ref: "#/components/schemas/Ipv6PoolEc2Id"
            - description: The ID of the IPv6 address pool.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Ipv6PoolMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    Ipv6CidrAssociationSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Ipv6CidrAssociation"
          - xml:
              name: item
    GetCapacityReservationUsageRequestMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    GetCapacityReservationUsageRequest:
      type: object
      required:
        - CapacityReservationId
      title: GetCapacityReservationUsageRequest
      properties:
        CapacityReservationId:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationId"
            - description: The ID of the Capacity Reservation.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to use to retrieve the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/GetCapacityReservationUsageRequestMaxResults"
            - description: "<p>The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.</p> <p>Valid range: Minimum value of 1. Maximum value of 1000.</p>"
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    InstanceUsageSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceUsage"
          - xml:
              name: item
    GetCoipPoolUsageRequest:
      type: object
      required:
        - PoolId
      title: GetCoipPoolUsageRequest
      properties:
        PoolId:
          allOf:
            - $ref: "#/components/schemas/CoipPoolId"
            - description: The ID of the address pool.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>The filters. The following are the possible values:</p> <ul> <li> <p> <code>coip-address-usage.allocation-id</code> </p> </li> </ul> <ul> <li> <p> <code>coip-address-usage.aws-account-id</code> </p> </li> </ul> <ul> <li> <p> <code>coip-address-usage.aws-service</code> </p> </li> </ul> <ul> <li> <p> <code>coip-address-usage.co-ip</code> </p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/CoipPoolMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    GetConsoleOutputRequest:
      type: object
      required:
        - InstanceId
      title: GetConsoleOutputRequest
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - description: The ID of the instance.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Latest:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "<p>When enabled, retrieves the latest console output for the instance.</p> <p>Default: disabled (<code>false</code>)</p>"
    GetConsoleScreenshotRequest:
      type: object
      required:
        - InstanceId
      title: GetConsoleScreenshotRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - description: The ID of the instance.
        WakeUp:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: When set to <code>true</code>, acts as keystroke input and wakes up an instance that's in standby or "sleep" mode.
    UnlimitedSupportedInstanceFamily:
      type: string
      enum:
        - t2
        - t3
        - t3a
        - t4g
    GetDefaultCreditSpecificationRequest:
      type: object
      required:
        - InstanceFamily
      title: GetDefaultCreditSpecificationRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceFamily:
          allOf:
            - $ref: "#/components/schemas/UnlimitedSupportedInstanceFamily"
            - description: The instance family.
    InstanceFamilyCreditSpecification:
      type: object
      properties:
        InstanceFamily:
          allOf:
            - $ref: "#/components/schemas/UnlimitedSupportedInstanceFamily"
            - xml:
                name: instanceFamily
              description: The instance family.
        CpuCredits:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cpuCredits
              description: The default credit option for CPU usage of the instance family. Valid values are <code>standard</code> and <code>unlimited</code>.
      description: Describes the default credit option for CPU usage of a burstable performance instance family.
    GetEbsDefaultKmsKeyIdRequest:
      type: object
      title: GetEbsDefaultKmsKeyIdRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    GetEbsEncryptionByDefaultRequest:
      type: object
      title: GetEbsEncryptionByDefaultRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    IntegrateServices:
      type: object
      properties:
        AthenaIntegrations:
          allOf:
            - $ref: "#/components/schemas/AthenaIntegrationsSet"
            - xml:
                name: AthenaIntegration
              description: Information about the integration with Amazon Athena.
      description: Describes service integrations with VPC Flow logs.
    GetFlowLogsIntegrationTemplateRequest:
      type: object
      required:
        - FlowLogId
        - ConfigDeliveryS3DestinationArn
        - IntegrateServices
      title: GetFlowLogsIntegrationTemplateRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        FlowLogId:
          allOf:
            - $ref: "#/components/schemas/VpcFlowLogId"
            - description: The ID of the flow log.
        ConfigDeliveryS3DestinationArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: To store the CloudFormation template in Amazon S3, specify the location in Amazon S3.
        IntegrateServices:
          allOf:
            - $ref: "#/components/schemas/IntegrateServices"
            - xml:
                name: IntegrateService
              description: Information about the service integration.
    GetGroupsForCapacityReservationRequestMaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    GetGroupsForCapacityReservationRequest:
      type: object
      required:
        - CapacityReservationId
      title: GetGroupsForCapacityReservationRequest
      properties:
        CapacityReservationId:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationId"
            - description: The ID of the Capacity Reservation.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to use to retrieve the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/GetGroupsForCapacityReservationRequestMaxResults"
            - description: The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned <code>nextToken</code> value. This value can be between 5 and 500. If <code>maxResults</code> is given a larger value than 500, you receive an error.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    RequestHostIdSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/DedicatedHostId"
          - xml:
              name: item
    GetHostReservationPurchasePreviewRequest:
      type: object
      required:
        - HostIdSet
        - OfferingId
      title: GetHostReservationPurchasePreviewRequest
      properties:
        HostIdSet:
          allOf:
            - $ref: "#/components/schemas/RequestHostIdSet"
            - description: The IDs of the Dedicated Hosts with which the reservation is associated.
        OfferingId:
          allOf:
            - $ref: "#/components/schemas/OfferingId"
            - description: The offering ID of the reservation.
    PurchaseSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Purchase"
          - xml:
              name: item
    GetLaunchTemplateDataRequest:
      type: object
      required:
        - InstanceId
      title: GetLaunchTemplateDataRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - description: The ID of the instance.
    ResponseLaunchTemplateData:
      type: object
      properties:
        KernelId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: kernelId
              description: The ID of the kernel, if applicable.
        EbsOptimized:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: ebsOptimized
              description: "Indicates whether the instance is optimized for Amazon EBS I/O. "
        IamInstanceProfile:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateIamInstanceProfileSpecification"
            - xml:
                name: iamInstanceProfile
              description: The IAM instance profile.
        BlockDeviceMappings:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateBlockDeviceMappingList"
            - xml:
                name: blockDeviceMappingSet
              description: The block device mappings.
        NetworkInterfaces:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateInstanceNetworkInterfaceSpecificationList"
            - xml:
                name: networkInterfaceSet
              description: The network interfaces.
        ImageId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: imageId
              description: The ID of the AMI that was used to launch the instance.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/InstanceType"
            - xml:
                name: instanceType
              description: The instance type.
        KeyName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: keyName
              description: The name of the key pair.
        Monitoring:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplatesMonitoring"
            - xml:
                name: monitoring
              description: The monitoring for the instance.
        Placement:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplatePlacement"
            - xml:
                name: placement
              description: The placement of the instance.
        RamDiskId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ramDiskId
              description: The ID of the RAM disk, if applicable.
        DisableApiTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: disableApiTermination
              description: If set to <code>true</code>, indicates that the instance cannot be terminated using the Amazon EC2 console, command line tool, or API.
        InstanceInitiatedShutdownBehavior:
          allOf:
            - $ref: "#/components/schemas/ShutdownBehavior"
            - xml:
                name: instanceInitiatedShutdownBehavior
              description: Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
        UserData:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: userData
              description: "The user data for the instance. "
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateTagSpecificationList"
            - xml:
                name: tagSpecificationSet
              description: The tags.
        ElasticGpuSpecifications:
          allOf:
            - $ref: "#/components/schemas/ElasticGpuSpecificationResponseList"
            - xml:
                name: elasticGpuSpecificationSet
              description: The elastic GPU specification.
        ElasticInferenceAccelerators:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateElasticInferenceAcceleratorResponseList"
            - xml:
                name: elasticInferenceAcceleratorSet
              description: " The elastic inference accelerator for the instance. "
        SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: securityGroupIdSet
              description: The security group IDs.
        SecurityGroups:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: securityGroupSet
              description: The security group names.
        InstanceMarketOptions:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateInstanceMarketOptions"
            - xml:
                name: instanceMarketOptions
              description: The market (purchasing) option for the instances.
        CreditSpecification:
          allOf:
            - $ref: "#/components/schemas/CreditSpecification"
            - xml:
                name: creditSpecification
              description: The credit option for CPU usage of the instance.
        CpuOptions:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateCpuOptions"
            - xml:
                name: cpuOptions
              description: The CPU options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html">Optimizing CPU options</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
        CapacityReservationSpecification:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateCapacityReservationSpecificationResponse"
            - xml:
                name: capacityReservationSpecification
              description: Information about the Capacity Reservation targeting option.
        LicenseSpecifications:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateLicenseList"
            - xml:
                name: licenseSet
              description: The license configurations.
        HibernationOptions:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateHibernationOptions"
            - xml:
                name: hibernationOptions
              description: Indicates whether an instance is configured for hibernation. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
        MetadataOptions:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateInstanceMetadataOptions"
            - xml:
                name: metadataOptions
              description: The metadata options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance metadata and user data</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
        EnclaveOptions:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateEnclaveOptions"
            - xml:
                name: enclaveOptions
              description: Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.
      description: "The information for a launch template. "
    GetManagedPrefixListAssociationsMaxResults:
      type: integer
      minimum: 5
      maximum: 255
    GetManagedPrefixListAssociationsRequest:
      type: object
      required:
        - PrefixListId
      title: GetManagedPrefixListAssociationsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        PrefixListId:
          allOf:
            - $ref: "#/components/schemas/PrefixListResourceId"
            - description: The ID of the prefix list.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/GetManagedPrefixListAssociationsMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    PrefixListAssociationSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PrefixListAssociation"
          - xml:
              name: item
    GetManagedPrefixListEntriesRequest:
      type: object
      required:
        - PrefixListId
      title: GetManagedPrefixListEntriesRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        PrefixListId:
          allOf:
            - $ref: "#/components/schemas/PrefixListResourceId"
            - description: The ID of the prefix list.
        TargetVersion:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The version of the prefix list for which to return the entries. The default is the current version.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/PrefixListMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    PrefixListEntrySet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PrefixListEntry"
          - xml:
              name: item
    GetPasswordDataRequest:
      type: object
      required:
        - InstanceId
      title: GetPasswordDataRequest
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - description: The ID of the Windows instance.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    GetReservedInstancesExchangeQuoteRequest:
      type: object
      required:
        - ReservedInstanceIds
      title: GetReservedInstancesExchangeQuoteRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ReservedInstanceIds:
          allOf:
            - $ref: "#/components/schemas/ReservedInstanceIdSet"
            - xml:
                name: ReservedInstanceId
              description: The IDs of the Convertible Reserved Instances to exchange.
        TargetConfigurations:
          allOf:
            - $ref: "#/components/schemas/TargetConfigurationRequestSet"
            - xml:
                name: TargetConfiguration
              description: The configuration of the target Convertible Reserved Instance to exchange for your current Convertible Reserved Instances.
      description: Contains the parameters for GetReservedInstanceExchangeQuote.
    ReservationValue:
      type: object
      properties:
        HourlyPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: hourlyPrice
              description: The hourly rate of the reservation.
        RemainingTotalValue:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: remainingTotalValue
              description: The balance of the total value (the sum of remainingUpfrontValue + hourlyPrice * number of hours remaining).
        RemainingUpfrontValue:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: remainingUpfrontValue
              description: The remaining upfront cost of the reservation.
      description: The cost associated with the Reserved Instance.
    ReservedInstanceReservationValueSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ReservedInstanceReservationValue"
          - xml:
              name: item
    TargetReservationValueSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TargetReservationValue"
          - xml:
              name: item
    GetSerialConsoleAccessStatusRequest:
      type: object
      title: GetSerialConsoleAccessStatusRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    GetSubnetCidrReservationsMaxResults:
      type: integer
      minimum: 5
      maximum: 1000
    GetSubnetCidrReservationsRequest:
      type: object
      required:
        - SubnetId
      title: GetSubnetCidrReservationsRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters.</p> <ul> <li> <p> <code>reservationType</code> - The type of reservation (<code>prefix</code> | <code>explicit</code>).</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet.</p> </li> <li> <p> <code>tag</code>:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.</p> </li> <li> <p> <code>tag-key</code> - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.</p> </li> </ul>
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - description: The ID of the subnet.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/GetSubnetCidrReservationsMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
    SubnetCidrReservationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SubnetCidrReservation"
          - xml:
              name: item
    GetTransitGatewayAttachmentPropagationsRequest:
      type: object
      required:
        - TransitGatewayAttachmentId
      title: GetTransitGatewayAttachmentPropagationsRequest
      properties:
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the attachment.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>transit-gateway-route-table-id</code> - The ID of the transit gateway route table.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayAttachmentPropagationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGatewayAttachmentPropagation"
          - xml:
              name: item
    GetTransitGatewayMulticastDomainAssociationsRequest:
      type: object
      title: GetTransitGatewayMulticastDomainAssociationsRequest
      properties:
        TransitGatewayMulticastDomainId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomainId"
            - description: The ID of the transit gateway multicast domain.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: "<p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>resource-id</code> - The ID of the resource.</p> </li> <li> <p> <code>resource-type</code> - The type of resource. The valid value is: <code>vpc</code>.</p> </li> <li> <p> <code>state</code> - The state of the subnet association. Valid values are <code>associated</code> | <code>associating</code> | <code>disassociated</code> | <code>disassociating</code>.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet.</p> </li> <li> <p> <code>transit-gateway-attachment-id</code> - The id of the transit gateway attachment.</p> </li> </ul>"
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayMulticastDomainAssociationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGatewayMulticastDomainAssociation"
          - xml:
              name: item
    GetTransitGatewayPrefixListReferencesRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
      title: GetTransitGatewayPrefixListReferencesRequest
      properties:
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableId"
            - description: The ID of the transit gateway route table.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>attachment.resource-id</code> - The ID of the resource for the attachment.</p> </li> <li> <p> <code>attachment.resource-type</code> - The type of resource for the attachment. Valid values are <code>vpc</code> | <code>vpn</code> | <code>direct-connect-gateway</code> | <code>peering</code>.</p> </li> <li> <p> <code>attachment.transit-gateway-attachment-id</code> - The ID of the attachment.</p> </li> <li> <p> <code>is-blackhole</code> - Whether traffic matching the route is blocked (<code>true</code> | <code>false</code>).</p> </li> <li> <p> <code>prefix-list-id</code> - The ID of the prefix list.</p> </li> <li> <p> <code>prefix-list-owner-id</code> - The ID of the owner of the prefix list.</p> </li> <li> <p> <code>state</code> - The state of the prefix list reference (<code>pending</code> | <code>available</code> | <code>modifying</code> | <code>deleting</code>).</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayPrefixListReferenceSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGatewayPrefixListReference"
          - xml:
              name: item
    GetTransitGatewayRouteTableAssociationsRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
      title: GetTransitGatewayRouteTableAssociationsRequest
      properties:
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableId"
            - description: The ID of the transit gateway route table.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>resource-id</code> - The ID of the resource.</p> </li> <li> <p> <code>resource-type</code> - The resource type. Valid values are <code>vpc</code> | <code>vpn</code> | <code>direct-connect-gateway</code> | <code>peering</code> | <code>connect</code>.</p> </li> <li> <p> <code>transit-gateway-attachment-id</code> - The ID of the attachment.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayRouteTableAssociationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGatewayRouteTableAssociation"
          - xml:
              name: item
    GetTransitGatewayRouteTablePropagationsRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
      title: GetTransitGatewayRouteTablePropagationsRequest
      properties:
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableId"
            - description: The ID of the transit gateway route table.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>resource-id</code> - The ID of the resource.</p> </li> <li> <p> <code>resource-type</code> - The resource type. Valid values are <code>vpc</code> | <code>vpn</code> | <code>direct-connect-gateway</code> | <code>peering</code> | <code>connect</code>.</p> </li> <li> <p> <code>transit-gateway-attachment-id</code> - The ID of the attachment.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayRouteTablePropagationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGatewayRouteTablePropagation"
          - xml:
              name: item
    GpuDeviceCount:
      type: integer
    GpuDeviceName:
      type: string
    GpuDeviceManufacturerName:
      type: string
    GpuDeviceMemoryInfo:
      type: object
      properties:
        SizeInMiB:
          allOf:
            - $ref: "#/components/schemas/GpuDeviceMemorySize"
            - xml:
                name: sizeInMiB
              description: The size of the memory available to the GPU accelerator, in MiB.
      description: Describes the memory available to the GPU accelerator.
    GpuDeviceInfo:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/GpuDeviceName"
            - xml:
                name: name
              description: The name of the GPU accelerator.
        Manufacturer:
          allOf:
            - $ref: "#/components/schemas/GpuDeviceManufacturerName"
            - xml:
                name: manufacturer
              description: The manufacturer of the GPU accelerator.
        Count:
          allOf:
            - $ref: "#/components/schemas/GpuDeviceCount"
            - xml:
                name: count
              description: The number of GPUs for the instance type.
        MemoryInfo:
          allOf:
            - $ref: "#/components/schemas/GpuDeviceMemoryInfo"
            - xml:
                name: memoryInfo
              description: Describes the memory available to the GPU accelerator.
      description: Describes the GPU accelerators for the instance type.
    GpuDeviceInfoList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/GpuDeviceInfo"
          - xml:
              name: item
    GpuDeviceMemorySize:
      type: integer
    totalGpuMemory:
      type: integer
    GpuInfo:
      type: object
      properties:
        Gpus:
          allOf:
            - $ref: "#/components/schemas/GpuDeviceInfoList"
            - xml:
                name: gpus
              description: Describes the GPU accelerators for the instance type.
        TotalGpuMemoryInMiB:
          allOf:
            - $ref: "#/components/schemas/totalGpuMemory"
            - xml:
                name: totalGpuMemoryInMiB
              description: The total size of the memory for the GPU accelerators for the instance type, in MiB.
      description: Describes the GPU accelerators for the instance type.
    GroupIdentifier:
      type: object
      properties:
        GroupName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupName
              description: The name of the security group.
        GroupId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupId
              description: The ID of the security group.
      description: Describes a security group.
    SecurityGroupIdentifier:
      type: object
      properties:
        GroupId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupId
              description: The ID of the security group.
        GroupName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupName
              description: The name of the security group.
      description: Describes a security group.
    GroupIdentifierSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SecurityGroupIdentifier"
          - xml:
              name: item
    HibernationFlag:
      type: boolean
    HibernationOptions:
      type: object
      properties:
        Configured:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: configured
              description: If this parameter is set to <code>true</code>, your instance is enabled for hibernation; otherwise, it is not enabled for hibernation.
      description: Indicates whether your instance is configured for hibernation. This parameter is valid only if the instance meets the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites">hibernation prerequisites</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance</a> in the <i>Amazon EC2 User Guide</i>.
    HibernationOptionsRequest:
      type: object
      properties:
        Configured:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "<p>If you set this parameter to <code>true</code>, your instance is enabled for hibernation.</p> <p>Default: <code>false</code> </p>"
      description: Indicates whether your instance is configured for hibernation. This parameter is valid only if the instance meets the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites">hibernation prerequisites</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance</a> in the <i>Amazon EC2 User Guide</i>.
    HistoryRecord:
      type: object
      properties:
        EventInformation:
          allOf:
            - $ref: "#/components/schemas/EventInformation"
            - xml:
                name: eventInformation
              description: Information about the event.
        EventType:
          allOf:
            - $ref: "#/components/schemas/EventType"
            - xml:
                name: eventType
              description: <p>The event type.</p> <ul> <li> <p> <code>error</code> - An error with the Spot Fleet request.</p> </li> <li> <p> <code>fleetRequestChange</code> - A change in the status or configuration of the Spot Fleet request.</p> </li> <li> <p> <code>instanceChange</code> - An instance was launched or terminated.</p> </li> <li> <p> <code>Information</code> - An informational event.</p> </li> </ul>
        Timestamp:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: timestamp
              description: The date and time of the event, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
      description: Describes an event in the history of the Spot Fleet request.
    HistoryRecordEntry:
      type: object
      properties:
        EventInformation:
          allOf:
            - $ref: "#/components/schemas/EventInformation"
            - xml:
                name: eventInformation
              description: Information about the event.
        EventType:
          allOf:
            - $ref: "#/components/schemas/FleetEventType"
            - xml:
                name: eventType
              description: The event type.
        Timestamp:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: timestamp
              description: The date and time of the event, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
      description: Describes an event in the history of an EC2 Fleet.
    HostProperties:
      type: object
      properties:
        Cores:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: cores
              description: The number of cores on the Dedicated Host.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceType
              description: The instance type supported by the Dedicated Host. For example, <code>m5.large</code>. If the host supports multiple instance types, no <b>instanceType</b> is returned.
        InstanceFamily:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceFamily
              description: The instance family supported by the Dedicated Host. For example, <code>m5</code>.
        Sockets:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: sockets
              description: The number of sockets on the Dedicated Host.
        TotalVCpus:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: totalVCpus
              description: The total number of vCPUs on the Dedicated Host.
      description: Describes the properties of a Dedicated Host.
    HostInstanceList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/HostInstance"
          - xml:
              name: item
    Host:
      type: object
      properties:
        AutoPlacement:
          allOf:
            - $ref: "#/components/schemas/AutoPlacement"
            - xml:
                name: autoPlacement
              description: Whether auto-placement is on or off.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone of the Dedicated Host.
        AvailableCapacity:
          allOf:
            - $ref: "#/components/schemas/AvailableCapacity"
            - xml:
                name: availableCapacity
              description: Information about the instances running on the Dedicated Host.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
        HostId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: hostId
              description: The ID of the Dedicated Host.
        HostProperties:
          allOf:
            - $ref: "#/components/schemas/HostProperties"
            - xml:
                name: hostProperties
              description: The hardware specifications of the Dedicated Host.
        HostReservationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: hostReservationId
              description: The reservation ID of the Dedicated Host. This returns a <code>null</code> response if the Dedicated Host doesn't have an associated reservation.
        Instances:
          allOf:
            - $ref: "#/components/schemas/HostInstanceList"
            - xml:
                name: instances
              description: The IDs and instance type that are currently running on the Dedicated Host.
        State:
          allOf:
            - $ref: "#/components/schemas/AllocationState"
            - xml:
                name: state
              description: The Dedicated Host's state.
        AllocationTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: allocationTime
              description: The time that the Dedicated Host was allocated.
        ReleaseTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: releaseTime
              description: The time that the Dedicated Host was released.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the Dedicated Host.
        HostRecovery:
          allOf:
            - $ref: "#/components/schemas/HostRecovery"
            - xml:
                name: hostRecovery
              description: Indicates whether host recovery is enabled or disabled for the Dedicated Host.
        AllowsMultipleInstanceTypes:
          allOf:
            - $ref: "#/components/schemas/AllowsMultipleInstanceTypes"
            - xml:
                name: allowsMultipleInstanceTypes
              description: Indicates whether the Dedicated Host supports multiple instance types of the same instance family. If the value is <code>on</code>, the Dedicated Host supports multiple instance types in the instance family. If the value is <code>off</code>, the Dedicated Host supports a single instance type only.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the Amazon Web Services account that owns the Dedicated Host.
        AvailabilityZoneId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZoneId
              description: The ID of the Availability Zone in which the Dedicated Host is allocated.
        MemberOfServiceLinkedResourceGroup:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: memberOfServiceLinkedResourceGroup
              description: Indicates whether the Dedicated Host is in a host resource group. If <b>memberOfServiceLinkedResourceGroup</b> is <code>true</code>, the host is in a host resource group; otherwise, it is not.
      description: Describes the properties of the Dedicated Host.
    HostInstance:
      type: object
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of instance that is running on the Dedicated Host.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceType
              description: The instance type (for example, <code>m3.medium</code>) of the running instance.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the Amazon Web Services account that owns the instance.
      description: Describes an instance running on a Dedicated Host.
    PaymentOption:
      type: string
      enum:
        - AllUpfront
        - PartialUpfront
        - NoUpfront
    HostOffering:
      type: object
      properties:
        CurrencyCode:
          allOf:
            - $ref: "#/components/schemas/CurrencyCodeValues"
            - xml:
                name: currencyCode
              description: The currency of the offering.
        Duration:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: duration
              description: The duration of the offering (in seconds).
        HourlyPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: hourlyPrice
              description: The hourly price of the offering.
        InstanceFamily:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceFamily
              description: The instance family of the offering.
        OfferingId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: offeringId
              description: The ID of the offering.
        PaymentOption:
          allOf:
            - $ref: "#/components/schemas/PaymentOption"
            - xml:
                name: paymentOption
              description: The available payment option.
        UpfrontPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: upfrontPrice
              description: The upfront price of the offering. Does not apply to No Upfront offerings.
      description: Details about the Dedicated Host Reservation offering.
    ResponseHostIdSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: item
    ReservationState:
      type: string
      enum:
        - payment-pending
        - payment-failed
        - active
        - retired
    HostReservation:
      type: object
      properties:
        Count:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: count
              description: The number of Dedicated Hosts the reservation is associated with.
        CurrencyCode:
          allOf:
            - $ref: "#/components/schemas/CurrencyCodeValues"
            - xml:
                name: currencyCode
              description: The currency in which the <code>upfrontPrice</code> and <code>hourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.
        Duration:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: duration
              description: The length of the reservation's term, specified in seconds. Can be <code>31536000 (1 year)</code> | <code>94608000 (3 years)</code>.
        End:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: end
              description: The date and time that the reservation ends.
        HostIdSet:
          allOf:
            - $ref: "#/components/schemas/ResponseHostIdSet"
            - xml:
                name: hostIdSet
              description: The IDs of the Dedicated Hosts associated with the reservation.
        HostReservationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: hostReservationId
              description: The ID of the reservation that specifies the associated Dedicated Hosts.
        HourlyPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: hourlyPrice
              description: The hourly price of the reservation.
        InstanceFamily:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceFamily
              description: The instance family of the Dedicated Host Reservation. The instance family on the Dedicated Host must be the same in order for it to benefit from the reservation.
        OfferingId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: offeringId
              description: The ID of the reservation. This remains the same regardless of which Dedicated Hosts are associated with it.
        PaymentOption:
          allOf:
            - $ref: "#/components/schemas/PaymentOption"
            - xml:
                name: paymentOption
              description: The payment option selected for this reservation.
        Start:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: start
              description: The date and time that the reservation started.
        State:
          allOf:
            - $ref: "#/components/schemas/ReservationState"
            - xml:
                name: state
              description: The state of the reservation.
        UpfrontPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: upfrontPrice
              description: The upfront price of the reservation.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the Dedicated Host Reservation.
      description: Details about the Dedicated Host Reservation and associated Dedicated Hosts.
    HostTenancy:
      type: string
      enum:
        - dedicated
        - host
    Hour:
      type: integer
      minimum: 0
      maximum: 23
    HypervisorType:
      type: string
      enum:
        - ovm
        - xen
    IKEVersionsListValue:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: value
              description: The IKE version.
      description: The internet key exchange (IKE) version permitted for the VPN tunnel.
    IKEVersionsList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/IKEVersionsListValue"
          - xml:
              name: item
    IKEVersionsRequestListValue:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IKE version.
      description: The IKE version that is permitted for the VPN tunnel.
    IamInstanceProfile:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: arn
              description: The Amazon Resource Name (ARN) of the instance profile.
        Id:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: id
              description: The ID of the instance profile.
      description: Describes an IAM instance profile.
    IamInstanceProfileAssociationState:
      type: string
      enum:
        - associating
        - associated
        - disassociating
        - disassociated
    IdFormat:
      type: object
      properties:
        Deadline:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: deadline
              description: The date in UTC at which you are permanently switched over to using longer IDs. If a deadline is not yet available for this resource type, this field is not returned.
        Resource:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resource
              description: The type of resource.
        UseLongIds:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: useLongIds
              description: Indicates whether longer IDs (17-character IDs) are enabled for the resource.
      description: Describes the ID format for a resource.
    ImageTypeValues:
      type: string
      enum:
        - machine
        - kernel
        - ramdisk
    ImageState:
      type: string
      enum:
        - pending
        - available
        - invalid
        - deregistered
        - transient
        - failed
        - error
    StateReason:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: code
              description: The reason code for the state change.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: "<p>The message for the state change.</p> <ul> <li> <p> <code>Server.InsufficientInstanceCapacity</code>: There was insufficient capacity available to satisfy the launch request.</p> </li> <li> <p> <code>Server.InternalError</code>: An internal error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Server.ScheduledStop</code>: The instance was stopped due to a scheduled retirement.</p> </li> <li> <p> <code>Server.SpotInstanceShutdown</code>: The instance was stopped because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Server.SpotInstanceTermination</code>: The instance was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price.</p> </li> <li> <p> <code>Client.InstanceInitiatedShutdown</code>: The instance was shut down using the <code>shutdown -h</code> command from the instance.</p> </li> <li> <p> <code>Client.InstanceTerminated</code>: The instance was terminated or rebooted during AMI creation.</p> </li> <li> <p> <code>Client.InternalError</code>: A client error caused the instance to terminate during launch.</p> </li> <li> <p> <code>Client.InvalidSnapshot.NotFound</code>: The specified snapshot was not found.</p> </li> <li> <p> <code>Client.UserInitiatedHibernate</code>: Hibernation was initiated on the instance.</p> </li> <li> <p> <code>Client.UserInitiatedShutdown</code>: The instance was shut down using the Amazon EC2 API.</p> </li> <li> <p> <code>Client.VolumeLimitExceeded</code>: The limit on the number of EBS volumes or total storage was exceeded. Decrease usage or request an increase in your account limits.</p> </li> </ul>"
      description: Describes a state change.
    VirtualizationType:
      type: string
      enum:
        - hvm
        - paravirtual
    Image:
      type: object
      properties:
        Architecture:
          allOf:
            - $ref: "#/components/schemas/ArchitectureValues"
            - xml:
                name: architecture
              description: The architecture of the image.
        CreationDate:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: creationDate
              description: The date and time the image was created.
        ImageId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: imageId
              description: The ID of the AMI.
        ImageLocation:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: imageLocation
              description: The location of the AMI.
        ImageType:
          allOf:
            - $ref: "#/components/schemas/ImageTypeValues"
            - xml:
                name: imageType
              description: The type of image.
        Public:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: isPublic
              description: Indicates whether the image has public launch permissions. The value is <code>true</code> if this image has public launch permissions or <code>false</code> if it has only implicit and explicit launch permissions.
        KernelId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: kernelId
              description: The kernel associated with the image, if any. Only applicable for machine images.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: imageOwnerId
              description: The ID of the Amazon Web Services account that owns the image.
        Platform:
          allOf:
            - $ref: "#/components/schemas/PlatformValues"
            - xml:
                name: platform
              description: This value is set to <code>windows</code> for Windows AMIs; otherwise, it is blank.
        PlatformDetails:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: platformDetails
              description: The platform details associated with the billing code of the AMI. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-billing-info.html">Understanding AMI billing</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
        UsageOperation:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: usageOperation
              description: The operation of the Amazon EC2 instance and the billing code that is associated with the AMI. <code>usageOperation</code> corresponds to the <a href="https://docs.aws.amazon.com/cur/latest/userguide/Lineitem-columns.html#Lineitem-details-O-Operation">lineitem/Operation</a> column on your Amazon Web Services Cost and Usage Report and in the <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/price-changes.html">Amazon Web Services Price List API</a>. You can view these fields on the <b>Instances</b> or <b>AMIs</b> pages in the Amazon EC2 console, or in the responses that are returned by the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImages.html">DescribeImages</a> command in the Amazon EC2 API, or the <a href="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-images.html">describe-images</a> command in the CLI.
        ProductCodes:
          allOf:
            - $ref: "#/components/schemas/ProductCodeList"
            - xml:
                name: productCodes
              description: Any product codes associated with the AMI.
        RamdiskId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ramdiskId
              description: The RAM disk associated with the image, if any. Only applicable for machine images.
        State:
          allOf:
            - $ref: "#/components/schemas/ImageState"
            - xml:
                name: imageState
              description: The current state of the AMI. If the state is <code>available</code>, the image is successfully registered and can be used to launch an instance.
        BlockDeviceMappings:
          allOf:
            - $ref: "#/components/schemas/BlockDeviceMappingList"
            - xml:
                name: blockDeviceMapping
              description: Any block device mapping entries.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: The description of the AMI that was provided during image creation.
        EnaSupport:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: enaSupport
              description: Specifies whether enhanced networking with ENA is enabled.
        Hypervisor:
          allOf:
            - $ref: "#/components/schemas/HypervisorType"
            - xml:
                name: hypervisor
              description: The hypervisor type of the image.
        ImageOwnerAlias:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: imageOwnerAlias
              description: The Amazon Web Services account alias (for example, <code>amazon</code>, <code>self</code>) or the Amazon Web Services account ID of the AMI owner.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: name
              description: The name of the AMI that was provided during image creation.
        RootDeviceName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: rootDeviceName
              description: The device name of the root device volume (for example, <code>/dev/sda1</code>).
        RootDeviceType:
          allOf:
            - $ref: "#/components/schemas/DeviceType"
            - xml:
                name: rootDeviceType
              description: The type of root device used by the AMI. The AMI can use an Amazon EBS volume or an instance store volume.
        SriovNetSupport:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: sriovNetSupport
              description: Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
        StateReason:
          allOf:
            - $ref: "#/components/schemas/StateReason"
            - xml:
                name: stateReason
              description: The reason for the state change.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the image.
        VirtualizationType:
          allOf:
            - $ref: "#/components/schemas/VirtualizationType"
            - xml:
                name: virtualizationType
              description: The type of virtualization of the AMI.
        BootMode:
          allOf:
            - $ref: "#/components/schemas/BootModeValues"
            - xml:
                name: bootMode
              description: The boot mode of the image. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html">Boot modes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
        DeprecationTime:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: deprecationTime
              description: "The date and time to deprecate the AMI, in UTC, in the following format: <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute."
      description: Describes an image.
    ImageDiskContainerList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ImageDiskContainer"
          - xml:
              name: item
    ImportClientVpnClientCertificateRevocationListRequest:
      type: object
      required:
        - ClientVpnEndpointId
        - CertificateRevocationList
      title: ImportClientVpnClientCertificateRevocationListRequest
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointId"
            - description: The ID of the Client VPN endpoint to which the client certificate revocation list applies.
        CertificateRevocationList:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The client certificate revocation list file. For more information, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/cvpn-working-certificates.html#cvpn-working-certificates-generate">Generate a Client Certificate Revocation List</a> in the <i>AWS Client VPN Administrator Guide</i>.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ImportImageLicenseConfigurationResponse:
      type: object
      properties:
        LicenseConfigurationArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: licenseConfigurationArn
              description: The ARN of a license configuration.
      description: " The response information for license configurations."
    ImportImageLicenseSpecificationListRequest:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ImportImageLicenseConfigurationRequest"
          - xml:
              name: item
    ImportImageLicenseSpecificationListResponse:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ImportImageLicenseConfigurationResponse"
          - xml:
              name: item
    ImportImageRequest:
      type: object
      title: ImportImageRequest
      properties:
        Architecture:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The architecture of the virtual machine.</p> <p>Valid values: <code>i386</code> | <code>x86_64</code> | <code>arm64</code> </p>"
        ClientData:
          allOf:
            - $ref: "#/components/schemas/ClientData"
            - description: The client-specific data.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token to enable idempotency for VM import requests.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A description string for the import image task.
        DiskContainers:
          allOf:
            - $ref: "#/components/schemas/ImageDiskContainerList"
            - xml:
                name: DiskContainer
              description: Information about the disk containers.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Specifies whether the destination AMI of the imported image should be encrypted. The default KMS key for EBS is used unless you specify a non-default KMS key using <code>KmsKeyId</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
        Hypervisor:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The target hypervisor platform.</p> <p>Valid values: <code>xen</code> </p>"
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/KmsKeyId"
            - description: "<p>An identifier for the symmetric KMS key to use when creating the encrypted AMI. This parameter is only required if you want to use a non-default KMS key; if this parameter is not specified, the default KMS key for EBS is used. If a <code>KmsKeyId</code> is specified, the <code>Encrypted</code> flag must also be set. </p> <p>The KMS key identifier may be provided in any of the following formats: </p> <ul> <li> <p>Key ID</p> </li> <li> <p>Key alias. The alias ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the <code>alias</code> namespace, and then the key alias. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>.</p> </li> <li> <p>ARN using key ID. The ID ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the <code>key</code> namespace, and then the key ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>.</p> </li> <li> <p>ARN using key alias. The alias ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the <code>alias</code> namespace, and then the key alias. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>. </p> </li> </ul> <p>Amazon Web Services parses <code>KmsKeyId</code> asynchronously, meaning that the action you call may appear to complete even though you provided an invalid identifier. This action will eventually report failure. </p> <p>The specified KMS key must exist in the Region that the AMI is being copied to.</p> <p>Amazon EBS does not support asymmetric KMS keys.</p>"
        LicenseType:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The license type to be used for the Amazon Machine Image (AMI) after importing.</p> <p>By default, we detect the source-system operating system (OS) and apply the appropriate license. Specify <code>AWS</code> to replace the source-system license with an Amazon Web Services license, if appropriate. Specify <code>BYOL</code> to retain the source-system license, if appropriate.</p> <p>To use <code>BYOL</code>, you must have existing licenses with rights to use these licenses in a third party cloud, such as Amazon Web Services. For more information, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html#prerequisites-image">Prerequisites</a> in the VM Import/Export User Guide.</p>
        Platform:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The operating system of the virtual machine.</p> <p>Valid values: <code>Windows</code> | <code>Linux</code> </p>"
        RoleName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the role to use when not using the default role, 'vmimport'.
        LicenseSpecifications:
          allOf:
            - $ref: "#/components/schemas/ImportImageLicenseSpecificationListRequest"
            - description: The ARNs of the license configurations.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the import image task during creation.
        UsageOperation:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The usage operation value. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html">AMI billing information fields</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
        BootMode:
          allOf:
            - $ref: "#/components/schemas/BootModeValues"
            - description: The boot mode of the virtual machine.
    SnapshotDetailList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SnapshotDetail"
          - xml:
              name: item
    ImportImageTask:
      type: object
      properties:
        Architecture:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: architecture
              description: "<p>The architecture of the virtual machine.</p> <p>Valid values: <code>i386</code> | <code>x86_64</code> | <code>arm64</code> </p>"
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description of the import task.
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: encrypted
              description: Indicates whether the image is encrypted.
        Hypervisor:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: hypervisor
              description: "<p>The target hypervisor for the import task.</p> <p>Valid values: <code>xen</code> </p>"
        ImageId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: imageId
              description: The ID of the Amazon Machine Image (AMI) of the imported virtual machine.
        ImportTaskId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: importTaskId
              description: The ID of the import image task.
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: kmsKeyId
              description: The identifier for the KMS key that was used to create the encrypted image.
        LicenseType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: licenseType
              description: The license type of the virtual machine.
        Platform:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: platform
              description: The description string for the import image task.
        Progress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: progress
              description: The percentage of progress of the import image task.
        SnapshotDetails:
          allOf:
            - $ref: "#/components/schemas/SnapshotDetailList"
            - xml:
                name: snapshotDetailSet
              description: Information about the snapshots.
        Status:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: status
              description: A brief status for the import image task.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: statusMessage
              description: A descriptive status message for the import image task.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags for the import image task.
        LicenseSpecifications:
          allOf:
            - $ref: "#/components/schemas/ImportImageLicenseSpecificationListResponse"
            - xml:
                name: licenseSpecifications
              description: The ARNs of the license configurations that are associated with the import image task.
        UsageOperation:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: usageOperation
              description: The usage operation value.
        BootMode:
          allOf:
            - $ref: "#/components/schemas/BootModeValues"
            - xml:
                name: bootMode
              description: The boot mode of the virtual machine.
      description: Describes an import image task.
    ImportInstanceLaunchSpecification:
      type: object
      properties:
        AdditionalInfo:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: additionalInfo
              description: Reserved.
        Architecture:
          allOf:
            - $ref: "#/components/schemas/ArchitectureValues"
            - xml:
                name: architecture
              description: The architecture of the instance.
        GroupIds:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupIdStringList"
            - xml:
                name: GroupId
              description: The security group IDs.
        GroupNames:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupStringList"
            - xml:
                name: GroupName
              description: The security group names.
        InstanceInitiatedShutdownBehavior:
          allOf:
            - $ref: "#/components/schemas/ShutdownBehavior"
            - xml:
                name: instanceInitiatedShutdownBehavior
              description: Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/InstanceType"
            - xml:
                name: instanceType
              description: The instance type. For more information about the instance types that you can import, see <a href="https://docs.aws.amazon.com/vm-import/latest/userguide/vmie_prereqs.html#vmimport-instance-types">Instance Types</a> in the VM Import/Export User Guide.
        Monitoring:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: monitoring
              description: Indicates whether monitoring is enabled.
        Placement:
          allOf:
            - $ref: "#/components/schemas/Placement"
            - xml:
                name: placement
              description: The placement information for the instance.
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateIpAddress
              description: "[EC2-VPC] An available IP address from the IP address range of the subnet."
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - xml:
                name: subnetId
              description: "[EC2-VPC] The ID of the subnet in which to launch the instance."
        UserData:
          allOf:
            - $ref: "#/components/schemas/UserData"
            - xml:
                name: userData
              description: The Base64-encoded user data to make available to the instance.
      description: Describes the launch specification for VM import.
    ImportInstanceRequest:
      type: object
      required:
        - Platform
      title: ImportInstanceRequest
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description for the instance being imported.
        DiskImages:
          allOf:
            - $ref: "#/components/schemas/DiskImageList"
            - xml:
                name: diskImage
              description: The disk image.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        LaunchSpecification:
          allOf:
            - $ref: "#/components/schemas/ImportInstanceLaunchSpecification"
            - xml:
                name: launchSpecification
              description: The launch specification.
        Platform:
          allOf:
            - $ref: "#/components/schemas/PlatformValues"
            - xml:
                name: platform
              description: The instance operating system.
    ImportInstanceVolumeDetailSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ImportInstanceVolumeDetailItem"
          - xml:
              name: item
    ImportInstanceVolumeDetailItem:
      type: object
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone where the resulting instance will reside.
        BytesConverted:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: bytesConverted
              description: The number of bytes converted so far.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description of the task.
        Image:
          allOf:
            - $ref: "#/components/schemas/DiskImageDescription"
            - xml:
                name: image
              description: The image.
        Status:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: status
              description: The status of the import of this particular disk image.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: statusMessage
              description: The status information or errors related to the disk image.
        Volume:
          allOf:
            - $ref: "#/components/schemas/DiskImageVolumeDescription"
            - xml:
                name: volume
              description: The volume.
      description: Describes an import volume task.
    ImportKeyPairRequest:
      type: object
      required:
        - KeyName
        - PublicKeyMaterial
      title: ImportKeyPairRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        KeyName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: keyName
              description: A unique name for the key pair.
        PublicKeyMaterial:
          allOf:
            - $ref: "#/components/schemas/Blob"
            - xml:
                name: publicKeyMaterial
              description: The public key. For API calls, the text must be base64-encoded. For command line tools, base64 encoding is performed for you.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the imported key pair.
    SnapshotDiskContainer:
      type: object
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The description of the disk image being imported.
        Format:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The format of the disk image being imported.</p> <p>Valid values: <code>VHD</code> | <code>VMDK</code> | <code>RAW</code> </p>"
        Url:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The URL to the Amazon S3-based disk image being imported. It can either be a https URL (https://..) or an Amazon S3 URL (s3://..).
        UserBucket:
          allOf:
            - $ref: "#/components/schemas/UserBucket"
            - description: The Amazon S3 bucket for the disk image.
      description: The disk container object for the import snapshot request.
    ImportSnapshotRequest:
      type: object
      title: ImportSnapshotRequest
      properties:
        ClientData:
          allOf:
            - $ref: "#/components/schemas/ClientData"
            - description: The client-specific data.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Token to enable idempotency for VM import requests.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The description string for the import snapshot task.
        DiskContainer:
          allOf:
            - $ref: "#/components/schemas/SnapshotDiskContainer"
            - description: Information about the disk container.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Specifies whether the destination snapshot of the imported image should be encrypted. The default KMS key for EBS is used unless you specify a non-default KMS key using <code>KmsKeyId</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html">Amazon EBS Encryption</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/KmsKeyId"
            - description: "<p>An identifier for the symmetric KMS key to use when creating the encrypted snapshot. This parameter is only required if you want to use a non-default KMS key; if this parameter is not specified, the default KMS key for EBS is used. If a <code>KmsKeyId</code> is specified, the <code>Encrypted</code> flag must also be set. </p> <p>The KMS key identifier may be provided in any of the following formats: </p> <ul> <li> <p>Key ID</p> </li> <li> <p>Key alias. The alias ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the <code>alias</code> namespace, and then the key alias. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>.</p> </li> <li> <p>ARN using key ID. The ID ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the <code>key</code> namespace, and then the key ID. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:key/<i>abcd1234-a123-456a-a12b-a123b4cd56ef</i>.</p> </li> <li> <p>ARN using key alias. The alias ARN contains the <code>arn:aws:kms</code> namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the <code>alias</code> namespace, and then the key alias. For example, arn:aws:kms:<i>us-east-1</i>:<i>012345678910</i>:alias/<i>ExampleAlias</i>. </p> </li> </ul> <p>Amazon Web Services parses <code>KmsKeyId</code> asynchronously, meaning that the action you call may appear to complete even though you provided an invalid identifier. This action will eventually report failure. </p> <p>The specified KMS key must exist in the Region that the snapshot is being copied to.</p> <p>Amazon EBS does not support asymmetric KMS keys.</p>"
        RoleName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the role to use when not using the default role, 'vmimport'.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the import snapshot task during creation.
    SnapshotTaskDetail:
      type: object
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: The description of the snapshot.
        DiskImageSize:
          allOf:
            - $ref: "#/components/schemas/Double"
            - xml:
                name: diskImageSize
              description: The size of the disk in the snapshot, in GiB.
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: encrypted
              description: Indicates whether the snapshot is encrypted.
        Format:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: format
              description: The format of the disk image from which the snapshot is created.
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: kmsKeyId
              description: The identifier for the KMS key that was used to create the encrypted snapshot.
        Progress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: progress
              description: The percentage of completion for the import snapshot task.
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: snapshotId
              description: The snapshot ID of the disk being imported.
        Status:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: status
              description: A brief status for the import snapshot task.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: statusMessage
              description: A detailed status message for the import snapshot task.
        Url:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: url
              description: The URL of the disk image from which the snapshot is created.
        UserBucket:
          allOf:
            - $ref: "#/components/schemas/UserBucketDetails"
            - xml:
                name: userBucket
              description: The Amazon S3 bucket for the disk image.
      description: Details about the import snapshot task.
    ImportSnapshotTask:
      type: object
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description of the import snapshot task.
        ImportTaskId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: importTaskId
              description: The ID of the import snapshot task.
        SnapshotTaskDetail:
          allOf:
            - $ref: "#/components/schemas/SnapshotTaskDetail"
            - xml:
                name: snapshotTaskDetail
              description: Describes an import snapshot task.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags for the import snapshot task.
      description: Describes an import snapshot task.
    ImportVolumeRequest:
      type: object
      required:
        - AvailabilityZone
        - Image
        - Volume
      title: ImportVolumeRequest
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone for the resulting EBS volume.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description of the volume.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Image:
          allOf:
            - $ref: "#/components/schemas/DiskImageDetail"
            - xml:
                name: image
              description: The disk image.
        Volume:
          allOf:
            - $ref: "#/components/schemas/VolumeDetail"
            - xml:
                name: volume
              description: The volume size.
    InferenceDeviceInfoList:
      type: array
      items:
        $ref: "#/components/schemas/InferenceDeviceInfo"
    InferenceAcceleratorInfo:
      type: object
      properties:
        Accelerators:
          allOf:
            - $ref: "#/components/schemas/InferenceDeviceInfoList"
            - xml:
                name: accelerators
              description: Describes the Inference accelerators for the instance type.
      description: Describes the Inference accelerators for the instance type.
    InferenceDeviceCount:
      type: integer
    InferenceDeviceName:
      type: string
    InferenceDeviceManufacturerName:
      type: string
    InferenceDeviceInfo:
      type: object
      properties:
        Count:
          allOf:
            - $ref: "#/components/schemas/InferenceDeviceCount"
            - xml:
                name: count
              description: The number of Inference accelerators for the instance type.
        Name:
          allOf:
            - $ref: "#/components/schemas/InferenceDeviceName"
            - xml:
                name: name
              description: The name of the Inference accelerator.
        Manufacturer:
          allOf:
            - $ref: "#/components/schemas/InferenceDeviceManufacturerName"
            - xml:
                name: manufacturer
              description: The manufacturer of the Inference accelerator.
      description: Describes the Inference accelerators for the instance type.
    Monitoring:
      type: object
      properties:
        State:
          allOf:
            - $ref: "#/components/schemas/MonitoringState"
            - xml:
                name: state
              description: Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
      description: Describes the monitoring of an instance.
    InstanceState:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: code
              description: "<p>The state of the instance as a 16-bit unsigned integer. </p> <p>The high byte is all of the bits between 2^8 and (2^16)-1, which equals decimal values between 256 and 65,535. These numerical values are used for internal purposes and should be ignored.</p> <p>The low byte is all of the bits between 2^0 and (2^8)-1, which equals decimal values between 0 and 255. </p> <p>The valid values for instance-state-code will all be in the range of the low byte and they are:</p> <ul> <li> <p> <code>0</code> : <code>pending</code> </p> </li> <li> <p> <code>16</code> : <code>running</code> </p> </li> <li> <p> <code>32</code> : <code>shutting-down</code> </p> </li> <li> <p> <code>48</code> : <code>terminated</code> </p> </li> <li> <p> <code>64</code> : <code>stopping</code> </p> </li> <li> <p> <code>80</code> : <code>stopped</code> </p> </li> </ul> <p>You can ignore the high byte value by zeroing out all of the bits above 2^8 or 256 in decimal.</p>"
        Name:
          allOf:
            - $ref: "#/components/schemas/InstanceStateName"
            - xml:
                name: name
              description: The current state of the instance.
      description: Describes the current state of an instance.
    InstanceBlockDeviceMappingList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceBlockDeviceMapping"
          - xml:
              name: item
    InstanceLifecycleType:
      type: string
      enum:
        - spot
        - scheduled
    InstanceNetworkInterfaceList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceNetworkInterface"
          - xml:
              name: item
    LicenseList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LicenseConfiguration"
          - xml:
              name: item
    InstanceMetadataOptionsResponse:
      type: object
      properties:
        State:
          allOf:
            - $ref: "#/components/schemas/InstanceMetadataOptionsState"
            - xml:
                name: state
              description: <p>The state of the metadata option changes.</p> <p> <code>pending</code> - The metadata options are being updated and the instance is not ready to process metadata traffic with the new selection.</p> <p> <code>applied</code> - The metadata options have been successfully applied on the instance.</p>
        HttpTokens:
          allOf:
            - $ref: "#/components/schemas/HttpTokensState"
            - xml:
                name: httpTokens
              description: <p>The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is <code>optional</code>.</p> <p>If the state is <code>optional</code>, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.</p> <p>If the state is <code>required</code>, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credential always returns the version 2.0 credentials; the version 1.0 credentials are not available.</p>
        HttpPutResponseHopLimit:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: httpPutResponseHopLimit
              description: "<p>The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.</p> <p>Default: 1</p> <p>Possible values: Integers from 1 to 64</p>"
        HttpEndpoint:
          allOf:
            - $ref: "#/components/schemas/InstanceMetadataEndpointState"
            - xml:
                name: httpEndpoint
              description: <p>This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is <code>enabled</code>.</p> <note> <p>If you specify a value of <code>disabled</code>, you will not be able to access your instance metadata.</p> </note>
        HttpProtocolIpv6:
          allOf:
            - $ref: "#/components/schemas/InstanceMetadataProtocolState"
            - xml:
                name: httpProtocolIpv6
              description: Whether or not the IPv6 endpoint for the instance metadata service is enabled or disabled.
      description: The metadata options for the instance.
    Instance:
      type: object
      properties:
        AmiLaunchIndex:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: amiLaunchIndex
              description: The AMI launch index, which can be used to find this instance in the launch group.
        ImageId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: imageId
              description: The ID of the AMI used to launch the instance.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/InstanceType"
            - xml:
                name: instanceType
              description: The instance type.
        KernelId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: kernelId
              description: The kernel associated with this instance, if applicable.
        KeyName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: keyName
              description: The name of the key pair, if this instance was launched with an associated key pair.
        LaunchTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: launchTime
              description: The time the instance was launched.
        Monitoring:
          allOf:
            - $ref: "#/components/schemas/Monitoring"
            - xml:
                name: monitoring
              description: The monitoring for the instance.
        Placement:
          allOf:
            - $ref: "#/components/schemas/Placement"
            - xml:
                name: placement
              description: The location where the instance launched, if applicable.
        Platform:
          allOf:
            - $ref: "#/components/schemas/PlatformValues"
            - xml:
                name: platform
              description: The value is <code>Windows</code> for Windows instances; otherwise blank.
        PrivateDnsName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateDnsName
              description: <p>(IPv4 only) The private DNS hostname name assigned to the instance. This DNS hostname can only be used inside the Amazon EC2 network. This name is not available until the instance enters the <code>running</code> state. </p> <p>[EC2-VPC] The Amazon-provided DNS server resolves Amazon-provided private DNS hostnames if you've enabled DNS resolution and DNS hostnames in your VPC. If you are not using the Amazon-provided DNS server in your VPC, your custom domain name servers must resolve the hostname as appropriate.</p>
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateIpAddress
              description: The private IPv4 address assigned to the instance.
        ProductCodes:
          allOf:
            - $ref: "#/components/schemas/ProductCodeList"
            - xml:
                name: productCodes
              description: The product codes attached to this instance, if applicable.
        PublicDnsName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: dnsName
              description: (IPv4 only) The public DNS name assigned to the instance. This name is not available until the instance enters the <code>running</code> state. For EC2-VPC, this name is only available if you've enabled DNS hostnames for your VPC.
        PublicIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipAddress
              description: <p>The public IPv4 address, or the Carrier IP address assigned to the instance, if applicable.</p> <p>A Carrier IP address only applies to an instance launched in a subnet associated with a Wavelength Zone.</p>
        RamdiskId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ramdiskId
              description: The RAM disk associated with this instance, if applicable.
        State:
          allOf:
            - $ref: "#/components/schemas/InstanceState"
            - xml:
                name: instanceState
              description: The current state of the instance.
        StateTransitionReason:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: reason
              description: The reason for the most recent state transition. This might be an empty string.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: subnetId
              description: "[EC2-VPC] The ID of the subnet in which the instance is running."
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: "[EC2-VPC] The ID of the VPC in which the instance is running."
        Architecture:
          allOf:
            - $ref: "#/components/schemas/ArchitectureValues"
            - xml:
                name: architecture
              description: The architecture of the image.
        BlockDeviceMappings:
          allOf:
            - $ref: "#/components/schemas/InstanceBlockDeviceMappingList"
            - xml:
                name: blockDeviceMapping
              description: Any block device mapping entries for the instance.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: The idempotency token you provided when you launched the instance, if applicable.
        EbsOptimized:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: ebsOptimized
              description: Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.
        EnaSupport:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: enaSupport
              description: Specifies whether enhanced networking with ENA is enabled.
        Hypervisor:
          allOf:
            - $ref: "#/components/schemas/HypervisorType"
            - xml:
                name: hypervisor
              description: The hypervisor type of the instance. The value <code>xen</code> is used for both Xen and Nitro hypervisors.
        IamInstanceProfile:
          allOf:
            - $ref: "#/components/schemas/IamInstanceProfile"
            - xml:
                name: iamInstanceProfile
              description: The IAM instance profile associated with the instance, if applicable.
        InstanceLifecycle:
          allOf:
            - $ref: "#/components/schemas/InstanceLifecycleType"
            - xml:
                name: instanceLifecycle
              description: Indicates whether this is a Spot Instance or a Scheduled Instance.
        ElasticGpuAssociations:
          allOf:
            - $ref: "#/components/schemas/ElasticGpuAssociationList"
            - xml:
                name: elasticGpuAssociationSet
              description: The Elastic GPU associated with the instance.
        ElasticInferenceAcceleratorAssociations:
          allOf:
            - $ref: "#/components/schemas/ElasticInferenceAcceleratorAssociationList"
            - xml:
                name: elasticInferenceAcceleratorAssociationSet
              description: " The elastic inference accelerator associated with the instance."
        NetworkInterfaces:
          allOf:
            - $ref: "#/components/schemas/InstanceNetworkInterfaceList"
            - xml:
                name: networkInterfaceSet
              description: "[EC2-VPC] The network interfaces for the instance."
        OutpostArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: outpostArn
              description: The Amazon Resource Name (ARN) of the Outpost.
        RootDeviceName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: rootDeviceName
              description: The device name of the root device volume (for example, <code>/dev/sda1</code>).
        RootDeviceType:
          allOf:
            - $ref: "#/components/schemas/DeviceType"
            - xml:
                name: rootDeviceType
              description: The root device type used by the AMI. The AMI can use an EBS volume or an instance store volume.
        SecurityGroups:
          allOf:
            - $ref: "#/components/schemas/GroupIdentifierList"
            - xml:
                name: groupSet
              description: The security groups for the instance.
        SourceDestCheck:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: sourceDestCheck
              description: Indicates whether source/destination checking is enabled.
        SpotInstanceRequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: spotInstanceRequestId
              description: If the request is a Spot Instance request, the ID of the request.
        SriovNetSupport:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: sriovNetSupport
              description: Specifies whether enhanced networking with the Intel 82599 Virtual Function interface is enabled.
        StateReason:
          allOf:
            - $ref: "#/components/schemas/StateReason"
            - xml:
                name: stateReason
              description: The reason for the most recent state transition.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the instance.
        VirtualizationType:
          allOf:
            - $ref: "#/components/schemas/VirtualizationType"
            - xml:
                name: virtualizationType
              description: The virtualization type of the instance.
        CpuOptions:
          allOf:
            - $ref: "#/components/schemas/CpuOptions"
            - xml:
                name: cpuOptions
              description: The CPU options for the instance.
        CapacityReservationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: capacityReservationId
              description: The ID of the Capacity Reservation.
        CapacityReservationSpecification:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationSpecificationResponse"
            - xml:
                name: capacityReservationSpecification
              description: Information about the Capacity Reservation targeting option.
        HibernationOptions:
          allOf:
            - $ref: "#/components/schemas/HibernationOptions"
            - xml:
                name: hibernationOptions
              description: Indicates whether the instance is enabled for hibernation.
        Licenses:
          allOf:
            - $ref: "#/components/schemas/LicenseList"
            - xml:
                name: licenseSet
              description: The license configurations.
        MetadataOptions:
          allOf:
            - $ref: "#/components/schemas/InstanceMetadataOptionsResponse"
            - xml:
                name: metadataOptions
              description: The metadata options for the instance.
        EnclaveOptions:
          allOf:
            - $ref: "#/components/schemas/EnclaveOptions"
            - xml:
                name: enclaveOptions
              description: Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.
        BootMode:
          allOf:
            - $ref: "#/components/schemas/BootModeValues"
            - xml:
                name: bootMode
              description: The boot mode of the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html">Boot modes</a> in the <i>Amazon EC2 User Guide</i>.
      description: Describes an instance.
    InstanceBlockDeviceMapping:
      type: object
      properties:
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: deviceName
              description: The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).
        Ebs:
          allOf:
            - $ref: "#/components/schemas/EbsInstanceBlockDevice"
            - xml:
                name: ebs
              description: Parameters used to automatically set up EBS volumes when the instance is launched.
      description: Describes a block device mapping.
    InstanceBlockDeviceMappingSpecificationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceBlockDeviceMappingSpecification"
          - xml:
              name: item
    ListingState:
      type: string
      enum:
        - available
        - sold
        - cancelled
        - pending
    InstanceCount:
      type: object
      properties:
        InstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: instanceCount
              description: The number of listed Reserved Instances in the state specified by the <code>state</code>.
        State:
          allOf:
            - $ref: "#/components/schemas/ListingState"
            - xml:
                name: state
              description: The states of the listed Reserved Instances.
      description: Describes a Reserved Instance listing state.
    InstanceCountList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceCount"
          - xml:
              name: item
    InstanceCreditSpecification:
      type: object
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance.
        CpuCredits:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cpuCredits
              description: The credit option for CPU usage of the instance. Valid values are <code>standard</code> and <code>unlimited</code>.
      description: "Describes the credit option for CPU usage of a burstable performance instance. "
    InstanceCreditSpecificationListRequest:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceCreditSpecificationRequest"
          - xml:
              name: item
    InstanceEventId:
      type: string
    InstanceEventWindowTimeRangeList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceEventWindowTimeRange"
          - xml:
              name: item
    InstanceEventWindowAssociationTarget:
      type: object
      properties:
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIdList"
            - xml:
                name: instanceIdSet
              description: The IDs of the instances associated with the event window.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The instance tags associated with the event window. Any instances associated with the tags will be associated with the event window.
        DedicatedHostIds:
          allOf:
            - $ref: "#/components/schemas/DedicatedHostIdList"
            - xml:
                name: dedicatedHostIdSet
              description: The IDs of the Dedicated Hosts associated with the event window.
      description: One or more targets associated with the event window.
    InstanceEventWindowState:
      type: string
      enum:
        - creating
        - deleting
        - active
        - deleted
    WeekDay:
      type: string
      enum:
        - sunday
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
    InstanceEventWindowTimeRange:
      type: object
      properties:
        StartWeekDay:
          allOf:
            - $ref: "#/components/schemas/WeekDay"
            - xml:
                name: startWeekDay
              description: The day on which the time range begins.
        StartHour:
          allOf:
            - $ref: "#/components/schemas/Hour"
            - xml:
                name: startHour
              description: The hour when the time range begins.
        EndWeekDay:
          allOf:
            - $ref: "#/components/schemas/WeekDay"
            - xml:
                name: endWeekDay
              description: The day on which the time range ends.
        EndHour:
          allOf:
            - $ref: "#/components/schemas/Hour"
            - xml:
                name: endHour
              description: The hour when the time range ends.
      description: The start day and time and the end day and time of the time range, in UTC.
    InstanceIdSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceId"
          - xml:
              name: item
    InstanceIpv4Prefix:
      type: object
      properties:
        Ipv4Prefix:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipv4Prefix
              description: One or more IPv4 prefixes assigned to the network interface.
      description: Information about an IPv4 prefix.
    InstanceIpv4PrefixList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceIpv4Prefix"
          - xml:
              name: item
    InstanceIpv6AddressRequest:
      type: object
      properties:
        Ipv6Address:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IPv6 address.
      description: Describes an IPv6 address.
    InstanceIpv6AddressListRequest:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceIpv6AddressRequest"
          - xml:
              name: InstanceIpv6Address
    InstanceIpv6Prefix:
      type: object
      properties:
        Ipv6Prefix:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipv6Prefix
              description: One or more IPv6 prefixes assigned to the network interface.
      description: Information about an IPv6 prefix.
    InstanceIpv6PrefixList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceIpv6Prefix"
          - xml:
              name: item
    InstanceList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Instance"
          - xml:
              name: item
    InstanceMarketOptionsRequest:
      type: object
      properties:
        MarketType:
          allOf:
            - $ref: "#/components/schemas/MarketType"
            - description: The market type.
        SpotOptions:
          allOf:
            - $ref: "#/components/schemas/SpotMarketOptions"
            - description: The options for Spot Instances.
      description: Describes the market (purchasing) option for the instances.
    InstanceMetadataOptionsRequest:
      type: object
      properties:
        HttpTokens:
          allOf:
            - $ref: "#/components/schemas/HttpTokensState"
            - description: <p>The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is <code>optional</code>.</p> <p>If the state is <code>optional</code>, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.</p> <p>If the state is <code>required</code>, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.</p>
        HttpPutResponseHopLimit:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.</p> <p>Default: 1</p> <p>Possible values: Integers from 1 to 64</p>"
        HttpEndpoint:
          allOf:
            - $ref: "#/components/schemas/InstanceMetadataEndpointState"
            - description: <p>This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is <code>enabled</code>.</p> <note> <p>If you specify a value of <code>disabled</code>, you will not be able to access your instance metadata.</p> </note>
        HttpProtocolIpv6:
          allOf:
            - $ref: "#/components/schemas/InstanceMetadataProtocolState"
            - description: Enables or disables the IPv6 endpoint for the instance metadata service.
      description: The metadata options for the instance.
    InstanceMetadataOptionsState:
      type: string
      enum:
        - pending
        - applied
    InstanceMonitoring:
      type: object
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance.
        Monitoring:
          allOf:
            - $ref: "#/components/schemas/Monitoring"
            - xml:
                name: monitoring
              description: The monitoring for the instance.
      description: Describes the monitoring of an instance.
    InstanceMonitoringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceMonitoring"
          - xml:
              name: item
    InstanceNetworkInterfaceAssociation:
      type: object
      properties:
        CarrierIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: carrierIp
              description: The carrier IP address associated with the network interface.
        IpOwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipOwnerId
              description: The ID of the owner of the Elastic IP address.
        PublicDnsName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: publicDnsName
              description: The public DNS name.
        PublicIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: publicIp
              description: The public IP address or Elastic IP address bound to the network interface.
      description: Describes association information for an Elastic IP address (IPv4).
    InstanceNetworkInterfaceAttachment:
      type: object
      properties:
        AttachTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: attachTime
              description: The time stamp when the attachment initiated.
        AttachmentId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: attachmentId
              description: The ID of the network interface attachment.
        DeleteOnTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: deleteOnTermination
              description: Indicates whether the network interface is deleted when the instance is terminated.
        DeviceIndex:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: deviceIndex
              description: The index of the device on the instance for the network interface attachment.
        Status:
          allOf:
            - $ref: "#/components/schemas/AttachmentStatus"
            - xml:
                name: status
              description: The attachment state.
        NetworkCardIndex:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: networkCardIndex
              description: The index of the network card.
      description: Describes a network interface attachment.
    InstancePrivateIpAddressList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstancePrivateIpAddress"
          - xml:
              name: item
    NetworkInterfaceStatus:
      type: string
      enum:
        - available
        - associated
        - attaching
        - in-use
        - detaching
    InstanceNetworkInterface:
      type: object
      properties:
        Association:
          allOf:
            - $ref: "#/components/schemas/InstanceNetworkInterfaceAssociation"
            - xml:
                name: association
              description: The association information for an Elastic IPv4 associated with the network interface.
        Attachment:
          allOf:
            - $ref: "#/components/schemas/InstanceNetworkInterfaceAttachment"
            - xml:
                name: attachment
              description: The network interface attachment.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: The description.
        Groups:
          allOf:
            - $ref: "#/components/schemas/GroupIdentifierList"
            - xml:
                name: groupSet
              description: One or more security groups.
        Ipv6Addresses:
          allOf:
            - $ref: "#/components/schemas/InstanceIpv6AddressList"
            - xml:
                name: ipv6AddressesSet
              description: One or more IPv6 addresses associated with the network interface.
        MacAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: macAddress
              description: The MAC address.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkInterfaceId
              description: The ID of the network interface.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the Amazon Web Services account that created the network interface.
        PrivateDnsName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateDnsName
              description: The private DNS name.
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateIpAddress
              description: The IPv4 address of the network interface within the subnet.
        PrivateIpAddresses:
          allOf:
            - $ref: "#/components/schemas/InstancePrivateIpAddressList"
            - xml:
                name: privateIpAddressesSet
              description: One or more private IPv4 addresses associated with the network interface.
        SourceDestCheck:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: sourceDestCheck
              description: Indicates whether source/destination checking is enabled.
        Status:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceStatus"
            - xml:
                name: status
              description: The status of the network interface.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: subnetId
              description: The ID of the subnet.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC.
        InterfaceType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: interfaceType
              description: "<p>Describes the type of network interface.</p> <p>Valid values: <code>interface</code> | <code>efa</code> | <code>trunk</code> </p>"
        Ipv4Prefixes:
          allOf:
            - $ref: "#/components/schemas/InstanceIpv4PrefixList"
            - xml:
                name: ipv4PrefixSet
              description: The IPv4 delegated prefixes that are assigned to the network interface.
        Ipv6Prefixes:
          allOf:
            - $ref: "#/components/schemas/InstanceIpv6PrefixList"
            - xml:
                name: ipv6PrefixSet
              description: The IPv6 delegated prefixes that are assigned to the network interface.
      description: Describes a network interface.
    InstancePrivateIpAddress:
      type: object
      properties:
        Association:
          allOf:
            - $ref: "#/components/schemas/InstanceNetworkInterfaceAssociation"
            - xml:
                name: association
              description: The association information for an Elastic IP address for the network interface.
        Primary:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: primary
              description: Indicates whether this IPv4 address is the primary private IP address of the network interface.
        PrivateDnsName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateDnsName
              description: The private IPv4 DNS name.
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateIpAddress
              description: The private IPv4 address of the network interface.
      description: Describes a private IPv4 address.
    InstanceStateName:
      type: string
      enum:
        - pending
        - running
        - shutting-down
        - terminated
        - stopping
        - stopped
    InstanceStateChange:
      type: object
      properties:
        CurrentState:
          allOf:
            - $ref: "#/components/schemas/InstanceState"
            - xml:
                name: currentState
              description: The current state of the instance.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance.
        PreviousState:
          allOf:
            - $ref: "#/components/schemas/InstanceState"
            - xml:
                name: previousState
              description: The previous state of the instance.
      description: Describes an instance state change.
    InstanceStateChangeList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceStateChange"
          - xml:
              name: item
    InstanceStatusEventList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceStatusEvent"
          - xml:
              name: item
    InstanceStatusSummary:
      type: object
      properties:
        Details:
          allOf:
            - $ref: "#/components/schemas/InstanceStatusDetailsList"
            - xml:
                name: details
              description: The system instance health or application instance health.
        Status:
          allOf:
            - $ref: "#/components/schemas/SummaryStatus"
            - xml:
                name: status
              description: The status.
      description: Describes the status of an instance.
    InstanceStatus:
      type: object
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone of the instance.
        OutpostArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: outpostArn
              description: The Amazon Resource Name (ARN) of the Outpost.
        Events:
          allOf:
            - $ref: "#/components/schemas/InstanceStatusEventList"
            - xml:
                name: eventsSet
              description: Any scheduled events associated with the instance.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance.
        InstanceState:
          allOf:
            - $ref: "#/components/schemas/InstanceState"
            - xml:
                name: instanceState
              description: The intended state of the instance. <a>DescribeInstanceStatus</a> requires that an instance be in the <code>running</code> state.
        InstanceStatus:
          allOf:
            - $ref: "#/components/schemas/InstanceStatusSummary"
            - xml:
                name: instanceStatus
              description: Reports impaired functionality that stems from issues internal to the instance, such as impaired reachability.
        SystemStatus:
          allOf:
            - $ref: "#/components/schemas/InstanceStatusSummary"
            - xml:
                name: systemStatus
              description: Reports impaired functionality that stems from issues related to the systems that support an instance, such as hardware failures and network connectivity problems.
      description: Describes the status of an instance.
    StatusName:
      type: string
      enum:
        - reachability
    StatusType:
      type: string
      enum:
        - passed
        - failed
        - insufficient-data
        - initializing
    InstanceStatusDetails:
      type: object
      properties:
        ImpairedSince:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: impairedSince
              description: The time when a status check failed. For an instance that was launched and impaired, this is the time when the instance was launched.
        Name:
          allOf:
            - $ref: "#/components/schemas/StatusName"
            - xml:
                name: name
              description: The type of instance status.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusType"
            - xml:
                name: status
              description: The status.
      description: Describes the instance status.
    InstanceStatusDetailsList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/InstanceStatusDetails"
          - xml:
              name: item
    InstanceStatusEvent:
      type: object
      properties:
        InstanceEventId:
          allOf:
            - $ref: "#/components/schemas/InstanceEventId"
            - xml:
                name: instanceEventId
              description: The ID of the event.
        Code:
          allOf:
            - $ref: "#/components/schemas/EventCode"
            - xml:
                name: code
              description: The event code.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: "<p>A description of the event.</p> <p>After a scheduled event is completed, it can still be described for up to a week. If the event has been completed, this description starts with the following text: [Completed].</p>"
        NotAfter:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: notAfter
              description: The latest scheduled end time for the event.
        NotBefore:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: notBefore
              description: The earliest scheduled start time for the event.
        NotBeforeDeadline:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: notBeforeDeadline
              description: The deadline for starting the event.
      description: Describes a scheduled event for an instance.
    SummaryStatus:
      type: string
      enum:
        - ok
        - impaired
        - insufficient-data
        - not-applicable
        - initializing
    InstanceStorageFlag:
      type: boolean
    InstanceStorageInfo:
      type: object
      properties:
        TotalSizeInGB:
          allOf:
            - $ref: "#/components/schemas/DiskSize"
            - xml:
                name: totalSizeInGB
              description: The total size of the disks, in GB.
        Disks:
          allOf:
            - $ref: "#/components/schemas/DiskInfoList"
            - xml:
                name: disks
              description: Describes the disks that are available for the instance type.
        NvmeSupport:
          allOf:
            - $ref: "#/components/schemas/EphemeralNvmeSupport"
            - xml:
                name: nvmeSupport
              description: Indicates whether non-volatile memory express (NVMe) is supported for instance store.
      description: Describes the disks that are available for the instance type.
    InstanceTypeHypervisor:
      type: string
      enum:
        - nitro
        - xen
    UsageClassTypeList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/UsageClassType"
          - xml:
              name: item
    RootDeviceTypeList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/RootDeviceType"
          - xml:
              name: item
    VirtualizationTypeList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VirtualizationType"
          - xml:
              name: item
    ProcessorInfo:
      type: object
      properties:
        SupportedArchitectures:
          allOf:
            - $ref: "#/components/schemas/ArchitectureTypeList"
            - xml:
                name: supportedArchitectures
              description: The architectures supported by the instance type.
        SustainedClockSpeedInGhz:
          allOf:
            - $ref: "#/components/schemas/ProcessorSustainedClockSpeed"
            - xml:
                name: sustainedClockSpeedInGhz
              description: The speed of the processor, in GHz.
      description: Describes the processor used by the instance type.
    VCpuInfo:
      type: object
      properties:
        DefaultVCpus:
          allOf:
            - $ref: "#/components/schemas/VCpuCount"
            - xml:
                name: defaultVCpus
              description: The default number of vCPUs for the instance type.
        DefaultCores:
          allOf:
            - $ref: "#/components/schemas/CoreCount"
            - xml:
                name: defaultCores
              description: The default number of cores for the instance type.
        DefaultThreadsPerCore:
          allOf:
            - $ref: "#/components/schemas/ThreadsPerCore"
            - xml:
                name: defaultThreadsPerCore
              description: The default number of threads per core for the instance type.
        ValidCores:
          allOf:
            - $ref: "#/components/schemas/CoreCountList"
            - xml:
                name: validCores
              description: The valid number of cores that can be configured for the instance type.
        ValidThreadsPerCore:
          allOf:
            - $ref: "#/components/schemas/ThreadsPerCoreList"
            - xml:
                name: validThreadsPerCore
              description: "The valid number of threads per core that can be configured for the instance type. "
      description: Describes the vCPU configurations for the instance type.
    MemoryInfo:
      type: object
      properties:
        SizeInMiB:
          allOf:
            - $ref: "#/components/schemas/MemorySize"
            - xml:
                name: sizeInMiB
              description: The size of the memory, in MiB.
      description: Describes the memory for the instance type.
    NetworkInfo:
      type: object
      properties:
        NetworkPerformance:
          allOf:
            - $ref: "#/components/schemas/NetworkPerformance"
            - xml:
                name: networkPerformance
              description: The network performance.
        MaximumNetworkInterfaces:
          allOf:
            - $ref: "#/components/schemas/MaxNetworkInterfaces"
            - xml:
                name: maximumNetworkInterfaces
              description: The maximum number of network interfaces for the instance type.
        MaximumNetworkCards:
          allOf:
            - $ref: "#/components/schemas/MaximumNetworkCards"
            - xml:
                name: maximumNetworkCards
              description: The maximum number of physical network cards that can be allocated to the instance.
        DefaultNetworkCardIndex:
          allOf:
            - $ref: "#/components/schemas/DefaultNetworkCardIndex"
            - xml:
                name: defaultNetworkCardIndex
              description: The index of the default network card, starting at 0.
        NetworkCards:
          allOf:
            - $ref: "#/components/schemas/NetworkCardInfoList"
            - xml:
                name: networkCards
              description: Describes the network cards for the instance type.
        Ipv4AddressesPerInterface:
          allOf:
            - $ref: "#/components/schemas/MaxIpv4AddrPerInterface"
            - xml:
                name: ipv4AddressesPerInterface
              description: The maximum number of IPv4 addresses per network interface.
        Ipv6AddressesPerInterface:
          allOf:
            - $ref: "#/components/schemas/MaxIpv6AddrPerInterface"
            - xml:
                name: ipv6AddressesPerInterface
              description: The maximum number of IPv6 addresses per network interface.
        Ipv6Supported:
          allOf:
            - $ref: "#/components/schemas/Ipv6Flag"
            - xml:
                name: ipv6Supported
              description: Indicates whether IPv6 is supported.
        EnaSupport:
          allOf:
            - $ref: "#/components/schemas/EnaSupport"
            - xml:
                name: enaSupport
              description: Indicates whether Elastic Network Adapter (ENA) is supported.
        EfaSupported:
          allOf:
            - $ref: "#/components/schemas/EfaSupportedFlag"
            - xml:
                name: efaSupported
              description: Indicates whether Elastic Fabric Adapter (EFA) is supported.
        EfaInfo:
          allOf:
            - $ref: "#/components/schemas/EfaInfo"
            - xml:
                name: efaInfo
              description: Describes the Elastic Fabric Adapters for the instance type.
        EncryptionInTransitSupported:
          allOf:
            - $ref: "#/components/schemas/EncryptionInTransitSupported"
            - xml:
                name: encryptionInTransitSupported
              description: Indicates whether the instance type automatically encrypts in-transit traffic between instances.
      description: Describes the networking features of the instance type.
    PlacementGroupInfo:
      type: object
      properties:
        SupportedStrategies:
          allOf:
            - $ref: "#/components/schemas/PlacementGroupStrategyList"
            - xml:
                name: supportedStrategies
              description: The supported placement group types.
      description: Describes the placement group support of the instance type.
    InstanceTypeInfo:
      type: object
      properties:
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/InstanceType"
            - xml:
                name: instanceType
              description: The instance type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide</i>.
        CurrentGeneration:
          allOf:
            - $ref: "#/components/schemas/CurrentGenerationFlag"
            - xml:
                name: currentGeneration
              description: Indicates whether the instance type is current generation.
        FreeTierEligible:
          allOf:
            - $ref: "#/components/schemas/FreeTierEligibleFlag"
            - xml:
                name: freeTierEligible
              description: Indicates whether the instance type is eligible for the free tier.
        SupportedUsageClasses:
          allOf:
            - $ref: "#/components/schemas/UsageClassTypeList"
            - xml:
                name: supportedUsageClasses
              description: Indicates whether the instance type is offered for spot or On-Demand.
        SupportedRootDeviceTypes:
          allOf:
            - $ref: "#/components/schemas/RootDeviceTypeList"
            - xml:
                name: supportedRootDeviceTypes
              description: The supported root device types.
        SupportedVirtualizationTypes:
          allOf:
            - $ref: "#/components/schemas/VirtualizationTypeList"
            - xml:
                name: supportedVirtualizationTypes
              description: The supported virtualization types.
        BareMetal:
          allOf:
            - $ref: "#/components/schemas/BareMetalFlag"
            - xml:
                name: bareMetal
              description: Indicates whether the instance is a bare metal instance type.
        Hypervisor:
          allOf:
            - $ref: "#/components/schemas/InstanceTypeHypervisor"
            - xml:
                name: hypervisor
              description: The hypervisor for the instance type.
        ProcessorInfo:
          allOf:
            - $ref: "#/components/schemas/ProcessorInfo"
            - xml:
                name: processorInfo
              description: Describes the processor.
        VCpuInfo:
          allOf:
            - $ref: "#/components/schemas/VCpuInfo"
            - xml:
                name: vCpuInfo
              description: Describes the vCPU configurations for the instance type.
        MemoryInfo:
          allOf:
            - $ref: "#/components/schemas/MemoryInfo"
            - xml:
                name: memoryInfo
              description: Describes the memory for the instance type.
        InstanceStorageSupported:
          allOf:
            - $ref: "#/components/schemas/InstanceStorageFlag"
            - xml:
                name: instanceStorageSupported
              description: Indicates whether instance storage is supported.
        InstanceStorageInfo:
          allOf:
            - $ref: "#/components/schemas/InstanceStorageInfo"
            - xml:
                name: instanceStorageInfo
              description: Describes the instance storage for the instance type.
        EbsInfo:
          allOf:
            - $ref: "#/components/schemas/EbsInfo"
            - xml:
                name: ebsInfo
              description: Describes the Amazon EBS settings for the instance type.
        NetworkInfo:
          allOf:
            - $ref: "#/components/schemas/NetworkInfo"
            - xml:
                name: networkInfo
              description: Describes the network settings for the instance type.
        GpuInfo:
          allOf:
            - $ref: "#/components/schemas/GpuInfo"
            - xml:
                name: gpuInfo
              description: Describes the GPU accelerator settings for the instance type.
        FpgaInfo:
          allOf:
            - $ref: "#/components/schemas/FpgaInfo"
            - xml:
                name: fpgaInfo
              description: Describes the FPGA accelerator settings for the instance type.
        PlacementGroupInfo:
          allOf:
            - $ref: "#/components/schemas/PlacementGroupInfo"
            - xml:
                name: placementGroupInfo
              description: Describes the placement group settings for the instance type.
        InferenceAcceleratorInfo:
          allOf:
            - $ref: "#/components/schemas/InferenceAcceleratorInfo"
            - xml:
                name: inferenceAcceleratorInfo
              description: Describes the Inference accelerator settings for the instance type.
        HibernationSupported:
          allOf:
            - $ref: "#/components/schemas/HibernationFlag"
            - xml:
                name: hibernationSupported
              description: Indicates whether On-Demand hibernation is supported.
        BurstablePerformanceSupported:
          allOf:
            - $ref: "#/components/schemas/BurstablePerformanceFlag"
            - xml:
                name: burstablePerformanceSupported
              description: Indicates whether the instance type is a burstable performance instance type.
        DedicatedHostsSupported:
          allOf:
            - $ref: "#/components/schemas/DedicatedHostFlag"
            - xml:
                name: dedicatedHostsSupported
              description: Indicates whether Dedicated Hosts are supported on the instance type.
        AutoRecoverySupported:
          allOf:
            - $ref: "#/components/schemas/AutoRecoveryFlag"
            - xml:
                name: autoRecoverySupported
              description: Indicates whether auto recovery is supported.
        SupportedBootModes:
          allOf:
            - $ref: "#/components/schemas/BootModeTypeList"
            - xml:
                name: supportedBootModes
              description: The supported boot modes. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html">Boot modes</a> in the <i>Amazon EC2 User Guide</i>.
      description: Describes the instance type.
    Location:
      type: string
    InstanceTypeOffering:
      type: object
      properties:
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/InstanceType"
            - xml:
                name: instanceType
              description: The instance type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide</i>.
        LocationType:
          allOf:
            - $ref: "#/components/schemas/LocationType"
            - xml:
                name: locationType
              description: The location type.
        Location:
          allOf:
            - $ref: "#/components/schemas/Location"
            - xml:
                name: location
              description: The identifier for the location. This depends on the location type. For example, if the location type is <code>region</code>, the location is the Region code (for example, <code>us-east-2</code>.)
      description: The instance types offered.
    InstanceUsage:
      type: object
      properties:
        AccountId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: accountId
              description: The ID of the Amazon Web Services account that is making use of the Capacity Reservation.
        UsedInstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: usedInstanceCount
              description: The number of instances the Amazon Web Services account currently has in the Capacity Reservation.
      description: Information about the Capacity Reservation usage.
    InterfaceProtocolType:
      type: string
      enum:
        - VLAN
        - GRE
    InternetGatewayAttachment:
      type: object
      properties:
        State:
          allOf:
            - $ref: "#/components/schemas/AttachmentStatus"
            - xml:
                name: state
              description: The current state of the attachment. For an internet gateway, the state is <code>available</code> when attached to a VPC; otherwise, this value is not returned.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC.
      description: Describes the attachment of a VPC to an internet gateway or an egress-only internet gateway.
    IpRangeList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/IpRange"
          - xml:
              name: item
    Ipv6RangeList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Ipv6Range"
          - xml:
              name: item
    PrefixListIdList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PrefixListId"
          - xml:
              name: item
    UserIdGroupPairList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/UserIdGroupPair"
          - xml:
              name: item
    IpRange:
      type: object
      properties:
        CidrIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cidrIp
              description: The IPv4 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv4 address, use the /32 prefix length.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: "<p>A description for the security group rule that references this IPv4 address range.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</p>"
      description: Describes an IPv4 range.
    IpRanges:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: item
    Ipv4PrefixSpecificationResponse:
      type: object
      properties:
        Ipv4Prefix:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipv4Prefix
              description: One or more IPv4 delegated prefixes assigned to the network interface.
      description: Information about the IPv4 delegated prefixes assigned to a network interface.
    Ipv4PrefixListResponse:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Ipv4PrefixSpecificationResponse"
          - xml:
              name: item
    Ipv4PrefixSpecification:
      type: object
      properties:
        Ipv4Prefix:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipv4Prefix
              description: The IPv4 prefix. For information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-prefix-eni.html"> Assigning prefixes to Amazon EC2 network interfaces</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
      description: Describes an IPv4 prefix.
    Ipv6Address:
      type: string
    Ipv6CidrAssociation:
      type: object
      properties:
        Ipv6Cidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipv6Cidr
              description: The IPv6 CIDR block.
        AssociatedResource:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: associatedResource
              description: The resource that's associated with the IPv6 CIDR block.
      description: Describes an IPv6 CIDR block association.
    Ipv6CidrBlock:
      type: object
      properties:
        Ipv6CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipv6CidrBlock
              description: The IPv6 CIDR block.
      description: Describes an IPv6 CIDR block.
    Ipv6CidrBlockSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Ipv6CidrBlock"
          - xml:
              name: item
    Ipv6Flag:
      type: boolean
    PoolCidrBlocksSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PoolCidrBlock"
          - xml:
              name: item
    Ipv6Pool:
      type: object
      properties:
        PoolId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: poolId
              description: The ID of the address pool.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: The description for the address pool.
        PoolCidrBlocks:
          allOf:
            - $ref: "#/components/schemas/PoolCidrBlocksSet"
            - xml:
                name: poolCidrBlockSet
              description: The CIDR blocks for the address pool.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags for the address pool.
      description: Describes an IPv6 address pool.
    Ipv6PrefixSpecificationResponse:
      type: object
      properties:
        Ipv6Prefix:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipv6Prefix
              description: One or more IPv6 delegated prefixes assigned to the network interface.
      description: Information about the IPv6 delegated prefixes assigned to a network interface.
    Ipv6PrefixListResponse:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Ipv6PrefixSpecificationResponse"
          - xml:
              name: item
    Ipv6PrefixSpecification:
      type: object
      properties:
        Ipv6Prefix:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipv6Prefix
              description: The IPv6 prefix.
      description: Describes the IPv6 prefix.
    Ipv6PrefixesList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Ipv6PrefixSpecification"
          - xml:
              name: item
    Ipv6Range:
      type: object
      properties:
        CidrIpv6:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cidrIpv6
              description: The IPv6 CIDR range. You can either specify a CIDR range or a source security group, not both. To specify a single IPv6 address, use the /128 prefix length.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: "<p>A description for the security group rule that references this IPv6 address range.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*</p>"
      description: "[EC2-VPC only] Describes an IPv6 range."
    SensitiveUserData:
      type: string
      format: password
    KeyPairInfo:
      type: object
      properties:
        KeyPairId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: keyPairId
              description: The ID of the key pair.
        KeyFingerprint:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: keyFingerprint
              description: <p>If you used <a>CreateKeyPair</a> to create the key pair:</p> <ul> <li> <p>For RSA key pairs, the key fingerprint is the SHA-1 digest of the DER encoded private key. </p> </li> <li> <p>For ED25519 key pairs, the key fingerprint is the base64-encoded SHA-256 digest, which is the default for OpenSSH, starting with <a href="http://www.openssh.com/txt/release-6.8">OpenSSH 6.8</a>.</p> </li> </ul> <p>If you used <a>ImportKeyPair</a> to provide Amazon Web Services the public key:</p> <ul> <li> <p>For RSA key pairs, the key fingerprint is the MD5 public key fingerprint as specified in section 4 of RFC4716.</p> </li> <li> <p>For ED25519 key pairs, the key fingerprint is the base64-encoded SHA-256 digest, which is the default for OpenSSH, starting with <a href="http://www.openssh.com/txt/release-6.8">OpenSSH 6.8</a>.</p> </li> </ul>
        KeyName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: keyName
              description: The name of the key pair.
        KeyType:
          allOf:
            - $ref: "#/components/schemas/KeyType"
            - xml:
                name: keyType
              description: The type of key pair.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags applied to the key pair.
      description: Describes a key pair.
    LastError:
      type: object
      properties:
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: The error message for the VPC endpoint error.
        Code:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: code
              description: The error code for the VPC endpoint error.
      description: The last error that occurred for a VPC endpoint.
    LaunchPermission:
      type: object
      properties:
        Group:
          allOf:
            - $ref: "#/components/schemas/PermissionGroup"
            - xml:
                name: group
              description: The name of the group.
        UserId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: userId
              description: "<p>The Amazon Web Services account ID.</p> <p>Constraints: Up to 10 000 account IDs can be specified in a single request.</p>"
      description: Describes a launch permission.
    LaunchPermissionModifications:
      type: object
      properties:
        Add:
          allOf:
            - $ref: "#/components/schemas/LaunchPermissionList"
            - description: The Amazon Web Services account ID to add to the list of launch permissions for the AMI.
        Remove:
          allOf:
            - $ref: "#/components/schemas/LaunchPermissionList"
            - description: The Amazon Web Services account ID to remove from the list of launch permissions for the AMI.
      description: Describes a launch permission modification.
    LaunchSpecification:
      type: object
      properties:
        UserData:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: userData
              description: The Base64-encoded user data for the instance.
        SecurityGroups:
          allOf:
            - $ref: "#/components/schemas/GroupIdentifierList"
            - xml:
                name: groupSet
              description: One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.
        AddressingType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: addressingType
              description: Deprecated.
        BlockDeviceMappings:
          allOf:
            - $ref: "#/components/schemas/BlockDeviceMappingList"
            - xml:
                name: blockDeviceMapping
              description: One or more block device mapping entries.
        EbsOptimized:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: ebsOptimized
              description: "<p>Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p> <p>Default: <code>false</code> </p>"
        IamInstanceProfile:
          allOf:
            - $ref: "#/components/schemas/IamInstanceProfileSpecification"
            - xml:
                name: iamInstanceProfile
              description: The IAM instance profile.
        ImageId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: imageId
              description: The ID of the AMI.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/InstanceType"
            - xml:
                name: instanceType
              description: The instance type.
        KernelId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: kernelId
              description: The ID of the kernel.
        KeyName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: keyName
              description: The name of the key pair.
        NetworkInterfaces:
          allOf:
            - $ref: "#/components/schemas/InstanceNetworkInterfaceSpecificationList"
            - xml:
                name: networkInterfaceSet
              description: One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.
        Placement:
          allOf:
            - $ref: "#/components/schemas/SpotPlacement"
            - xml:
                name: placement
              description: The placement information for the instance.
        RamdiskId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ramdiskId
              description: The ID of the RAM disk.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: subnetId
              description: The ID of the subnet in which to launch the instance.
        Monitoring:
          allOf:
            - $ref: "#/components/schemas/RunInstancesMonitoringEnabled"
            - xml:
                name: monitoring
      description: Describes the launch specification for an instance.
    SpotFleetLaunchSpecification:
      type: object
      properties:
        SecurityGroups:
          allOf:
            - $ref: "#/components/schemas/GroupIdentifierList"
            - xml:
                name: groupSet
              description: One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.
        AddressingType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: addressingType
              description: Deprecated.
        BlockDeviceMappings:
          allOf:
            - $ref: "#/components/schemas/BlockDeviceMappingList"
            - xml:
                name: blockDeviceMapping
              description: One or more block devices that are mapped to the Spot Instances. You can't specify both a snapshot ID and an encryption value. This is because only blank volumes can be encrypted on creation. If a snapshot is the basis for a volume, it is not blank and its encryption status is used for the volume encryption status.
        EbsOptimized:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: ebsOptimized
              description: "<p>Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p> <p>Default: <code>false</code> </p>"
        IamInstanceProfile:
          allOf:
            - $ref: "#/components/schemas/IamInstanceProfileSpecification"
            - xml:
                name: iamInstanceProfile
              description: The IAM instance profile.
        ImageId:
          allOf:
            - $ref: "#/components/schemas/ImageId"
            - xml:
                name: imageId
              description: The ID of the AMI.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/InstanceType"
            - xml:
                name: instanceType
              description: The instance type.
        KernelId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: kernelId
              description: The ID of the kernel.
        KeyName:
          allOf:
            - $ref: "#/components/schemas/KeyPairName"
            - xml:
                name: keyName
              description: The name of the key pair.
        Monitoring:
          allOf:
            - $ref: "#/components/schemas/SpotFleetMonitoring"
            - xml:
                name: monitoring
              description: Enable or disable monitoring for the instances.
        NetworkInterfaces:
          allOf:
            - $ref: "#/components/schemas/InstanceNetworkInterfaceSpecificationList"
            - xml:
                name: networkInterfaceSet
              description: <p>One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.</p> <note> <p> <code>SpotFleetLaunchSpecification</code> currently does not support Elastic Fabric Adapter (EFA). To specify an EFA, you must use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_LaunchTemplateConfig.html">LaunchTemplateConfig</a>.</p> </note>
        Placement:
          allOf:
            - $ref: "#/components/schemas/SpotPlacement"
            - xml:
                name: placement
              description: The placement information.
        RamdiskId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ramdiskId
              description: The ID of the RAM disk. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, refer to the Amazon Web Services Resource Center and search for the kernel ID.
        SpotPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: spotPrice
              description: The maximum price per unit hour that you are willing to pay for a Spot Instance. If this value is not specified, the default is the Spot price specified for the fleet. To determine the Spot price per unit hour, divide the Spot price by the value of <code>WeightedCapacity</code>.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - xml:
                name: subnetId
              description: The IDs of the subnets in which to launch the instances. To specify multiple subnets, separate them using commas; for example, "subnet-1234abcdeexample1, subnet-0987cdef6example2".
        UserData:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: userData
              description: The Base64-encoded user data that instances use when starting up.
        WeightedCapacity:
          allOf:
            - $ref: "#/components/schemas/Double"
            - xml:
                name: weightedCapacity
              description: <p>The number of units provided by the specified instance type. These are the same units that you chose to set the target capacity in terms of instances, or a performance characteristic such as vCPUs, memory, or I/O.</p> <p>If the target capacity divided by this value is not a whole number, Amazon EC2 rounds the number of instances to the next whole number. If this value is not specified, the default is 1.</p>
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/SpotFleetTagSpecificationList"
            - xml:
                name: tagSpecificationSet
              description: The tags to apply during creation.
      description: Describes the launch specification for one or more Spot Instances. If you include On-Demand capacity in your fleet request or want to specify an EFA network device, you can't use <code>SpotFleetLaunchSpecification</code>; you must use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_LaunchTemplateConfig.html">LaunchTemplateConfig</a>.
    LaunchTemplateEbsBlockDevice:
      type: object
      properties:
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: encrypted
              description: Indicates whether the EBS volume is encrypted.
        DeleteOnTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: deleteOnTermination
              description: Indicates whether the EBS volume is deleted on instance termination.
        Iops:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: iops
              description: "The number of I/O operations per second (IOPS) that the volume supports. "
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/KmsKeyId"
            - xml:
                name: kmsKeyId
              description: The ARN of the Key Management Service (KMS) CMK used for encryption.
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/SnapshotId"
            - xml:
                name: snapshotId
              description: The ID of the snapshot.
        VolumeSize:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: volumeSize
              description: The size of the volume, in GiB.
        VolumeType:
          allOf:
            - $ref: "#/components/schemas/VolumeType"
            - xml:
                name: volumeType
              description: The volume type.
        Throughput:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: throughput
              description: The throughput that the volume supports, in MiB/s.
      description: Describes a block device for an EBS volume.
    LaunchTemplateBlockDeviceMapping:
      type: object
      properties:
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: deviceName
              description: The device name.
        VirtualName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: virtualName
              description: The virtual device name (ephemeralN).
        Ebs:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateEbsBlockDevice"
            - xml:
                name: ebs
              description: Information about the block device for an EBS volume.
        NoDevice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: noDevice
              description: To omit the device from the block device mapping, specify an empty string.
      description: Describes a block device mapping.
    LaunchTemplateBlockDeviceMappingList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LaunchTemplateBlockDeviceMapping"
          - xml:
              name: item
    LaunchTemplateEbsBlockDeviceRequest:
      type: object
      properties:
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the EBS volume is encrypted. Encrypted volumes can only be attached to instances that support Amazon EBS encryption. If you are creating a volume from a snapshot, you can't specify an encryption value.
        DeleteOnTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the EBS volume is deleted on instance termination.
        Iops:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: '<p>The number of I/O operations per second (IOPS). For <code>gp3</code>, <code>io1</code>, and <code>io2</code> volumes, this represents the number of IOPS that are provisioned for the volume. For <code>gp2</code> volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.</p> <p>The following are the supported values for each volume type:</p> <ul> <li> <p> <code>gp3</code>: 3,000-16,000 IOPS</p> </li> <li> <p> <code>io1</code>: 100-64,000 IOPS</p> </li> <li> <p> <code>io2</code>: 100-64,000 IOPS</p> </li> </ul> <p>For <code>io1</code> and <code>io2</code> volumes, we guarantee 64,000 IOPS only for <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances">Instances built on the Nitro System</a>. Other instance families guarantee performance up to 32,000 IOPS.</p> <p>This parameter is supported for <code>io1</code>, <code>io2</code>, and <code>gp3</code> volumes only. This parameter is not supported for <code>gp2</code>, <code>st1</code>, <code>sc1</code>, or <code>standard</code> volumes.</p>'
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/KmsKeyId"
            - description: The ARN of the symmetric Key Management Service (KMS) CMK used for encryption.
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/SnapshotId"
            - description: The ID of the snapshot.
        VolumeSize:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. The following are the supported volumes sizes for each volume type:</p> <ul> <li> <p> <code>gp2</code> and <code>gp3</code>: 1-16,384</p> </li> <li> <p> <code>io1</code> and <code>io2</code>: 4-16,384</p> </li> <li> <p> <code>st1</code> and <code>sc1</code>: 125-16,384</p> </li> <li> <p> <code>standard</code>: 1-1,024</p> </li> </ul>"
        VolumeType:
          allOf:
            - $ref: "#/components/schemas/VolumeType"
            - description: The volume type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS volume types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
        Throughput:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The throughput to provision for a <code>gp3</code> volume, with a maximum of 1,000 MiB/s.</p> <p>Valid Range: Minimum value of 125. Maximum value of 1000.</p>"
      description: The parameters for a block device for an EBS volume.
    LaunchTemplateBlockDeviceMappingRequest:
      type: object
      properties:
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The device name (for example, /dev/sdh or xvdh).
        VirtualName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The virtual device name (ephemeralN). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.
        Ebs:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateEbsBlockDeviceRequest"
            - description: Parameters used to automatically set up EBS volumes when the instance is launched.
        NoDevice:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: To omit the device from the block device mapping, specify an empty string.
      description: Describes a block device mapping.
    LaunchTemplateCapacityReservationSpecificationResponse:
      type: object
      properties:
        CapacityReservationPreference:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationPreference"
            - xml:
                name: capacityReservationPreference
              description: <p>Indicates the instance's Capacity Reservation preferences. Possible preferences include:</p> <ul> <li> <p> <code>open</code> - The instance can run in any <code>open</code> Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).</p> </li> <li> <p> <code>none</code> - The instance avoids running in a Capacity Reservation even if one is available. The instance runs in On-Demand capacity.</p> </li> </ul>
        CapacityReservationTarget:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationTargetResponse"
            - xml:
                name: capacityReservationTarget
              description: Information about the target Capacity Reservation or Capacity Reservation group.
      description: Information about the Capacity Reservation targeting option.
    LaunchTemplateOverridesList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LaunchTemplateOverrides"
          - xml:
              name: item
    LaunchTemplateCpuOptions:
      type: object
      properties:
        CoreCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: coreCount
              description: The number of CPU cores for the instance.
        ThreadsPerCore:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: threadsPerCore
              description: The number of threads per CPU core.
      description: The CPU options for the instance.
    LaunchTemplateElasticInferenceAcceleratorCount:
      type: integer
      minimum: 1
    LaunchTemplateElasticInferenceAccelerator:
      type: object
      required:
        - Type
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: " The type of elastic inference accelerator. The possible values are eia1.medium, eia1.large, and eia1.xlarge. "
        Count:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateElasticInferenceAcceleratorCount"
            - description: "<p> The number of elastic inference accelerators to attach to the instance. </p> <p>Default: 1</p>"
      description: " Describes an elastic inference accelerator. "
    LaunchTemplateElasticInferenceAcceleratorResponse:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: type
              description: " The type of elastic inference accelerator. The possible values are eia1.medium, eia1.large, and eia1.xlarge. "
        Count:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: count
              description: "<p> The number of elastic inference accelerators to attach to the instance. </p> <p>Default: 1</p>"
      description: " Describes an elastic inference accelerator. "
    LaunchTemplateElasticInferenceAcceleratorResponseList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LaunchTemplateElasticInferenceAcceleratorResponse"
          - xml:
              name: item
    LaunchTemplateEnclaveOptions:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: enabled
              description: If this parameter is set to <code>true</code>, the instance is enabled for Amazon Web Services Nitro Enclaves; otherwise, it is not enabled for Amazon Web Services Nitro Enclaves.
      description: Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.
    LaunchTemplateErrorCode:
      type: string
      enum:
        - launchTemplateIdDoesNotExist
        - launchTemplateIdMalformed
        - launchTemplateNameDoesNotExist
        - launchTemplateNameMalformed
        - launchTemplateVersionDoesNotExist
        - unexpectedError
    LaunchTemplateHibernationOptions:
      type: object
      properties:
        Configured:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: configured
              description: If this parameter is set to <code>true</code>, the instance is enabled for hibernation; otherwise, it is not enabled for hibernation.
      description: Indicates whether an instance is configured for hibernation.
    LaunchTemplateHttpTokensState:
      type: string
      enum:
        - optional
        - required
    LaunchTemplateIamInstanceProfileSpecification:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: arn
              description: The Amazon Resource Name (ARN) of the instance profile.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: name
              description: The name of the instance profile.
      description: Describes an IAM instance profile.
    LaunchTemplateSpotMarketOptions:
      type: object
      properties:
        MaxPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: maxPrice
              description: The maximum hourly price you're willing to pay for the Spot Instances.
        SpotInstanceType:
          allOf:
            - $ref: "#/components/schemas/SpotInstanceType"
            - xml:
                name: spotInstanceType
              description: The Spot Instance request type.
        BlockDurationMinutes:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: blockDurationMinutes
              description: The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
        ValidUntil:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: validUntil
              description: The end date of the request. For a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached.
        InstanceInterruptionBehavior:
          allOf:
            - $ref: "#/components/schemas/InstanceInterruptionBehavior"
            - xml:
                name: instanceInterruptionBehavior
              description: The behavior when a Spot Instance is interrupted.
      description: The options for Spot Instances.
    LaunchTemplateInstanceMarketOptions:
      type: object
      properties:
        MarketType:
          allOf:
            - $ref: "#/components/schemas/MarketType"
            - xml:
                name: marketType
              description: The market type.
        SpotOptions:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateSpotMarketOptions"
            - xml:
                name: spotOptions
              description: The options for Spot Instances.
      description: The market (purchasing) option for the instances.
    LaunchTemplateSpotMarketOptionsRequest:
      type: object
      properties:
        MaxPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The maximum hourly price you're willing to pay for the Spot Instances.
        SpotInstanceType:
          allOf:
            - $ref: "#/components/schemas/SpotInstanceType"
            - description: The Spot Instance request type.
        BlockDurationMinutes:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
        ValidUntil:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The end date of the request. For a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached. The default end date is 7 days from the current date.
        InstanceInterruptionBehavior:
          allOf:
            - $ref: "#/components/schemas/InstanceInterruptionBehavior"
            - description: The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>.
      description: The options for Spot Instances.
    LaunchTemplateInstanceMetadataEndpointState:
      type: string
      enum:
        - disabled
        - enabled
    LaunchTemplateInstanceMetadataOptionsState:
      type: string
      enum:
        - pending
        - applied
    LaunchTemplateInstanceMetadataProtocolIpv6:
      type: string
      enum:
        - disabled
        - enabled
    LaunchTemplateInstanceMetadataOptions:
      type: object
      properties:
        State:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateInstanceMetadataOptionsState"
            - xml:
                name: state
              description: <p>The state of the metadata option changes.</p> <p> <code>pending</code> - The metadata options are being updated and the instance is not ready to process metadata traffic with the new selection.</p> <p> <code>applied</code> - The metadata options have been successfully applied on the instance.</p>
        HttpTokens:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateHttpTokensState"
            - xml:
                name: httpTokens
              description: <p>The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is <code>optional</code>.</p> <p>If the state is <code>optional</code>, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.</p> <p>If the state is <code>required</code>, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.</p>
        HttpPutResponseHopLimit:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: httpPutResponseHopLimit
              description: "<p>The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.</p> <p>Default: 1</p> <p>Possible values: Integers from 1 to 64</p>"
        HttpEndpoint:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateInstanceMetadataEndpointState"
            - xml:
                name: httpEndpoint
              description: <p>This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is <code>enabled</code>.</p> <note> <p>If you specify a value of <code>disabled</code>, you will not be able to access your instance metadata. </p> </note>
        HttpProtocolIpv6:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateInstanceMetadataProtocolIpv6"
            - xml:
                name: httpProtocolIpv6
              description: "<p>Enables or disables the IPv6 endpoint for the instance metadata service.</p> <p>Default: <code>disabled</code> </p>"
      description: The metadata options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance Metadata and User Data</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    LaunchTemplateInstanceNetworkInterfaceSpecification:
      type: object
      properties:
        AssociateCarrierIpAddress:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: associateCarrierIpAddress
              description: <p>Indicates whether to associate a Carrier IP address with eth0 for a new network interface.</p> <p>Use this option when you launch an instance in a Wavelength Zone and want to associate a Carrier IP address with the network interface. For more information about Carrier IP addresses, see <a href="https://docs.aws.amazon.com/wavelength/latest/developerguide/how-wavelengths-work.html#provider-owned-ip">Carrier IP addresses</a> in the <i>Wavelength Developer Guide</i>.</p>
        AssociatePublicIpAddress:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: associatePublicIpAddress
              description: Indicates whether to associate a public IPv4 address with eth0 for a new network interface.
        DeleteOnTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: deleteOnTermination
              description: Indicates whether the network interface is deleted when the instance is terminated.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description for the network interface.
        DeviceIndex:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: deviceIndex
              description: The device index for the network interface attachment.
        Groups:
          allOf:
            - $ref: "#/components/schemas/GroupIdStringList"
            - xml:
                name: groupSet
              description: The IDs of one or more security groups.
        InterfaceType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: interfaceType
              description: The type of network interface.
        Ipv6AddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: ipv6AddressCount
              description: The number of IPv6 addresses for the network interface.
        Ipv6Addresses:
          allOf:
            - $ref: "#/components/schemas/InstanceIpv6AddressList"
            - xml:
                name: ipv6AddressesSet
              description: The IPv6 addresses for the network interface.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceId"
            - xml:
                name: networkInterfaceId
              description: The ID of the network interface.
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateIpAddress
              description: The primary private IPv4 address of the network interface.
        PrivateIpAddresses:
          allOf:
            - $ref: "#/components/schemas/PrivateIpAddressSpecificationList"
            - xml:
                name: privateIpAddressesSet
              description: One or more private IPv4 addresses.
        SecondaryPrivateIpAddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: secondaryPrivateIpAddressCount
              description: The number of secondary private IPv4 addresses for the network interface.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - xml:
                name: subnetId
              description: The ID of the subnet for the network interface.
        NetworkCardIndex:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: networkCardIndex
              description: The index of the network card.
        Ipv4Prefixes:
          allOf:
            - $ref: "#/components/schemas/Ipv4PrefixListResponse"
            - xml:
                name: ipv4PrefixSet
              description: One or more IPv4 prefixes assigned to the network interface.
        Ipv4PrefixCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: ipv4PrefixCount
              description: The number of IPv4 prefixes that Amazon Web Services automatically assigned to the network interface.
        Ipv6Prefixes:
          allOf:
            - $ref: "#/components/schemas/Ipv6PrefixListResponse"
            - xml:
                name: ipv6PrefixSet
              description: One or more IPv6 prefixes assigned to the network interface.
        Ipv6PrefixCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: ipv6PrefixCount
              description: The number of IPv6 prefixes that Amazon Web Services automatically assigned to the network interface.
      description: Describes a network interface.
    LaunchTemplateInstanceNetworkInterfaceSpecificationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LaunchTemplateInstanceNetworkInterfaceSpecification"
          - xml:
              name: item
    LaunchTemplateInstanceNetworkInterfaceSpecificationRequest:
      type: object
      properties:
        AssociateCarrierIpAddress:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>Associates a Carrier IP address with eth0 for a new network interface.</p> <p>Use this option when you launch an instance in a Wavelength Zone and want to associate a Carrier IP address with the network interface. For more information about Carrier IP addresses, see <a href="https://docs.aws.amazon.com/wavelength/latest/developerguide/how-wavelengths-work.html#provider-owned-ip">Carrier IP addresses</a> in the <i>Wavelength Developer Guide</i>.</p>
        AssociatePublicIpAddress:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Associates a public IPv4 address with eth0 for a new network interface.
        DeleteOnTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the network interface is deleted when the instance is terminated.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A description for the network interface.
        DeviceIndex:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The device index for the network interface attachment.
        Groups:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupIdStringList"
            - xml:
                name: SecurityGroupId
              description: The IDs of one or more security groups.
        InterfaceType:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: '<p>The type of network interface. To create an Elastic Fabric Adapter (EFA), specify <code>efa</code>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/efa.html">Elastic Fabric Adapter</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>If you are not creating an EFA, specify <code>interface</code> or omit this parameter.</p> <p>Valid values: <code>interface</code> | <code>efa</code> </p>'
        Ipv6AddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can't use this option if specifying specific IPv6 addresses.
        Ipv6Addresses:
          allOf:
            - $ref: "#/components/schemas/InstanceIpv6AddressListRequest"
            - description: One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. You can't use this option if you're specifying a number of IPv6 addresses.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceId"
            - description: The ID of the network interface.
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The primary private IPv4 address of the network interface.
        PrivateIpAddresses:
          allOf:
            - $ref: "#/components/schemas/PrivateIpAddressSpecificationList"
            - description: One or more private IPv4 addresses.
        SecondaryPrivateIpAddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of secondary private IPv4 addresses to assign to a network interface.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - description: The ID of the subnet for the network interface.
        NetworkCardIndex:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.
        Ipv4Prefixes:
          allOf:
            - $ref: "#/components/schemas/Ipv4PrefixList"
            - xml:
                name: Ipv4Prefix
              description: One or more IPv4 prefixes to be assigned to the network interface. You cannot use this option if you use the <code>Ipv4PrefixCount</code> option.
        Ipv4PrefixCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of IPv4 prefixes to be automatically assigned to the network interface. You cannot use this option if you use the <code>Ipv4Prefix</code> option.
        Ipv6Prefixes:
          allOf:
            - $ref: "#/components/schemas/Ipv6PrefixList"
            - xml:
                name: Ipv6Prefix
              description: One or more IPv6 prefixes to be assigned to the network interface. You cannot use this option if you use the <code>Ipv6PrefixCount</code> option.
        Ipv6PrefixCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of IPv6 prefixes to be automatically assigned to the network interface. You cannot use this option if you use the <code>Ipv6Prefix</code> option.
      description: The parameters for a network interface.
    LaunchTemplateLicenseConfiguration:
      type: object
      properties:
        LicenseConfigurationArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: licenseConfigurationArn
              description: The Amazon Resource Name (ARN) of the license configuration.
      description: Describes a license configuration.
    LaunchTemplateLicenseConfigurationRequest:
      type: object
      properties:
        LicenseConfigurationArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Resource Name (ARN) of the license configuration.
      description: Describes a license configuration.
    LaunchTemplateLicenseList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LaunchTemplateLicenseConfiguration"
          - xml:
              name: item
    LaunchTemplateOverrides:
      type: object
      properties:
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/InstanceType"
            - xml:
                name: instanceType
              description: The instance type.
        SpotPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: spotPrice
              description: The maximum price per unit hour that you are willing to pay for a Spot Instance.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: subnetId
              description: The ID of the subnet in which to launch the instances.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone in which to launch the instances.
        WeightedCapacity:
          allOf:
            - $ref: "#/components/schemas/Double"
            - xml:
                name: weightedCapacity
              description: The number of units provided by the specified instance type.
        Priority:
          allOf:
            - $ref: "#/components/schemas/Double"
            - xml:
                name: priority
              description: <p>The priority for the launch template override. The highest priority is launched first.</p> <p>If <code>OnDemandAllocationStrategy</code> is set to <code>prioritized</code>, Spot Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity.</p> <p>If the Spot <code>AllocationStrategy</code> is set to <code>capacityOptimizedPrioritized</code>, Spot Fleet uses priority on a best-effort basis to determine which launch template override to use in fulfilling Spot capacity, but optimizes for capacity first.</p> <p>Valid values are whole numbers starting at <code>0</code>. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. You can set the same priority for different launch template overrides.</p>
      description: Describes overrides for a launch template.
    LaunchTemplatePlacement:
      type: object
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone of the instance.
        Affinity:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: affinity
              description: The affinity setting for the instance on the Dedicated Host.
        GroupName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupName
              description: The name of the placement group for the instance.
        HostId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: hostId
              description: The ID of the Dedicated Host for the instance.
        Tenancy:
          allOf:
            - $ref: "#/components/schemas/Tenancy"
            - xml:
                name: tenancy
              description: "The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware. "
        SpreadDomain:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: spreadDomain
              description: Reserved for future use.
        HostResourceGroupArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: hostResourceGroupArn
              description: "The ARN of the host resource group in which to launch the instances. "
        PartitionNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: partitionNumber
              description: The number of the partition the instance should launch in. Valid only if the placement group strategy is set to <code>partition</code>.
      description: Describes the placement of an instance.
    LaunchTemplateSpecification:
      type: object
      properties:
        LaunchTemplateId:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateId"
            - description: The ID of the launch template.
        LaunchTemplateName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the launch template.
        Version:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The version number of the launch template.</p> <p>Default: The default version for the launch template.</p>"
      description: The launch template to use. You must specify either the launch template ID or launch template name in the request, but not both.
    SpotInstanceType:
      type: string
      enum:
        - one-time
        - persistent
    ResourceType:
      type: string
      enum:
        - capacity-reservation
        - client-vpn-endpoint
        - customer-gateway
        - carrier-gateway
        - dedicated-host
        - dhcp-options
        - egress-only-internet-gateway
        - elastic-ip
        - elastic-gpu
        - export-image-task
        - export-instance-task
        - fleet
        - fpga-image
        - host-reservation
        - image
        - import-image-task
        - import-snapshot-task
        - instance
        - instance-event-window
        - internet-gateway
        - ipv4pool-ec2
        - ipv6pool-ec2
        - key-pair
        - launch-template
        - local-gateway
        - local-gateway-route-table
        - local-gateway-virtual-interface
        - local-gateway-virtual-interface-group
        - local-gateway-route-table-vpc-association
        - local-gateway-route-table-virtual-interface-group-association
        - natgateway
        - network-acl
        - network-interface
        - network-insights-analysis
        - network-insights-path
        - placement-group
        - prefix-list
        - replace-root-volume-task
        - reserved-instances
        - route-table
        - security-group
        - security-group-rule
        - snapshot
        - spot-fleet-request
        - spot-instances-request
        - subnet
        - traffic-mirror-filter
        - traffic-mirror-session
        - traffic-mirror-target
        - transit-gateway
        - transit-gateway-attachment
        - transit-gateway-connect-peer
        - transit-gateway-multicast-domain
        - transit-gateway-route-table
        - volume
        - vpc
        - vpc-endpoint
        - vpc-endpoint-service
        - vpc-peering-connection
        - vpn-connection
        - vpn-gateway
        - vpc-flow-log
    LaunchTemplateTagSpecification:
      type: object
      properties:
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/ResourceType"
            - xml:
                name: resourceType
              description: The type of resource.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags for the resource.
      description: The tag specification for the launch template.
    LaunchTemplateTagSpecificationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LaunchTemplateTagSpecification"
          - xml:
              name: item
    LaunchTemplateTagSpecificationRequest:
      type: object
      properties:
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/ResourceType"
            - description: The type of resource to tag. Currently, the resource types that support tagging on creation are <code>instance</code> and <code>volume</code>. To tag a resource after it has been created, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html">CreateTags</a>.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: Tag
              description: The tags to apply to the resource.
      description: The tags specification for the launch template.
    LaunchTemplatesMonitoring:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: enabled
              description: Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
      description: Describes the monitoring for the instance.
    LicenseConfiguration:
      type: object
      properties:
        LicenseConfigurationArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: licenseConfigurationArn
              description: The Amazon Resource Name (ARN) of the license configuration.
      description: Describes a license configuration.
    LicenseSpecificationListRequest:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LicenseConfigurationRequest"
          - xml:
              name: item
    ListingStatus:
      type: string
      enum:
        - active
        - pending
        - cancelled
        - closed
    TargetGroupsConfig:
      type: object
      properties:
        TargetGroups:
          allOf:
            - $ref: "#/components/schemas/TargetGroups"
            - xml:
                name: targetGroups
              description: One or more target groups.
      description: Describes the target groups to attach to a Spot Fleet. Spot Fleet registers the running Spot Instances with these target groups.
    LoadPermission:
      type: object
      properties:
        UserId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: userId
              description: The AWS account ID.
        Group:
          allOf:
            - $ref: "#/components/schemas/PermissionGroup"
            - xml:
                name: group
              description: The name of the group.
      description: Describes a load permission.
    LoadPermissionRequest:
      type: object
      properties:
        Group:
          allOf:
            - $ref: "#/components/schemas/PermissionGroup"
            - description: The name of the group.
        UserId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The AWS account ID.
      description: Describes a load permission.
    LoadPermissionModifications:
      type: object
      properties:
        Add:
          allOf:
            - $ref: "#/components/schemas/LoadPermissionListRequest"
            - description: The load permissions to add.
        Remove:
          allOf:
            - $ref: "#/components/schemas/LoadPermissionListRequest"
            - description: The load permissions to remove.
      description: Describes modifications to the load permissions of an Amazon FPGA image (AFI).
    LocalGateway:
      type: object
      properties:
        LocalGatewayId:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayId"
            - xml:
                name: localGatewayId
              description: The ID of the local gateway.
        OutpostArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: outpostArn
              description: The Amazon Resource Name (ARN) of the Outpost.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The AWS account ID that owns the local gateway.
        State:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: state
              description: The state of the local gateway.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags assigned to the local gateway.
      description: Describes a local gateway.
    LocalGatewayRouteType:
      type: string
      enum:
        - static
        - propagated
    LocalGatewayRouteState:
      type: string
      enum:
        - pending
        - active
        - blackhole
        - deleting
        - deleted
    LocalGatewayRouteList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/LocalGatewayRoute"
          - xml:
              name: item
    LocalGatewayRouteTable:
      type: object
      properties:
        LocalGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: localGatewayRouteTableId
              description: The ID of the local gateway route table.
        LocalGatewayRouteTableArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - xml:
                name: localGatewayRouteTableArn
              description: The Amazon Resource Name (ARN) of the local gateway route table.
        LocalGatewayId:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayId"
            - xml:
                name: localGatewayId
              description: The ID of the local gateway.
        OutpostArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: outpostArn
              description: The Amazon Resource Name (ARN) of the Outpost.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The AWS account ID that owns the local gateway route table.
        State:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: state
              description: The state of the local gateway route table.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags assigned to the local gateway route table.
      description: Describes a local gateway route table.
    LocalGatewayRouteTableVirtualInterfaceGroupAssociation:
      type: object
      properties:
        LocalGatewayRouteTableVirtualInterfaceGroupAssociationId:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRouteTableVirtualInterfaceGroupAssociationId"
            - xml:
                name: localGatewayRouteTableVirtualInterfaceGroupAssociationId
              description: The ID of the association.
        LocalGatewayVirtualInterfaceGroupId:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayVirtualInterfaceGroupId"
            - xml:
                name: localGatewayVirtualInterfaceGroupId
              description: The ID of the virtual interface group.
        LocalGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: localGatewayId
              description: The ID of the local gateway.
        LocalGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayId"
            - xml:
                name: localGatewayRouteTableId
              description: The ID of the local gateway route table.
        LocalGatewayRouteTableArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - xml:
                name: localGatewayRouteTableArn
              description: The Amazon Resource Name (ARN) of the local gateway route table for the virtual interface group.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The AWS account ID that owns the local gateway virtual interface group association.
        State:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: state
              description: The state of the association.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags assigned to the association.
      description: Describes an association between a local gateway route table and a virtual interface group.
    LocalGatewayVirtualInterface:
      type: object
      properties:
        LocalGatewayVirtualInterfaceId:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayVirtualInterfaceId"
            - xml:
                name: localGatewayVirtualInterfaceId
              description: The ID of the virtual interface.
        LocalGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: localGatewayId
              description: The ID of the local gateway.
        Vlan:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: vlan
              description: The ID of the VLAN.
        LocalAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: localAddress
              description: The local address.
        PeerAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: peerAddress
              description: The peer address.
        LocalBgpAsn:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: localBgpAsn
              description: The Border Gateway Protocol (BGP) Autonomous System Number (ASN) of the local gateway.
        PeerBgpAsn:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: peerBgpAsn
              description: The peer BGP ASN.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The AWS account ID that owns the local gateway virtual interface.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags assigned to the virtual interface.
      description: Describes a local gateway virtual interface.
    LocalGatewayVirtualInterfaceGroup:
      type: object
      properties:
        LocalGatewayVirtualInterfaceGroupId:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayVirtualInterfaceGroupId"
            - xml:
                name: localGatewayVirtualInterfaceGroupId
              description: The ID of the virtual interface group.
        LocalGatewayVirtualInterfaceIds:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayVirtualInterfaceIdSet"
            - xml:
                name: localGatewayVirtualInterfaceIdSet
              description: The IDs of the virtual interfaces.
        LocalGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: localGatewayId
              description: The ID of the local gateway.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The AWS account ID that owns the local gateway virtual interface group.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags assigned to the virtual interface group.
      description: Describes a local gateway virtual interface group.
    PrefixListState:
      type: string
      enum:
        - create-in-progress
        - create-complete
        - create-failed
        - modify-in-progress
        - modify-complete
        - modify-failed
        - restore-in-progress
        - restore-complete
        - restore-failed
        - delete-in-progress
        - delete-complete
        - delete-failed
    MaxIpv4AddrPerInterface:
      type: integer
    MaxIpv6AddrPerInterface:
      type: integer
    MaxNetworkInterfaces:
      type: integer
    MaxResults:
      type: integer
    MaximumNetworkCards:
      type: integer
    MembershipType:
      type: string
      enum:
        - static
        - igmp
    MemorySize:
      type: integer
    ModifyAddressAttributeRequest:
      type: object
      required:
        - AllocationId
      title: ModifyAddressAttributeRequest
      properties:
        AllocationId:
          allOf:
            - $ref: "#/components/schemas/AllocationId"
            - description: "[EC2-VPC] The allocation ID."
        DomainName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The domain name to modify for the IP address.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ModifyAvailabilityZoneOptInStatus:
      type: string
      enum:
        - opted-in
        - not-opted-in
    ModifyAvailabilityZoneGroupRequest:
      type: object
      required:
        - GroupName
        - OptInStatus
      title: ModifyAvailabilityZoneGroupRequest
      properties:
        GroupName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the Availability Zone group, Local Zone group, or Wavelength Zone group.
        OptInStatus:
          allOf:
            - $ref: "#/components/schemas/ModifyAvailabilityZoneOptInStatus"
            - description: Indicates whether you are opted in to the Local Zone group or Wavelength Zone group. The only valid value is <code>opted-in</code>. You must contact <a href="https://console.aws.amazon.com/support/home#/case/create%3FissueType=customer-service%26serviceCode=general-info%26getting-started%26categoryCode=using-aws%26services">AWS Support</a> to opt out of a Local Zone group, or Wavelength Zone group.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ModifyCapacityReservationRequest:
      type: object
      required:
        - CapacityReservationId
      title: ModifyCapacityReservationRequest
      properties:
        CapacityReservationId:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationId"
            - description: The ID of the Capacity Reservation.
        InstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of instances for which to reserve capacity. The number of instances can't be increased or decreased by more than <code>1000</code> in a single request.
        EndDate:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: <p>The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to <code>expired</code> when it reaches its end date and time.</p> <p>The Capacity Reservation is cancelled within an hour from the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55 on 5/31/2019.</p> <p>You must provide an <code>EndDate</code> value if <code>EndDateType</code> is <code>limited</code>. Omit <code>EndDate</code> if <code>EndDateType</code> is <code>unlimited</code>.</p>
        EndDateType:
          allOf:
            - $ref: "#/components/schemas/EndDateType"
            - description: <p>Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:</p> <ul> <li> <p> <code>unlimited</code> - The Capacity Reservation remains active until you explicitly cancel it. Do not provide an <code>EndDate</code> value if <code>EndDateType</code> is <code>unlimited</code>.</p> </li> <li> <p> <code>limited</code> - The Capacity Reservation expires automatically at a specified date and time. You must provide an <code>EndDate</code> value if <code>EndDateType</code> is <code>limited</code>.</p> </li> </ul>
        Accept:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Reserved. Capacity Reservations you have created are accepted by default.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ModifyClientVpnEndpointRequest:
      type: object
      required:
        - ClientVpnEndpointId
      title: ModifyClientVpnEndpointRequest
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointId"
            - description: The ID of the Client VPN endpoint to modify.
        ServerCertificateArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ARN of the server certificate to be used. The server certificate must be provisioned in AWS Certificate Manager (ACM).
        ConnectionLogOptions:
          allOf:
            - $ref: "#/components/schemas/ConnectionLogOptions"
            - description: <p>Information about the client connection logging options.</p> <p>If you enable client connection logging, data about client connections is sent to a Cloudwatch Logs log stream. The following information is logged:</p> <ul> <li> <p>Client connection requests</p> </li> <li> <p>Client connection results (successful and unsuccessful)</p> </li> <li> <p>Reasons for unsuccessful client connection requests</p> </li> <li> <p>Client connection termination time</p> </li> </ul>
        DnsServers:
          allOf:
            - $ref: "#/components/schemas/DnsServersOptionsModifyStructure"
            - description: Information about the DNS servers to be used by Client VPN connections. A Client VPN endpoint can have up to two DNS servers.
        VpnPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The port number to assign to the Client VPN endpoint for TCP and UDP traffic.</p> <p>Valid Values: <code>443</code> | <code>1194</code> </p> <p>Default Value: <code>443</code> </p>"
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A brief description of the Client VPN endpoint.
        SplitTunnel:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>Indicates whether the VPN is split-tunnel.</p> <p>For information about split-tunnel VPN endpoints, see <a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html">Split-Tunnel AWS Client VPN Endpoint</a> in the <i>AWS Client VPN Administrator Guide</i>.</p>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/ClientVpnSecurityGroupIdSet"
            - xml:
                name: SecurityGroupId
              description: The IDs of one or more security groups to apply to the target network.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - description: The ID of the VPC to associate with the Client VPN endpoint.
        SelfServicePortal:
          allOf:
            - $ref: "#/components/schemas/SelfServicePortal"
            - description: Specify whether to enable the self-service portal for the Client VPN endpoint.
        ClientConnectOptions:
          allOf:
            - $ref: "#/components/schemas/ClientConnectOptions"
            - description: The options for managing connection authorization for new client connections.
    ModifyDefaultCreditSpecificationRequest:
      type: object
      required:
        - InstanceFamily
        - CpuCredits
      title: ModifyDefaultCreditSpecificationRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceFamily:
          allOf:
            - $ref: "#/components/schemas/UnlimitedSupportedInstanceFamily"
            - description: The instance family.
        CpuCredits:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The credit option for CPU usage of the instance family.</p> <p>Valid Values: <code>standard</code> | <code>unlimited</code> </p>"
    ModifyEbsDefaultKmsKeyIdRequest:
      type: object
      required:
        - KmsKeyId
      title: ModifyEbsDefaultKmsKeyIdRequest
      properties:
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/KmsKeyId"
            - description: <p>The identifier of the Key Management Service (KMS) KMS key to use for Amazon EBS encryption. If this parameter is not specified, your KMS key for Amazon EBS is used. If <code>KmsKeyId</code> is specified, the encrypted state must be <code>true</code>.</p> <p>You can specify the KMS key using any of the following:</p> <ul> <li> <p>Key ID. For example, 1234abcd-12ab-34cd-56ef-1234567890ab.</p> </li> <li> <p>Key alias. For example, alias/ExampleAlias.</p> </li> <li> <p>Key ARN. For example, arn:aws:kms:us-east-1:012345678910:key/1234abcd-12ab-34cd-56ef-1234567890ab.</p> </li> <li> <p>Alias ARN. For example, arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias.</p> </li> </ul> <p>Amazon Web Services authenticates the KMS key asynchronously. Therefore, if you specify an ID, alias, or ARN that is not valid, the action can appear to complete, but eventually fails.</p> <p>Amazon EBS does not support asymmetric KMS keys.</p>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ModifyFleetRequest:
      type: object
      required:
        - FleetId
      title: ModifyFleetRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ExcessCapacityTerminationPolicy:
          allOf:
            - $ref: "#/components/schemas/FleetExcessCapacityTerminationPolicy"
            - description: Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.
        LaunchTemplateConfigs:
          allOf:
            - $ref: "#/components/schemas/FleetLaunchTemplateConfigListRequest"
            - xml:
                name: LaunchTemplateConfig
              description: The launch template and overrides.
        FleetId:
          allOf:
            - $ref: "#/components/schemas/FleetId"
            - description: The ID of the EC2 Fleet.
        TargetCapacitySpecification:
          allOf:
            - $ref: "#/components/schemas/TargetCapacitySpecificationRequest"
            - description: The size of the EC2 Fleet.
        Context:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Reserved.
    OperationType:
      type: string
      enum:
        - add
        - remove
    UserIdStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: UserId
    UserGroupStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: UserGroup
    ProductCodeStringList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: ProductCode
    ModifyFpgaImageAttributeRequest:
      type: object
      required:
        - FpgaImageId
      title: ModifyFpgaImageAttributeRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        FpgaImageId:
          allOf:
            - $ref: "#/components/schemas/FpgaImageId"
            - description: The ID of the AFI.
        Attribute:
          allOf:
            - $ref: "#/components/schemas/FpgaImageAttributeName"
            - description: The name of the attribute.
        OperationType:
          allOf:
            - $ref: "#/components/schemas/OperationType"
            - description: The operation type.
        UserIds:
          allOf:
            - $ref: "#/components/schemas/UserIdStringList"
            - xml:
                name: UserId
              description: The AWS account IDs. This parameter is valid only when modifying the <code>loadPermission</code> attribute.
        UserGroups:
          allOf:
            - $ref: "#/components/schemas/UserGroupStringList"
            - xml:
                name: UserGroup
              description: The user groups. This parameter is valid only when modifying the <code>loadPermission</code> attribute.
        ProductCodes:
          allOf:
            - $ref: "#/components/schemas/ProductCodeStringList"
            - xml:
                name: ProductCode
              description: The product codes. After you add a product code to an AFI, it can't be removed. This parameter is valid only when modifying the <code>productCodes</code> attribute.
        LoadPermission:
          allOf:
            - $ref: "#/components/schemas/LoadPermissionModifications"
            - description: The load permission for the AFI.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A description for the AFI.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A name for the AFI.
    ModifyHostsRequest:
      type: object
      required:
        - HostIds
      title: ModifyHostsRequest
      properties:
        AutoPlacement:
          allOf:
            - $ref: "#/components/schemas/AutoPlacement"
            - xml:
                name: autoPlacement
              description: Specify whether to enable or disable auto-placement.
        HostIds:
          allOf:
            - $ref: "#/components/schemas/RequestHostIdList"
            - xml:
                name: hostId
              description: The IDs of the Dedicated Hosts to modify.
        HostRecovery:
          allOf:
            - $ref: "#/components/schemas/HostRecovery"
            - description: Indicates whether to enable or disable host recovery for the Dedicated Host. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-recovery.html"> Host recovery</a> in the <i>Amazon EC2 User Guide</i>.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>Specifies the instance type to be supported by the Dedicated Host. Specify this parameter to modify a Dedicated Host to support only a specific instance type.</p> <p>If you want to modify a Dedicated Host to support multiple instance types in its current instance family, omit this parameter and specify <b>InstanceFamily</b> instead. You cannot specify <b>InstanceType</b> and <b>InstanceFamily</b> in the same request.</p>
        InstanceFamily:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>Specifies the instance family to be supported by the Dedicated Host. Specify this parameter to modify a Dedicated Host to support multiple instance types within its current instance family.</p> <p>If you want to modify a Dedicated Host to support a specific instance type only, omit this parameter and specify <b>InstanceType</b> instead. You cannot specify <b>InstanceFamily</b> and <b>InstanceType</b> in the same request.</p>
    UnsuccessfulItemList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/UnsuccessfulItem"
          - xml:
              name: item
    ModifyIdFormatRequest:
      type: object
      required:
        - Resource
        - UseLongIds
      title: ModifyIdFormatRequest
      properties:
        Resource:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>.</p> <p>Alternatively, use the <code>all-current</code> option to include all resource types that are currently within their opt-in period for longer IDs.</p>"
        UseLongIds:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicate whether the resource should use longer IDs (17-character IDs).
    ModifyIdentityIdFormatRequest:
      type: object
      required:
        - PrincipalArn
        - Resource
        - UseLongIds
      title: ModifyIdentityIdFormatRequest
      properties:
        PrincipalArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: principalArn
              description: The ARN of the principal, which can be an IAM user, IAM role, or the root user. Specify <code>all</code> to modify the ID format for all IAM users, IAM roles, and the root user of the account.
        Resource:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resource
              description: "<p>The type of resource: <code>bundle</code> | <code>conversion-task</code> | <code>customer-gateway</code> | <code>dhcp-options</code> | <code>elastic-ip-allocation</code> | <code>elastic-ip-association</code> | <code>export-task</code> | <code>flow-log</code> | <code>image</code> | <code>import-task</code> | <code>internet-gateway</code> | <code>network-acl</code> | <code>network-acl-association</code> | <code>network-interface</code> | <code>network-interface-attachment</code> | <code>prefix-list</code> | <code>route-table</code> | <code>route-table-association</code> | <code>security-group</code> | <code>subnet</code> | <code>subnet-cidr-block-association</code> | <code>vpc</code> | <code>vpc-cidr-block-association</code> | <code>vpc-endpoint</code> | <code>vpc-peering-connection</code> | <code>vpn-connection</code> | <code>vpn-gateway</code>.</p> <p>Alternatively, use the <code>all-current</code> option to include all resource types that are currently within their opt-in period for longer IDs.</p>"
        UseLongIds:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: useLongIds
              description: Indicates whether the resource should use longer IDs (17-character IDs)
    ModifyImageAttributeRequest:
      type: object
      required:
        - ImageId
      title: ModifyImageAttributeRequest
      properties:
        Attribute:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the attribute to modify. The valid values are <code>description</code> and <code>launchPermission</code>.
        Description:
          allOf:
            - $ref: "#/components/schemas/AttributeValue"
            - description: A new description for the AMI.
        ImageId:
          allOf:
            - $ref: "#/components/schemas/ImageId"
            - description: The ID of the AMI.
        LaunchPermission:
          allOf:
            - $ref: "#/components/schemas/LaunchPermissionModifications"
            - description: A new launch permission for the AMI.
        OperationType:
          allOf:
            - $ref: "#/components/schemas/OperationType"
            - description: The operation type. This parameter can be used only when the <code>Attribute</code> parameter is <code>launchPermission</code>.
        ProductCodes:
          allOf:
            - $ref: "#/components/schemas/ProductCodeStringList"
            - xml:
                name: ProductCode
              description: Not supported.
        UserGroups:
          allOf:
            - $ref: "#/components/schemas/UserGroupStringList"
            - xml:
                name: UserGroup
              description: The user groups. This parameter can be used only when the <code>Attribute</code> parameter is <code>launchPermission</code>.
        UserIds:
          allOf:
            - $ref: "#/components/schemas/UserIdStringList"
            - xml:
                name: UserId
              description: The Amazon Web Services account IDs. This parameter can be used only when the <code>Attribute</code> parameter is <code>launchPermission</code>.
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The value of the attribute being modified. This parameter can be used only when the <code>Attribute</code> parameter is <code>description</code>.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for ModifyImageAttribute.
    ModifyInstanceAttributeRequest:
      type: object
      required:
        - InstanceId
      title: ModifyInstanceAttributeRequest
      properties:
        SourceDestCheck:
          allOf:
            - $ref: "#/components/schemas/AttributeBooleanValue"
            - description: Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives. If the value is <code>true</code>, source/destination checks are enabled; otherwise, they are disabled. The default value is <code>true</code>. You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.
        Attribute:
          allOf:
            - $ref: "#/components/schemas/InstanceAttributeName"
            - xml:
                name: attribute
              description: The name of the attribute.
        BlockDeviceMappings:
          allOf:
            - $ref: "#/components/schemas/InstanceBlockDeviceMappingSpecificationList"
            - xml:
                name: blockDeviceMapping
              description: <p>Modifies the <code>DeleteOnTermination</code> attribute for volumes that are currently attached. The volume must be owned by the caller. If no value is specified for <code>DeleteOnTermination</code>, the default is <code>true</code> and the volume is deleted when the instance is terminated.</p> <p>To add instance store volumes to an Amazon EBS-backed instance, you must add them when you launch the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html#Using_OverridingAMIBDM">Updating the block device mapping when launching an instance</a> in the <i>Amazon EC2 User Guide</i>.</p>
        DisableApiTermination:
          allOf:
            - $ref: "#/components/schemas/AttributeBooleanValue"
            - xml:
                name: disableApiTermination
              description: If the value is <code>true</code>, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. You cannot use this parameter for Spot Instances.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        EbsOptimized:
          allOf:
            - $ref: "#/components/schemas/AttributeBooleanValue"
            - xml:
                name: ebsOptimized
              description: Specifies whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.
        EnaSupport:
          allOf:
            - $ref: "#/components/schemas/AttributeBooleanValue"
            - xml:
                name: enaSupport
              description: <p>Set to <code>true</code> to enable enhanced networking with ENA for the instance.</p> <p>This option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.</p>
        Groups:
          allOf:
            - $ref: "#/components/schemas/GroupIdStringList"
            - xml:
                name: GroupId
              description: "[EC2-VPC] Replaces the security groups of the instance with the specified security groups. You must specify at least one security group, even if it's just the default security group for the VPC. You must specify the security group ID, not the security group name."
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - xml:
                name: instanceId
              description: The ID of the instance.
        InstanceInitiatedShutdownBehavior:
          allOf:
            - $ref: "#/components/schemas/AttributeValue"
            - xml:
                name: instanceInitiatedShutdownBehavior
              description: Specifies whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/AttributeValue"
            - xml:
                name: instanceType
              description: Changes the instance type to the specified value. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide</i>. If the instance type is not valid, the error returned is <code>InvalidInstanceAttributeValue</code>.
        Kernel:
          allOf:
            - $ref: "#/components/schemas/AttributeValue"
            - xml:
                name: kernel
              description: Changes the instance's kernel to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">PV-GRUB</a>.
        Ramdisk:
          allOf:
            - $ref: "#/components/schemas/AttributeValue"
            - xml:
                name: ramdisk
              description: Changes the instance's RAM disk to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">PV-GRUB</a>.
        SriovNetSupport:
          allOf:
            - $ref: "#/components/schemas/AttributeValue"
            - xml:
                name: sriovNetSupport
              description: <p>Set to <code>simple</code> to enable enhanced networking with the Intel 82599 Virtual Function interface for the instance.</p> <p>There is no way to disable enhanced networking with the Intel 82599 Virtual Function interface at this time.</p> <p>This option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.</p>
        UserData:
          allOf:
            - $ref: "#/components/schemas/BlobAttributeValue"
            - xml:
                name: userData
              description: Changes the instance's user data to the specified value. If you are using an Amazon Web Services SDK or command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text.
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: value
              description: A new value for the attribute. Use only with the <code>kernel</code>, <code>ramdisk</code>, <code>userData</code>, <code>disableApiTermination</code>, or <code>instanceInitiatedShutdownBehavior</code> attribute.
    ModifyInstanceCapacityReservationAttributesRequest:
      type: object
      required:
        - InstanceId
        - CapacityReservationSpecification
      title: ModifyInstanceCapacityReservationAttributesRequest
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - description: The ID of the instance to be modified.
        CapacityReservationSpecification:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationSpecification"
            - description: Information about the Capacity Reservation targeting option.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ModifyInstanceCreditSpecificationRequest:
      type: object
      required:
        - InstanceCreditSpecifications
      title: ModifyInstanceCreditSpecificationRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A unique, case-sensitive token that you provide to ensure idempotency of your modification request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
        InstanceCreditSpecifications:
          allOf:
            - $ref: "#/components/schemas/InstanceCreditSpecificationListRequest"
            - xml:
                name: InstanceCreditSpecification
              description: Information about the credit option for CPU usage.
    SuccessfulInstanceCreditSpecificationSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SuccessfulInstanceCreditSpecificationItem"
          - xml:
              name: item
    UnsuccessfulInstanceCreditSpecificationSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/UnsuccessfulInstanceCreditSpecificationItem"
          - xml:
              name: item
    ModifyInstanceEventStartTimeRequest:
      type: object
      required:
        - InstanceId
        - InstanceEventId
        - NotBefore
      title: ModifyInstanceEventStartTimeRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - description: The ID of the instance with the scheduled event.
        InstanceEventId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the event whose date and time you are modifying.
        NotBefore:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The new date and time when the event will take place.
    ModifyInstanceEventWindowRequest:
      type: object
      required:
        - InstanceEventWindowId
      title: ModifyInstanceEventWindowRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the event window.
        InstanceEventWindowId:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindowId"
            - description: The ID of the event window.
        TimeRanges:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindowTimeRangeRequestSet"
            - xml:
                name: TimeRange
              description: The time ranges of the event window.
        CronExpression:
          allOf:
            - $ref: "#/components/schemas/InstanceEventWindowCronExpression"
            - description: <p>The cron expression of the event window, for example, <code>* 0-4,20-23 * * 1,5</code>.</p> <p>Constraints:</p> <ul> <li> <p>Only hour and day of the week values are supported.</p> </li> <li> <p>For day of the week values, you can specify either integers <code>0</code> through <code>6</code>, or alternative single values <code>SUN</code> through <code>SAT</code>.</p> </li> <li> <p>The minute, month, and year must be specified by <code>*</code>.</p> </li> <li> <p>The hour value must be one or a multiple range, for example, <code>0-4</code> or <code>0-4,20-23</code>.</p> </li> <li> <p>Each hour range must be &gt;= 2 hours, for example, <code>0-2</code> or <code>20-23</code>.</p> </li> <li> <p>The event window must be &gt;= 4 hours. The combined total time ranges in the event window must be &gt;= 4 hours.</p> </li> </ul> <p>For more information about cron expressions, see <a href="https://en.wikipedia.org/wiki/Cron">cron</a> on the <i>Wikipedia website</i>.</p>
    ModifyInstanceMetadataOptionsRequest:
      type: object
      required:
        - InstanceId
      title: ModifyInstanceMetadataOptionsRequest
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - description: The ID of the instance.
        HttpTokens:
          allOf:
            - $ref: "#/components/schemas/HttpTokensState"
            - description: <p>The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is <code>optional</code>.</p> <p>If the state is <code>optional</code>, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned.</p> <p>If the state is <code>required</code>, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credential always returns the version 2.0 credentials; the version 1.0 credentials are not available.</p>
        HttpPutResponseHopLimit:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. If no parameter is specified, the existing state is maintained.</p> <p>Possible values: Integers from 1 to 64</p>"
        HttpEndpoint:
          allOf:
            - $ref: "#/components/schemas/InstanceMetadataEndpointState"
            - description: <p>This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the existing state is maintained.</p> <note> <p>If you specify a value of <code>disabled</code>, you will not be able to access your instance metadata.</p> </note>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        HttpProtocolIpv6:
          allOf:
            - $ref: "#/components/schemas/InstanceMetadataProtocolState"
            - description: Enables or disables the IPv6 endpoint for the instance metadata service.
    ModifyInstancePlacementRequest:
      type: object
      required:
        - InstanceId
      title: ModifyInstancePlacementRequest
      properties:
        Affinity:
          allOf:
            - $ref: "#/components/schemas/Affinity"
            - xml:
                name: affinity
              description: The affinity setting for the instance.
        GroupName:
          allOf:
            - $ref: "#/components/schemas/PlacementGroupName"
            - description: <p>The name of the placement group in which to place the instance. For spread placement groups, the instance must have a tenancy of <code>default</code>. For cluster and partition placement groups, the instance must have a tenancy of <code>default</code> or <code>dedicated</code>.</p> <p>To remove an instance from a placement group, specify an empty string ("").</p>
        HostId:
          allOf:
            - $ref: "#/components/schemas/DedicatedHostId"
            - xml:
                name: hostId
              description: The ID of the Dedicated Host with which to associate the instance.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - xml:
                name: instanceId
              description: The ID of the instance that you are modifying.
        Tenancy:
          allOf:
            - $ref: "#/components/schemas/HostTenancy"
            - xml:
                name: tenancy
              description: <p>The tenancy for the instance.</p> <p>For T3 instances, you can't change the tenancy from <code>dedicated</code> to <code>host</code>, or from <code>host</code> to <code>dedicated</code>. Attempting to make one of these unsupported tenancy changes results in the <code>InvalidTenancy</code> error code.</p>
        PartitionNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: Reserved for future use.
        HostResourceGroupArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ARN of the host resource group in which to place the instance.
    ModifyLaunchTemplateRequest:
      type: object
      title: ModifyLaunchTemplateRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: '<p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p> <p>Constraint: Maximum 128 ASCII characters.</p>'
        LaunchTemplateId:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateId"
            - description: The ID of the launch template. You must specify either the launch template ID or launch template name in the request.
        LaunchTemplateName:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateName"
            - description: The name of the launch template. You must specify either the launch template ID or launch template name in the request.
        DefaultVersion:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: SetDefaultVersion
              description: The version number of the launch template to set as the default version.
    RemovePrefixListEntries:
      type: array
      items:
        $ref: "#/components/schemas/RemovePrefixListEntry"
      minItems: 0
      maxItems: 100
    ModifyManagedPrefixListRequest:
      type: object
      required:
        - PrefixListId
      title: ModifyManagedPrefixListRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        PrefixListId:
          allOf:
            - $ref: "#/components/schemas/PrefixListResourceId"
            - description: The ID of the prefix list.
        CurrentVersion:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The current version of the prefix list.
        PrefixListName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A name for the prefix list.
        AddEntries:
          allOf:
            - $ref: "#/components/schemas/AddPrefixListEntries"
            - xml:
                name: AddEntry
              description: One or more entries to add to the prefix list.
        RemoveEntries:
          allOf:
            - $ref: "#/components/schemas/RemovePrefixListEntries"
            - xml:
                name: RemoveEntry
              description: One or more entries to remove from the prefix list.
        MaxEntries:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>The maximum number of entries for the prefix list. You cannot modify the entries of a prefix list and modify the size of a prefix list at the same time.</p> <p>If any of the resources that reference the prefix list cannot support the new maximum size, the modify operation fails. Check the state message for the IDs of the first ten resources that do not support the new maximum size.</p>
    NetworkInterfaceAttachmentChanges:
      type: object
      properties:
        AttachmentId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceAttachmentId"
            - xml:
                name: attachmentId
              description: The ID of the network interface attachment.
        DeleteOnTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: deleteOnTermination
              description: Indicates whether the network interface is deleted when the instance is terminated.
      description: Describes an attachment change.
    ModifyNetworkInterfaceAttributeRequest:
      type: object
      required:
        - NetworkInterfaceId
      title: ModifyNetworkInterfaceAttributeRequest
      properties:
        Attachment:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceAttachmentChanges"
            - xml:
                name: attachment
              description: Information about the interface attachment. If modifying the 'delete on termination' attribute, you must specify the ID of the interface attachment.
        Description:
          allOf:
            - $ref: "#/components/schemas/AttributeValue"
            - xml:
                name: description
              description: A description for the network interface.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Groups:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupIdStringList"
            - xml:
                name: SecurityGroupId
              description: Changes the security groups for the network interface. The new set of groups you specify replaces the current set. You must specify at least one group, even if it's just the default security group in the VPC. You must specify the ID of the security group, not the name.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceId"
            - xml:
                name: networkInterfaceId
              description: The ID of the network interface.
        SourceDestCheck:
          allOf:
            - $ref: "#/components/schemas/AttributeBooleanValue"
            - xml:
                name: sourceDestCheck
              description: Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives. If the value is <code>true</code>, source/destination checks are enabled; otherwise, they are disabled. The default value is <code>true</code>. You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.
      description: Contains the parameters for ModifyNetworkInterfaceAttribute.
    ReservedInstancesConfigurationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ReservedInstancesConfiguration"
          - xml:
              name: item
    ModifyReservedInstancesRequest:
      type: object
      required:
        - ReservedInstancesIds
        - TargetConfigurations
      title: ModifyReservedInstancesRequest
      properties:
        ReservedInstancesIds:
          allOf:
            - $ref: "#/components/schemas/ReservedInstancesIdStringList"
            - xml:
                name: ReservedInstancesId
              description: The IDs of the Reserved Instances to modify.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: A unique, case-sensitive token you provide to ensure idempotency of your modification request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
        TargetConfigurations:
          allOf:
            - $ref: "#/components/schemas/ReservedInstancesConfigurationList"
            - xml:
                name: ReservedInstancesConfigurationSetItemType
              description: The configuration settings for the Reserved Instances to modify.
      description: Contains the parameters for ModifyReservedInstances.
    SecurityGroupRuleUpdateList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SecurityGroupRuleUpdate"
          - xml:
              name: item
    ModifySecurityGroupRulesRequest:
      type: object
      required:
        - GroupId
        - SecurityGroupRules
      title: ModifySecurityGroupRulesRequest
      properties:
        GroupId:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupId"
            - description: The ID of the security group.
        SecurityGroupRules:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupRuleUpdateList"
            - xml:
                name: SecurityGroupRule
              description: Information about the security group properties to update.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ModifySnapshotAttributeRequest:
      type: object
      required:
        - SnapshotId
      title: ModifySnapshotAttributeRequest
      properties:
        Attribute:
          allOf:
            - $ref: "#/components/schemas/SnapshotAttributeName"
            - description: The snapshot attribute to modify. Only volume creation permissions can be modified.
        CreateVolumePermission:
          allOf:
            - $ref: "#/components/schemas/CreateVolumePermissionModifications"
            - description: A JSON representation of the snapshot attribute modification.
        GroupNames:
          allOf:
            - $ref: "#/components/schemas/GroupNameStringList"
            - xml:
                name: UserGroup
              description: The group to modify for the snapshot.
        OperationType:
          allOf:
            - $ref: "#/components/schemas/OperationType"
            - description: The type of operation to perform to the attribute.
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/SnapshotId"
            - description: The ID of the snapshot.
        UserIds:
          allOf:
            - $ref: "#/components/schemas/UserIdStringList"
            - xml:
                name: UserId
              description: The account ID to modify for the snapshot.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ModifySpotFleetRequestRequest:
      type: object
      required:
        - SpotFleetRequestId
      title: ModifySpotFleetRequestRequest
      properties:
        ExcessCapacityTerminationPolicy:
          allOf:
            - $ref: "#/components/schemas/ExcessCapacityTerminationPolicy"
            - xml:
                name: excessCapacityTerminationPolicy
              description: Indicates whether running Spot Instances should be terminated if the target capacity of the Spot Fleet request is decreased below the current size of the Spot Fleet.
        LaunchTemplateConfigs:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateConfigList"
            - xml:
                name: LaunchTemplateConfig
              description: The launch template and overrides. You can only use this parameter if you specified a launch template (<code>LaunchTemplateConfigs</code>) in your Spot Fleet request. If you specified <code>LaunchSpecifications</code> in your Spot Fleet request, then omit this parameter.
        SpotFleetRequestId:
          allOf:
            - $ref: "#/components/schemas/SpotFleetRequestId"
            - xml:
                name: spotFleetRequestId
              description: The ID of the Spot Fleet request.
        TargetCapacity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: targetCapacity
              description: The size of the fleet.
        OnDemandTargetCapacity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of On-Demand Instances in the fleet.
        Context:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Reserved.
      description: Contains the parameters for ModifySpotFleetRequest.
    ModifySubnetAttributeRequest:
      type: object
      required:
        - SubnetId
      title: ModifySubnetAttributeRequest
      properties:
        AssignIpv6AddressOnCreation:
          allOf:
            - $ref: "#/components/schemas/AttributeBooleanValue"
            - description: <p>Specify <code>true</code> to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. This includes a network interface that's created when launching an instance into the subnet (the instance therefore receives an IPv6 address). </p> <p>If you enable the IPv6 addressing feature for your subnet, your network interface or instance only receives an IPv6 address if it's created using version <code>2016-11-15</code> or later of the Amazon EC2 API.</p>
        MapPublicIpOnLaunch:
          allOf:
            - $ref: "#/components/schemas/AttributeBooleanValue"
            - description: Specify <code>true</code> to indicate that network interfaces attached to instances created in the specified subnet should be assigned a public IPv4 address.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - xml:
                name: subnetId
              description: The ID of the subnet.
        MapCustomerOwnedIpOnLaunch:
          allOf:
            - $ref: "#/components/schemas/AttributeBooleanValue"
            - description: <p>Specify <code>true</code> to indicate that network interfaces attached to instances created in the specified subnet should be assigned a customer-owned IPv4 address.</p> <p>When this value is <code>true</code>, you must specify the customer-owned IP pool using <code>CustomerOwnedIpv4Pool</code>.</p>
        CustomerOwnedIpv4Pool:
          allOf:
            - $ref: "#/components/schemas/CoipPoolId"
            - description: <p>The customer-owned IPv4 address pool associated with the subnet.</p> <p>You must set this value when you specify <code>true</code> for <code>MapCustomerOwnedIpOnLaunch</code>.</p>
    TrafficMirrorNetworkServiceList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TrafficMirrorNetworkService"
          - xml:
              name: item
    ModifyTrafficMirrorFilterNetworkServicesRequest:
      type: object
      required:
        - TrafficMirrorFilterId
      title: ModifyTrafficMirrorFilterNetworkServicesRequest
      properties:
        TrafficMirrorFilterId:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorFilterId"
            - description: The ID of the Traffic Mirror filter.
        AddNetworkServices:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorNetworkServiceList"
            - xml:
                name: AddNetworkService
              description: The network service, for example Amazon DNS, that you want to mirror.
        RemoveNetworkServices:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorNetworkServiceList"
            - xml:
                name: RemoveNetworkService
              description: The network service, for example Amazon DNS, that you no longer want to mirror.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TrafficMirrorFilterRuleFieldList:
      type: array
      items:
        $ref: "#/components/schemas/TrafficMirrorFilterRuleField"
    ModifyTrafficMirrorFilterRuleRequest:
      type: object
      required:
        - TrafficMirrorFilterRuleId
      title: ModifyTrafficMirrorFilterRuleRequest
      properties:
        TrafficMirrorFilterRuleId:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorFilterRuleId"
            - description: The ID of the Traffic Mirror rule.
        TrafficDirection:
          allOf:
            - $ref: "#/components/schemas/TrafficDirection"
            - description: The type of traffic (<code>ingress</code> | <code>egress</code>) to assign to the rule.
        RuleNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.
        RuleAction:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorRuleAction"
            - description: The action to assign to the rule.
        DestinationPortRange:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorPortRangeRequest"
            - description: The destination ports that are associated with the Traffic Mirror rule.
        SourcePortRange:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorPortRangeRequest"
            - description: The port range to assign to the Traffic Mirror rule.
        Protocol:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The protocol, for example TCP, to assign to the Traffic Mirror rule.
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The destination CIDR block to assign to the Traffic Mirror rule.
        SourceCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The source CIDR block to assign to the Traffic Mirror rule.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The description to assign to the Traffic Mirror rule.
        RemoveFields:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorFilterRuleFieldList"
            - xml:
                name: RemoveField
              description: <p>The properties that you want to remove from the Traffic Mirror filter rule.</p> <p>When you remove a property from a Traffic Mirror filter rule, the property is set to the default.</p>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TrafficMirrorSessionFieldList:
      type: array
      items:
        $ref: "#/components/schemas/TrafficMirrorSessionField"
    ModifyTrafficMirrorSessionRequest:
      type: object
      required:
        - TrafficMirrorSessionId
      title: ModifyTrafficMirrorSessionRequest
      properties:
        TrafficMirrorSessionId:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorSessionId"
            - description: The ID of the Traffic Mirror session.
        TrafficMirrorTargetId:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorTargetId"
            - description: The Traffic Mirror target. The target must be in the same VPC as the source, or have a VPC peering connection with the source.
        TrafficMirrorFilterId:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorFilterId"
            - description: The ID of the Traffic Mirror filter.
        PacketLength:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of bytes in each packet to mirror. These are bytes after the VXLAN header. To mirror a subset, set this to the length (in bytes) to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target. Do not specify this parameter when you want to mirror the entire packet.
        SessionNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.</p> <p>Valid values are 1-32766.</p>
        VirtualNetworkId:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The virtual network ID of the Traffic Mirror session.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The description to assign to the Traffic Mirror session.
        RemoveFields:
          allOf:
            - $ref: "#/components/schemas/TrafficMirrorSessionFieldList"
            - xml:
                name: RemoveField
              description: <p>The properties that you want to remove from the Traffic Mirror session.</p> <p>When you remove a property from a Traffic Mirror session, the property is set to the default.</p>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ModifyTransitGatewayOptions:
      type: object
      properties:
        AddTransitGatewayCidrBlocks:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayCidrBlockStringList"
            - description: Adds IPv4 or IPv6 CIDR blocks for the transit gateway. Must be a size /24 CIDR block or larger for IPv4, or a size /64 CIDR block or larger for IPv6.
        RemoveTransitGatewayCidrBlocks:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayCidrBlockStringList"
            - description: Removes CIDR blocks for the transit gateway.
        VpnEcmpSupport:
          allOf:
            - $ref: "#/components/schemas/VpnEcmpSupportValue"
            - description: Enable or disable Equal Cost Multipath Protocol support.
        DnsSupport:
          allOf:
            - $ref: "#/components/schemas/DnsSupportValue"
            - description: Enable or disable DNS support.
        AutoAcceptSharedAttachments:
          allOf:
            - $ref: "#/components/schemas/AutoAcceptSharedAttachmentsValue"
            - description: Enable or disable automatic acceptance of attachment requests.
        DefaultRouteTableAssociation:
          allOf:
            - $ref: "#/components/schemas/DefaultRouteTableAssociationValue"
            - description: Enable or disable automatic association with the default association route table.
        AssociationDefaultRouteTableId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableId"
            - description: The ID of the default association route table.
        DefaultRouteTablePropagation:
          allOf:
            - $ref: "#/components/schemas/DefaultRouteTablePropagationValue"
            - description: Enable or disable automatic propagation of routes to the default propagation route table.
        PropagationDefaultRouteTableId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableId"
            - description: The ID of the default propagation route table.
      description: The transit gateway options.
    ModifyTransitGatewayPrefixListReferenceRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
        - PrefixListId
      title: ModifyTransitGatewayPrefixListReferenceRequest
      properties:
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableId"
            - description: The ID of the transit gateway route table.
        PrefixListId:
          allOf:
            - $ref: "#/components/schemas/PrefixListResourceId"
            - description: The ID of the prefix list.
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the attachment to which traffic is routed.
        Blackhole:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether to drop traffic that matches this route.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ModifyTransitGatewayRequest:
      type: object
      required:
        - TransitGatewayId
      title: ModifyTransitGatewayRequest
      properties:
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayId"
            - description: The ID of the transit gateway.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The description for the transit gateway.
        Options:
          allOf:
            - $ref: "#/components/schemas/ModifyTransitGatewayOptions"
            - description: The options to modify.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ModifyTransitGatewayVpcAttachmentRequestOptions:
      type: object
      properties:
        DnsSupport:
          allOf:
            - $ref: "#/components/schemas/DnsSupportValue"
            - description: Enable or disable DNS support. The default is <code>enable</code>.
        Ipv6Support:
          allOf:
            - $ref: "#/components/schemas/Ipv6SupportValue"
            - description: Enable or disable IPv6 support. The default is <code>enable</code>.
        ApplianceModeSupport:
          allOf:
            - $ref: "#/components/schemas/ApplianceModeSupportValue"
            - description: Enable or disable support for appliance mode. If enabled, a traffic flow between a source and destination uses the same Availability Zone for the VPC attachment for the lifetime of that flow. The default is <code>disable</code>.
      description: Describes the options for a VPC attachment.
    ModifyTransitGatewayVpcAttachmentRequest:
      type: object
      required:
        - TransitGatewayAttachmentId
      title: ModifyTransitGatewayVpcAttachmentRequest
      properties:
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the attachment.
        AddSubnetIds:
          allOf:
            - $ref: "#/components/schemas/TransitGatewaySubnetIdList"
            - description: The IDs of one or more subnets to add. You can specify at most one subnet per Availability Zone.
        RemoveSubnetIds:
          allOf:
            - $ref: "#/components/schemas/TransitGatewaySubnetIdList"
            - description: The IDs of one or more subnets to remove.
        Options:
          allOf:
            - $ref: "#/components/schemas/ModifyTransitGatewayVpcAttachmentRequestOptions"
            - description: The new VPC attachment options.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ModifyVolumeAttributeRequest:
      type: object
      required:
        - VolumeId
      title: ModifyVolumeAttributeRequest
      properties:
        AutoEnableIO:
          allOf:
            - $ref: "#/components/schemas/AttributeBooleanValue"
            - description: Indicates whether the volume should be auto-enabled for I/O operations.
        VolumeId:
          allOf:
            - $ref: "#/components/schemas/VolumeId"
            - description: The ID of the volume.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ModifyVolumeRequest:
      type: object
      required:
        - VolumeId
      title: ModifyVolumeRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        VolumeId:
          allOf:
            - $ref: "#/components/schemas/VolumeId"
            - description: The ID of the volume.
        Size:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The target size of the volume, in GiB. The target volume size must be greater than or equal to the existing size of the volume.</p> <p>The following are the supported volumes sizes for each volume type:</p> <ul> <li> <p> <code>gp2</code> and <code>gp3</code>: 1-16,384</p> </li> <li> <p> <code>io1</code> and <code>io2</code>: 4-16,384</p> </li> <li> <p> <code>st1</code> and <code>sc1</code>: 125-16,384</p> </li> <li> <p> <code>standard</code>: 1-1,024</p> </li> </ul> <p>Default: The existing size is retained.</p>"
        VolumeType:
          allOf:
            - $ref: "#/components/schemas/VolumeType"
            - description: '<p>The target EBS volume type of the volume. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS volume types</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> <p>Default: The existing type is retained.</p>'
        Iops:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The target IOPS rate of the volume. This parameter is valid only for <code>gp3</code>, <code>io1</code>, and <code>io2</code> volumes.</p> <p>The following are the supported values for each volume type:</p> <ul> <li> <p> <code>gp3</code>: 3,000-16,000 IOPS</p> </li> <li> <p> <code>io1</code>: 100-64,000 IOPS</p> </li> <li> <p> <code>io2</code>: 100-64,000 IOPS</p> </li> </ul> <p>Default: The existing value is retained if you keep the same volume type. If you change the volume type to <code>io1</code>, <code>io2</code>, or <code>gp3</code>, the default is 3,000.</p>"
        Throughput:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The target throughput of the volume, in MiB/s. This parameter is valid only for <code>gp3</code> volumes. The maximum value is 1,000.</p> <p>Default: The existing value is retained if the source and target volume type is <code>gp3</code>. Otherwise, the default value is 125.</p> <p>Valid Range: Minimum value of 125. Maximum value of 1000.</p>"
        MultiAttachEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Specifies whether to enable Amazon EBS Multi-Attach. If you enable Multi-Attach, you can attach the volume to up to 16 <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances"> Nitro-based instances</a> in the same Availability Zone. This parameter is supported with <code>io1</code> and <code>io2</code> volumes only. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volumes-multi.html"> Amazon EBS Multi-Attach</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
    VolumeModification:
      type: object
      properties:
        VolumeId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: volumeId
              description: The ID of the volume.
        ModificationState:
          allOf:
            - $ref: "#/components/schemas/VolumeModificationState"
            - xml:
                name: modificationState
              description: The current modification state. The modification state is null for unmodified volumes.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: statusMessage
              description: A status message about the modification progress or failure.
        TargetSize:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: targetSize
              description: The target size of the volume, in GiB.
        TargetIops:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: targetIops
              description: The target IOPS rate of the volume.
        TargetVolumeType:
          allOf:
            - $ref: "#/components/schemas/VolumeType"
            - xml:
                name: targetVolumeType
              description: The target EBS volume type of the volume.
        TargetThroughput:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: targetThroughput
              description: The target throughput of the volume, in MiB/s.
        TargetMultiAttachEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: targetMultiAttachEnabled
              description: The target setting for Amazon EBS Multi-Attach.
        OriginalSize:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: originalSize
              description: The original size of the volume, in GiB.
        OriginalIops:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: originalIops
              description: The original IOPS rate of the volume.
        OriginalVolumeType:
          allOf:
            - $ref: "#/components/schemas/VolumeType"
            - xml:
                name: originalVolumeType
              description: The original EBS volume type of the volume.
        OriginalThroughput:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: originalThroughput
              description: The original throughput of the volume, in MiB/s.
        OriginalMultiAttachEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: originalMultiAttachEnabled
              description: The original setting for Amazon EBS Multi-Attach.
        Progress:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: progress
              description: The modification progress, from 0 to 100 percent complete.
        StartTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: startTime
              description: The modification start time.
        EndTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: endTime
              description: The modification completion or failure time.
      description: <p>Describes the modification status of an EBS volume.</p> <p>If the volume has never been modified, some element values will be null.</p>
    ModifyVpcAttributeRequest:
      type: object
      required:
        - VpcId
      title: ModifyVpcAttributeRequest
      properties:
        EnableDnsHostnames:
          allOf:
            - $ref: "#/components/schemas/AttributeBooleanValue"
            - description: <p>Indicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not.</p> <p>You cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute. You can only enable DNS hostnames if you've enabled DNS support.</p>
        EnableDnsSupport:
          allOf:
            - $ref: "#/components/schemas/AttributeBooleanValue"
            - description: <p>Indicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range "plus two" succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled.</p> <p>You cannot modify the DNS resolution and DNS hostnames attributes in the same request. Use separate requests for each attribute.</p>
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - xml:
                name: vpcId
              description: The ID of the VPC.
    ModifyVpcEndpointConnectionNotificationRequest:
      type: object
      required:
        - ConnectionNotificationId
      title: ModifyVpcEndpointConnectionNotificationRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ConnectionNotificationId:
          allOf:
            - $ref: "#/components/schemas/ConnectionNotificationId"
            - description: The ID of the notification.
        ConnectionNotificationArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ARN for the SNS topic for the notification.
        ConnectionEvents:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - description: One or more events for the endpoint. Valid values are <code>Accept</code>, <code>Connect</code>, <code>Delete</code>, and <code>Reject</code>.
    ModifyVpcEndpointRequest:
      type: object
      required:
        - VpcEndpointId
      title: ModifyVpcEndpointRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        VpcEndpointId:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointId"
            - description: The ID of the endpoint.
        ResetPolicy:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: (Gateway endpoint) Specify <code>true</code> to reset the policy document to the default policy. The default policy allows full access to the service.
        PolicyDocument:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: (Interface and gateway endpoints) A policy to attach to the endpoint that controls access to the service. The policy must be in valid JSON format.
        AddRouteTableIds:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointRouteTableIdList"
            - xml:
                name: AddRouteTableId
              description: (Gateway endpoint) One or more route tables IDs to associate with the endpoint.
        RemoveRouteTableIds:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointRouteTableIdList"
            - xml:
                name: RemoveRouteTableId
              description: (Gateway endpoint) One or more route table IDs to disassociate from the endpoint.
        AddSubnetIds:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointSubnetIdList"
            - xml:
                name: AddSubnetId
              description: (Interface and Gateway Load Balancer endpoints) One or more subnet IDs in which to serve the endpoint. For a Gateway Load Balancer endpoint, you can specify only one subnet.
        RemoveSubnetIds:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointSubnetIdList"
            - xml:
                name: RemoveSubnetId
              description: (Interface endpoint) One or more subnets IDs in which to remove the endpoint.
        AddSecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointSecurityGroupIdList"
            - xml:
                name: AddSecurityGroupId
              description: (Interface endpoint) One or more security group IDs to associate with the network interface.
        RemoveSecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointSecurityGroupIdList"
            - xml:
                name: RemoveSecurityGroupId
              description: (Interface endpoint) One or more security group IDs to disassociate from the network interface.
        PrivateDnsEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: (Interface endpoint) Indicates whether a private hosted zone is associated with the VPC.
      description: Contains the parameters for ModifyVpcEndpoint.
    ModifyVpcEndpointServiceConfigurationRequest:
      type: object
      required:
        - ServiceId
      title: ModifyVpcEndpointServiceConfigurationRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ServiceId:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointServiceId"
            - description: The ID of the service.
        PrivateDnsName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: (Interface endpoint configuration) The private DNS name to assign to the endpoint service.
        RemovePrivateDnsName:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: (Interface endpoint configuration) Removes the private DNS name of the endpoint service.
        AcceptanceRequired:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether requests to create an endpoint to your service must be accepted.
        AddNetworkLoadBalancerArns:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: AddNetworkLoadBalancerArn
              description: The Amazon Resource Names (ARNs) of Network Load Balancers to add to your service configuration.
        RemoveNetworkLoadBalancerArns:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: RemoveNetworkLoadBalancerArn
              description: The Amazon Resource Names (ARNs) of Network Load Balancers to remove from your service configuration.
        AddGatewayLoadBalancerArns:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: AddGatewayLoadBalancerArn
              description: The Amazon Resource Names (ARNs) of Gateway Load Balancers to add to your service configuration.
        RemoveGatewayLoadBalancerArns:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: RemoveGatewayLoadBalancerArn
              description: The Amazon Resource Names (ARNs) of Gateway Load Balancers to remove from your service configuration.
    ModifyVpcEndpointServicePermissionsRequest:
      type: object
      required:
        - ServiceId
      title: ModifyVpcEndpointServicePermissionsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ServiceId:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointServiceId"
            - description: The ID of the service.
        AddAllowedPrincipals:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - description: The Amazon Resource Names (ARN) of one or more principals. Permissions are granted to the principals in this list. To grant permissions to all principals, specify an asterisk (*).
        RemoveAllowedPrincipals:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - description: The Amazon Resource Names (ARN) of one or more principals. Permissions are revoked for principals in this list.
    PeeringConnectionOptionsRequest:
      type: object
      properties:
        AllowDnsResolutionFromRemoteVpc:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: If true, enables a local VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the peer VPC.
        AllowEgressFromLocalClassicLinkToRemoteVpc:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: If true, enables outbound communication from an EC2-Classic instance that's linked to a local VPC using ClassicLink to instances in a peer VPC.
        AllowEgressFromLocalVpcToRemoteClassicLink:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: If true, enables outbound communication from instances in a local VPC to an EC2-Classic instance that's linked to a peer VPC using ClassicLink.
      description: The VPC peering connection options.
    ModifyVpcPeeringConnectionOptionsRequest:
      type: object
      required:
        - VpcPeeringConnectionId
      title: ModifyVpcPeeringConnectionOptionsRequest
      properties:
        AccepterPeeringConnectionOptions:
          allOf:
            - $ref: "#/components/schemas/PeeringConnectionOptionsRequest"
            - description: The VPC peering connection options for the accepter VPC.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        RequesterPeeringConnectionOptions:
          allOf:
            - $ref: "#/components/schemas/PeeringConnectionOptionsRequest"
            - description: The VPC peering connection options for the requester VPC.
        VpcPeeringConnectionId:
          allOf:
            - $ref: "#/components/schemas/VpcPeeringConnectionId"
            - description: The ID of the VPC peering connection.
    PeeringConnectionOptions:
      type: object
      properties:
        AllowDnsResolutionFromRemoteVpc:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: allowDnsResolutionFromRemoteVpc
              description: If true, the public DNS hostnames of instances in the specified VPC resolve to private IP addresses when queried from instances in the peer VPC.
        AllowEgressFromLocalClassicLinkToRemoteVpc:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: allowEgressFromLocalClassicLinkToRemoteVpc
              description: If true, enables outbound communication from an EC2-Classic instance that's linked to a local VPC using ClassicLink to instances in a peer VPC.
        AllowEgressFromLocalVpcToRemoteClassicLink:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: allowEgressFromLocalVpcToRemoteClassicLink
              description: If true, enables outbound communication from instances in a local VPC to an EC2-Classic instance that's linked to a peer VPC using ClassicLink.
      description: Describes the VPC peering connection options.
    VpcTenancy:
      type: string
      enum:
        - default
    ModifyVpcTenancyRequest:
      type: object
      required:
        - VpcId
        - InstanceTenancy
      title: ModifyVpcTenancyRequest
      properties:
        VpcId:
          allOf:
            - $ref: "#/components/schemas/VpcId"
            - description: The ID of the VPC.
        InstanceTenancy:
          allOf:
            - $ref: "#/components/schemas/VpcTenancy"
            - description: "The instance tenancy attribute for the VPC. "
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ModifyVpnConnectionOptionsRequest:
      type: object
      required:
        - VpnConnectionId
      title: ModifyVpnConnectionOptionsRequest
      properties:
        VpnConnectionId:
          allOf:
            - $ref: "#/components/schemas/VpnConnectionId"
            - description: "The ID of the Site-to-Site VPN connection. "
        LocalIpv4NetworkCidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The IPv4 CIDR on the customer gateway (on-premises) side of the VPN connection.</p> <p>Default: <code>0.0.0.0/0</code> </p>"
        RemoteIpv4NetworkCidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The IPv4 CIDR on the AWS side of the VPN connection.</p> <p>Default: <code>0.0.0.0/0</code> </p>"
        LocalIpv6NetworkCidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The IPv6 CIDR on the customer gateway (on-premises) side of the VPN connection.</p> <p>Default: <code>::/0</code> </p>"
        RemoteIpv6NetworkCidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The IPv6 CIDR on the AWS side of the VPN connection.</p> <p>Default: <code>::/0</code> </p>"
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ModifyVpnConnectionRequest:
      type: object
      required:
        - VpnConnectionId
      title: ModifyVpnConnectionRequest
      properties:
        VpnConnectionId:
          allOf:
            - $ref: "#/components/schemas/VpnConnectionId"
            - description: The ID of the VPN connection.
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayId"
            - description: The ID of the transit gateway.
        CustomerGatewayId:
          allOf:
            - $ref: "#/components/schemas/CustomerGatewayId"
            - description: The ID of the customer gateway at your end of the VPN connection.
        VpnGatewayId:
          allOf:
            - $ref: "#/components/schemas/VpnGatewayId"
            - description: The ID of the virtual private gateway at the AWS side of the VPN connection.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ModifyVpnTunnelCertificateRequest:
      type: object
      required:
        - VpnConnectionId
        - VpnTunnelOutsideIpAddress
      title: ModifyVpnTunnelCertificateRequest
      properties:
        VpnConnectionId:
          allOf:
            - $ref: "#/components/schemas/VpnConnectionId"
            - description: The ID of the AWS Site-to-Site VPN connection.
        VpnTunnelOutsideIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The external IP address of the VPN tunnel.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ModifyVpnTunnelOptionsSpecification:
      type: object
      properties:
        TunnelInsideCidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The range of inside IPv4 addresses for the tunnel. Any specified CIDR blocks must be unique across all VPN connections that use the same virtual private gateway. </p> <p>Constraints: A size /30 CIDR block from the <code>169.254.0.0/16</code> range. The following CIDR blocks are reserved and cannot be used:</p> <ul> <li> <p> <code>169.254.0.0/30</code> </p> </li> <li> <p> <code>169.254.1.0/30</code> </p> </li> <li> <p> <code>169.254.2.0/30</code> </p> </li> <li> <p> <code>169.254.3.0/30</code> </p> </li> <li> <p> <code>169.254.4.0/30</code> </p> </li> <li> <p> <code>169.254.5.0/30</code> </p> </li> <li> <p> <code>169.254.169.252/30</code> </p> </li> </ul>"
        TunnelInsideIpv6Cidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The range of inside IPv6 addresses for the tunnel. Any specified CIDR blocks must be unique across all VPN connections that use the same transit gateway.</p> <p>Constraints: A size /126 CIDR block from the local <code>fd00::/8</code> range.</p>"
        PreSharedKey:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and the customer gateway.</p> <p>Constraints: Allowed characters are alphanumeric characters, periods (.), and underscores (_). Must be between 8 and 64 characters in length and cannot start with zero (0).</p>"
        Phase1LifetimeSeconds:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The lifetime for phase 1 of the IKE negotiation, in seconds.</p> <p>Constraints: A value between 900 and 28,800.</p> <p>Default: <code>28800</code> </p>"
        Phase2LifetimeSeconds:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The lifetime for phase 2 of the IKE negotiation, in seconds.</p> <p>Constraints: A value between 900 and 3,600. The value must be less than the value for <code>Phase1LifetimeSeconds</code>.</p> <p>Default: <code>3600</code> </p>"
        RekeyMarginTimeSeconds:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The margin time, in seconds, before the phase 2 lifetime expires, during which the AWS side of the VPN connection performs an IKE rekey. The exact time of the rekey is randomly selected based on the value for <code>RekeyFuzzPercentage</code>.</p> <p>Constraints: A value between 60 and half of <code>Phase2LifetimeSeconds</code>.</p> <p>Default: <code>540</code> </p>"
        RekeyFuzzPercentage:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The percentage of the rekey window (determined by <code>RekeyMarginTimeSeconds</code>) during which the rekey time is randomly selected.</p> <p>Constraints: A value between 0 and 100.</p> <p>Default: <code>100</code> </p>"
        ReplayWindowSize:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The number of packets in an IKE replay window.</p> <p>Constraints: A value between 64 and 2048.</p> <p>Default: <code>1024</code> </p>"
        DPDTimeoutSeconds:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The number of seconds after which a DPD timeout occurs.</p> <p>Constraints: A value between 0 and 30.</p> <p>Default: <code>30</code> </p>"
        DPDTimeoutAction:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The action to take after DPD timeout occurs. Specify <code>restart</code> to restart the IKE initiation. Specify <code>clear</code> to end the IKE session.</p> <p>Valid Values: <code>clear</code> | <code>none</code> | <code>restart</code> </p> <p>Default: <code>clear</code> </p>"
        Phase1EncryptionAlgorithms:
          allOf:
            - $ref: "#/components/schemas/Phase1EncryptionAlgorithmsRequestList"
            - xml:
                name: Phase1EncryptionAlgorithm
              description: "<p>One or more encryption algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p> <p>Valid values: <code>AES128</code> | <code>AES256</code> | <code>AES128-GCM-16</code> | <code>AES256-GCM-16</code> </p>"
        Phase2EncryptionAlgorithms:
          allOf:
            - $ref: "#/components/schemas/Phase2EncryptionAlgorithmsRequestList"
            - xml:
                name: Phase2EncryptionAlgorithm
              description: "<p>One or more encryption algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p> <p>Valid values: <code>AES128</code> | <code>AES256</code> | <code>AES128-GCM-16</code> | <code>AES256-GCM-16</code> </p>"
        Phase1IntegrityAlgorithms:
          allOf:
            - $ref: "#/components/schemas/Phase1IntegrityAlgorithmsRequestList"
            - xml:
                name: Phase1IntegrityAlgorithm
              description: "<p>One or more integrity algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p> <p>Valid values: <code>SHA1</code> | <code>SHA2-256</code> | <code>SHA2-384</code> | <code>SHA2-512</code> </p>"
        Phase2IntegrityAlgorithms:
          allOf:
            - $ref: "#/components/schemas/Phase2IntegrityAlgorithmsRequestList"
            - xml:
                name: Phase2IntegrityAlgorithm
              description: "<p>One or more integrity algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p> <p>Valid values: <code>SHA1</code> | <code>SHA2-256</code> | <code>SHA2-384</code> | <code>SHA2-512</code> </p>"
        Phase1DHGroupNumbers:
          allOf:
            - $ref: "#/components/schemas/Phase1DHGroupNumbersRequestList"
            - xml:
                name: Phase1DHGroupNumber
              description: "<p>One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p> <p>Valid values: <code>2</code> | <code>14</code> | <code>15</code> | <code>16</code> | <code>17</code> | <code>18</code> | <code>19</code> | <code>20</code> | <code>21</code> | <code>22</code> | <code>23</code> | <code>24</code> </p>"
        Phase2DHGroupNumbers:
          allOf:
            - $ref: "#/components/schemas/Phase2DHGroupNumbersRequestList"
            - xml:
                name: Phase2DHGroupNumber
              description: "<p>One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p> <p>Valid values: <code>2</code> | <code>5</code> | <code>14</code> | <code>15</code> | <code>16</code> | <code>17</code> | <code>18</code> | <code>19</code> | <code>20</code> | <code>21</code> | <code>22</code> | <code>23</code> | <code>24</code> </p>"
        IKEVersions:
          allOf:
            - $ref: "#/components/schemas/IKEVersionsRequestList"
            - xml:
                name: IKEVersion
              description: "<p>The IKE versions that are permitted for the VPN tunnel.</p> <p>Valid values: <code>ikev1</code> | <code>ikev2</code> </p>"
        StartupAction:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The action to take when the establishing the tunnel for the VPN connection. By default, your customer gateway device must initiate the IKE negotiation and bring up the tunnel. Specify <code>start</code> for AWS to initiate the IKE negotiation.</p> <p>Valid Values: <code>add</code> | <code>start</code> </p> <p>Default: <code>add</code> </p>"
      description: The AWS Site-to-Site VPN tunnel options to modify.
    ModifyVpnTunnelOptionsRequest:
      type: object
      required:
        - VpnConnectionId
        - VpnTunnelOutsideIpAddress
        - TunnelOptions
      title: ModifyVpnTunnelOptionsRequest
      properties:
        VpnConnectionId:
          allOf:
            - $ref: "#/components/schemas/VpnConnectionId"
            - description: The ID of the AWS Site-to-Site VPN connection.
        VpnTunnelOutsideIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The external IP address of the VPN tunnel.
        TunnelOptions:
          allOf:
            - $ref: "#/components/schemas/ModifyVpnTunnelOptionsSpecification"
            - description: The tunnel options to modify.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    MonitorInstancesRequest:
      type: object
      required:
        - InstanceIds
      title: MonitorInstancesRequest
      properties:
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIdStringList"
            - xml:
                name: InstanceId
              description: The IDs of the instances.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    MonitoringState:
      type: string
      enum:
        - disabled
        - disabling
        - enabled
        - pending
    MoveAddressToVpcRequest:
      type: object
      required:
        - PublicIp
      title: MoveAddressToVpcRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        PublicIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: publicIp
              description: The Elastic IP address.
    Status:
      type: string
      enum:
        - MoveInProgress
        - InVpc
        - InClassic
    MoveStatus:
      type: string
      enum:
        - movingToVpc
        - restoringToClassic
    MovingAddressStatus:
      type: object
      properties:
        MoveStatus:
          allOf:
            - $ref: "#/components/schemas/MoveStatus"
            - xml:
                name: moveStatus
              description: The status of the Elastic IP address that's being moved to the EC2-VPC platform, or restored to the EC2-Classic platform.
        PublicIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: publicIp
              description: The Elastic IP address.
      description: Describes the status of a moving Elastic IP address.
    NatGatewayAddressList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/NatGatewayAddress"
          - xml:
              name: item
    ProvisionedBandwidth:
      type: object
      properties:
        ProvisionTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: provisionTime
              description: Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.
        Provisioned:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: provisioned
              description: Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.
        RequestTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: requestTime
              description: Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.
        Requested:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: requested
              description: Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.
        Status:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: status
              description: Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.
      description: Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.
    NatGatewayState:
      type: string
      enum:
        - pending
        - failed
        - available
        - deleting
        - deleted
    NatGatewayAddress:
      type: object
      properties:
        AllocationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: allocationId
              description: "[Public NAT gateway only] The allocation ID of the Elastic IP address that's associated with the NAT gateway."
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkInterfaceId
              description: The ID of the network interface associated with the NAT gateway.
        PrivateIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateIp
              description: The private IP address associated with the NAT gateway.
        PublicIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: publicIp
              description: "[Public NAT gateway only] The Elastic IP address associated with the NAT gateway."
      description: Describes the IP addresses and network interface associated with a NAT gateway.
    NetworkAclAssociationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/NetworkAclAssociation"
          - xml:
              name: item
    NetworkAclEntryList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/NetworkAclEntry"
          - xml:
              name: item
    NetworkAclAssociation:
      type: object
      properties:
        NetworkAclAssociationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkAclAssociationId
              description: The ID of the association between a network ACL and a subnet.
        NetworkAclId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkAclId
              description: The ID of the network ACL.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: subnetId
              description: The ID of the subnet.
      description: Describes an association between a network ACL and a subnet.
    NetworkAclAssociationId:
      type: string
    NetworkAclEntry:
      type: object
      properties:
        CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cidrBlock
              description: The IPv4 network range to allow or deny, in CIDR notation.
        Egress:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: egress
              description: Indicates whether the rule is an egress rule (applied to traffic leaving the subnet).
        IcmpTypeCode:
          allOf:
            - $ref: "#/components/schemas/IcmpTypeCode"
            - xml:
                name: icmpTypeCode
              description: "ICMP protocol: The ICMP type and code."
        Ipv6CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipv6CidrBlock
              description: The IPv6 network range to allow or deny, in CIDR notation.
        PortRange:
          allOf:
            - $ref: "#/components/schemas/PortRange"
            - xml:
                name: portRange
              description: "TCP or UDP protocols: The range of ports the rule applies to."
        Protocol:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: protocol
              description: The protocol number. A value of "-1" means all protocols.
        RuleAction:
          allOf:
            - $ref: "#/components/schemas/RuleAction"
            - xml:
                name: ruleAction
              description: Indicates whether to allow or deny the traffic that matches the rule.
        RuleNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: ruleNumber
              description: The rule number for the entry. ACL entries are processed in ascending order by rule number.
      description: Describes an entry in a network ACL.
    NetworkCardIndex:
      type: integer
    NetworkPerformance:
      type: string
    NetworkCardInfo:
      type: object
      properties:
        NetworkCardIndex:
          allOf:
            - $ref: "#/components/schemas/NetworkCardIndex"
            - xml:
                name: networkCardIndex
              description: The index of the network card.
        NetworkPerformance:
          allOf:
            - $ref: "#/components/schemas/NetworkPerformance"
            - xml:
                name: networkPerformance
              description: The network performance of the network card.
        MaximumNetworkInterfaces:
          allOf:
            - $ref: "#/components/schemas/MaxNetworkInterfaces"
            - xml:
                name: maximumNetworkInterfaces
              description: The maximum number of network interfaces for the network card.
      description: Describes the network card support of the instance type.
    NetworkCardInfoList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/NetworkCardInfo"
          - xml:
              name: item
    PathComponentList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PathComponent"
          - xml:
              name: item
    NetworkInsightsAnalysis:
      type: object
      properties:
        NetworkInsightsAnalysisId:
          allOf:
            - $ref: "#/components/schemas/NetworkInsightsAnalysisId"
            - xml:
                name: networkInsightsAnalysisId
              description: The ID of the network insights analysis.
        NetworkInsightsAnalysisArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - xml:
                name: networkInsightsAnalysisArn
              description: The Amazon Resource Name (ARN) of the network insights analysis.
        NetworkInsightsPathId:
          allOf:
            - $ref: "#/components/schemas/NetworkInsightsPathId"
            - xml:
                name: networkInsightsPathId
              description: The ID of the path.
        FilterInArns:
          allOf:
            - $ref: "#/components/schemas/ArnList"
            - xml:
                name: filterInArnSet
              description: The Amazon Resource Names (ARN) of the Amazon Web Services resources that the path must traverse.
        StartDate:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: startDate
              description: The time the analysis started.
        Status:
          allOf:
            - $ref: "#/components/schemas/AnalysisStatus"
            - xml:
                name: status
              description: The status of the network insights analysis.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: statusMessage
              description: The status message, if the status is <code>failed</code>.
        NetworkPathFound:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: networkPathFound
              description: Indicates whether the destination is reachable from the source.
        ForwardPathComponents:
          allOf:
            - $ref: "#/components/schemas/PathComponentList"
            - xml:
                name: forwardPathComponentSet
              description: The components in the path from source to destination.
        ReturnPathComponents:
          allOf:
            - $ref: "#/components/schemas/PathComponentList"
            - xml:
                name: returnPathComponentSet
              description: The components in the path from destination to source.
        Explanations:
          allOf:
            - $ref: "#/components/schemas/ExplanationList"
            - xml:
                name: explanationSet
              description: The explanations. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/reachability/explanation-codes.html">Reachability Analyzer explanation codes</a>.
        AlternatePathHints:
          allOf:
            - $ref: "#/components/schemas/AlternatePathHintList"
            - xml:
                name: alternatePathHintSet
              description: Potential intermediate components.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags.
      description: Describes a network insights analysis.
    NetworkInterfaceAssociation:
      type: object
      properties:
        AllocationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: allocationId
              description: The allocation ID.
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: associationId
              description: The association ID.
        IpOwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipOwnerId
              description: The ID of the Elastic IP address owner.
        PublicDnsName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: publicDnsName
              description: The public DNS name.
        PublicIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: publicIp
              description: The address of the Elastic IP address bound to the network interface.
        CustomerOwnedIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: customerOwnedIp
              description: The customer-owned IP address associated with the network interface.
        CarrierIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: carrierIp
              description: <p>The carrier IP address associated with the network interface.</p> <p>This option is only available when the network interface is in a subnet which is associated with a Wavelength Zone.</p>
      description: Describes association information for an Elastic IP address (IPv4 only), or a Carrier IP address (for a network interface which resides in a subnet in a Wavelength Zone).
    NetworkInterfaceType:
      type: string
      enum:
        - interface
        - natGateway
        - efa
        - trunk
    NetworkInterfaceIpv6AddressesList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/NetworkInterfaceIpv6Address"
          - xml:
              name: item
    NetworkInterfacePrivateIpAddressList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/NetworkInterfacePrivateIpAddress"
          - xml:
              name: item
    NetworkInterfaceIpv6Address:
      type: object
      properties:
        Ipv6Address:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipv6Address
              description: The IPv6 address.
      description: Describes an IPv6 address associated with a network interface.
    NetworkInterfacePermissionState:
      type: object
      properties:
        State:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfacePermissionStateCode"
            - xml:
                name: state
              description: The state of the permission.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: statusMessage
              description: A status message, if applicable.
      description: Describes the state of a network interface permission.
    NetworkInterfacePermissionStateCode:
      type: string
      enum:
        - pending
        - granted
        - revoking
        - revoked
    NetworkInterfacePrivateIpAddress:
      type: object
      properties:
        Association:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceAssociation"
            - xml:
                name: association
              description: The association information for an Elastic IP address (IPv4) associated with the network interface.
        Primary:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: primary
              description: Indicates whether this IPv4 address is the primary private IPv4 address of the network interface.
        PrivateDnsName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateDnsName
              description: The private DNS name.
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateIpAddress
              description: The private IPv4 address.
      description: Describes the private IPv4 address of a network interface.
    OccurrenceDaySet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Integer"
          - xml:
              name: item
    PathComponent:
      type: object
      properties:
        SequenceNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: sequenceNumber
              description: The sequence number.
        AclRule:
          allOf:
            - $ref: "#/components/schemas/AnalysisAclRule"
            - xml:
                name: aclRule
              description: The network ACL rule.
        Component:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: component
              description: The component.
        DestinationVpc:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: destinationVpc
              description: The destination VPC.
        OutboundHeader:
          allOf:
            - $ref: "#/components/schemas/AnalysisPacketHeader"
            - xml:
                name: outboundHeader
              description: The outbound header.
        InboundHeader:
          allOf:
            - $ref: "#/components/schemas/AnalysisPacketHeader"
            - xml:
                name: inboundHeader
              description: The inbound header.
        RouteTableRoute:
          allOf:
            - $ref: "#/components/schemas/AnalysisRouteTableRoute"
            - xml:
                name: routeTableRoute
              description: The route table route.
        SecurityGroupRule:
          allOf:
            - $ref: "#/components/schemas/AnalysisSecurityGroupRule"
            - xml:
                name: securityGroupRule
              description: The security group rule.
        SourceVpc:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: sourceVpc
              description: The source VPC.
        Subnet:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: subnet
              description: The subnet.
        Vpc:
          allOf:
            - $ref: "#/components/schemas/AnalysisComponent"
            - xml:
                name: vpc
              description: The component VPC.
      description: Describes a path component.
    PeeringAttachmentStatus:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: code
              description: The status code.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: The status message, if applicable.
      description: The status of the transit gateway peering attachment.
    PeeringTgwInfo:
      type: object
      properties:
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayId
              description: The ID of the transit gateway.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the Amazon Web Services account that owns the transit gateway.
        Region:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: region
              description: The Region of the transit gateway.
      description: Information about the transit gateway in the peering attachment.
    Phase1DHGroupNumbersListValue:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: value
              description: The Diffie-Hellmann group number.
      description: The Diffie-Hellmann group number for phase 1 IKE negotiations.
    Phase1DHGroupNumbersList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Phase1DHGroupNumbersListValue"
          - xml:
              name: item
    Phase1DHGroupNumbersRequestListValue:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The Diffie-Hellmann group number.
      description: Specifies a Diffie-Hellman group number for the VPN tunnel for phase 1 IKE negotiations.
    Phase1EncryptionAlgorithmsListValue:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: value
              description: The value for the encryption algorithm.
      description: The encryption algorithm for phase 1 IKE negotiations.
    Phase1EncryptionAlgorithmsList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Phase1EncryptionAlgorithmsListValue"
          - xml:
              name: item
    Phase1EncryptionAlgorithmsRequestListValue:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The value for the encryption algorithm.
      description: Specifies the encryption algorithm for the VPN tunnel for phase 1 IKE negotiations.
    Phase1IntegrityAlgorithmsListValue:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: value
              description: The value for the integrity algorithm.
      description: The integrity algorithm for phase 1 IKE negotiations.
    Phase1IntegrityAlgorithmsList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Phase1IntegrityAlgorithmsListValue"
          - xml:
              name: item
    Phase1IntegrityAlgorithmsRequestListValue:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The value for the integrity algorithm.
      description: Specifies the integrity algorithm for the VPN tunnel for phase 1 IKE negotiations.
    Phase2DHGroupNumbersListValue:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: value
              description: The Diffie-Hellmann group number.
      description: The Diffie-Hellmann group number for phase 2 IKE negotiations.
    Phase2DHGroupNumbersList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Phase2DHGroupNumbersListValue"
          - xml:
              name: item
    Phase2DHGroupNumbersRequestListValue:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The Diffie-Hellmann group number.
      description: Specifies a Diffie-Hellman group number for the VPN tunnel for phase 2 IKE negotiations.
    Phase2EncryptionAlgorithmsListValue:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: value
              description: The encryption algorithm.
      description: The encryption algorithm for phase 2 IKE negotiations.
    Phase2EncryptionAlgorithmsList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Phase2EncryptionAlgorithmsListValue"
          - xml:
              name: item
    Phase2EncryptionAlgorithmsRequestListValue:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The encryption algorithm.
      description: Specifies the encryption algorithm for the VPN tunnel for phase 2 IKE negotiations.
    Phase2IntegrityAlgorithmsListValue:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: value
              description: The integrity algorithm.
      description: The integrity algorithm for phase 2 IKE negotiations.
    Phase2IntegrityAlgorithmsList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Phase2IntegrityAlgorithmsListValue"
          - xml:
              name: item
    Phase2IntegrityAlgorithmsRequestListValue:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The integrity algorithm.
      description: Specifies the integrity algorithm for the VPN tunnel for phase 2 IKE negotiations.
    PlacementGroupState:
      type: string
      enum:
        - pending
        - available
        - deleting
        - deleted
    PlacementGroupStrategyList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PlacementGroupStrategy"
          - xml:
              name: item
    PlacementGroupStrategy:
      type: string
      enum:
        - cluster
        - partition
        - spread
    PoolCidrBlock:
      type: object
      properties:
        Cidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: poolCidrBlock
              description: The CIDR block.
      description: Describes a CIDR block for an address pool.
    PrefixList:
      type: object
      properties:
        Cidrs:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: cidrSet
              description: The IP address range of the Amazon Web Service.
        PrefixListId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: prefixListId
              description: The ID of the prefix.
        PrefixListName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: prefixListName
              description: The name of the prefix.
      description: Describes prefixes for Amazon Web Services services.
    PrefixListAssociation:
      type: object
      properties:
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resourceId
              description: The ID of the resource.
        ResourceOwner:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resourceOwner
              description: The owner of the resource.
      description: Describes the resource with which a prefix list is associated.
    PrefixListEntry:
      type: object
      properties:
        Cidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cidr
              description: The CIDR block.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: The description.
      description: Describes a prefix list entry.
    PrefixListId:
      type: object
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: "<p>A description for the security group rule that references this prefix list ID.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>"
        PrefixListId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: prefixListId
              description: The ID of the prefix.
      description: Describes a prefix list ID.
    PrefixListIdSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/String"
          - xml:
              name: item
    PriceSchedule:
      type: object
      properties:
        Active:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: active
              description: <p>The current price schedule, as determined by the term remaining for the Reserved Instance in the listing.</p> <p>A specific price schedule is always in effect, but only one price schedule can be active at any time. Take, for example, a Reserved Instance listing that has five months remaining in its term. When you specify price schedules for five months and two months, this means that schedule 1, covering the first three months of the remaining term, will be active during months 5, 4, and 3. Then schedule 2, covering the last two months of the term, will be active for months 2 and 1.</p>
        CurrencyCode:
          allOf:
            - $ref: "#/components/schemas/CurrencyCodeValues"
            - xml:
                name: currencyCode
              description: The currency for transacting the Reserved Instance resale. At this time, the only supported currency is <code>USD</code>.
        Price:
          allOf:
            - $ref: "#/components/schemas/Double"
            - xml:
                name: price
              description: The fixed price for the term.
        Term:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: term
              description: The number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.
      description: Describes the price for a Reserved Instance.
    PriceScheduleList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PriceSchedule"
          - xml:
              name: item
    PricingDetail:
      type: object
      properties:
        Count:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: count
              description: The number of reservations available for the price.
        Price:
          allOf:
            - $ref: "#/components/schemas/Double"
            - xml:
                name: price
              description: The price per instance.
      description: Describes a Reserved Instance offering.
    PricingDetailsList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PricingDetail"
          - xml:
              name: item
    PrincipalIdFormat:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: arn
              description: PrincipalIdFormatARN description
        Statuses:
          allOf:
            - $ref: "#/components/schemas/IdFormatList"
            - xml:
                name: statusSet
              description: PrincipalIdFormatStatuses description
      description: PrincipalIdFormat description
    PrivateDnsDetails:
      type: object
      properties:
        PrivateDnsName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateDnsName
              description: The private DNS name assigned to the VPC endpoint service.
      description: Information about the Private DNS name for interface endpoints.
    PrivateDnsDetailsSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PrivateDnsDetails"
          - xml:
              name: item
    PrivateDnsNameConfiguration:
      type: object
      properties:
        State:
          allOf:
            - $ref: "#/components/schemas/DnsNameState"
            - xml:
                name: state
              description: <p>The verification state of the VPC endpoint service.</p> <p>&gt;Consumers of the endpoint service can use the private name only when the state is <code>verified</code>.</p>
        Type:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: type
              description: The endpoint service verification type, for example TXT.
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: value
              description: The value the service provider adds to the private DNS name domain record before verification.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: name
              description: The name of the record subdomain the service provider needs to create. The service provider adds the <code>value</code> text to the <code>name</code>.
      description: Information about the private DNS name for the service endpoint. For more information about these parameters, see <a href="https://docs.aws.amazon.com/vpc/latest/userguide/ndpoint-services-dns-validation.html">VPC Endpoint Service Private DNS Name Verification</a> in the <i>Amazon Virtual Private Cloud User Guide</i>.
    ScheduledInstancesPrivateIpAddressConfig:
      type: object
      properties:
        Primary:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether this is a primary IPv4 address. Otherwise, this is a secondary IPv4 address.
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IPv4 address.
      description: Describes a private IPv4 address for a Scheduled Instance.
    PrivateIpAddressConfigSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ScheduledInstancesPrivateIpAddressConfig"
          - xml:
              name: PrivateIpAddressConfigSet
    ProcessorSustainedClockSpeed:
      type: number
      format: double
    ProductCodeValues:
      type: string
      enum:
        - devpay
        - marketplace
    ProductCode:
      type: object
      properties:
        ProductCodeId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: productCode
              description: The product code.
        ProductCodeType:
          allOf:
            - $ref: "#/components/schemas/ProductCodeValues"
            - xml:
                name: type
              description: The type of product code.
      description: Describes a product code.
    PropagatingVgw:
      type: object
      properties:
        GatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: gatewayId
              description: The ID of the virtual private gateway.
      description: Describes a virtual private gateway propagating route.
    PropagatingVgwList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PropagatingVgw"
          - xml:
              name: item
    ProvisionByoipCidrRequest:
      type: object
      required:
        - Cidr
      title: ProvisionByoipCidrRequest
      properties:
        Cidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The public IPv4 or IPv6 address range, in CIDR notation. The most specific IPv4 prefix that you can specify is /24. The most specific IPv6 prefix you can specify is /56. The address range cannot overlap with another address range that you've brought to this or another Region.
        CidrAuthorizationContext:
          allOf:
            - $ref: "#/components/schemas/CidrAuthorizationContext"
            - description: A signed document that proves that you are authorized to bring the specified IP address range to Amazon using BYOIP.
        PubliclyAdvertisable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "<p>(IPv6 only) Indicate whether the address range will be publicly advertised to the internet.</p> <p>Default: true</p>"
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A description for the address range and the address pool.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        PoolTagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: PoolTagSpecification
              description: The tags to apply to the address pool.
        MultiRegion:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <para>Reserved.</para>
    PublicIpv4PoolRangeSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PublicIpv4PoolRange"
          - xml:
              name: item
    PublicIpv4Pool:
      type: object
      properties:
        PoolId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: poolId
              description: The ID of the address pool.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description of the address pool.
        PoolAddressRanges:
          allOf:
            - $ref: "#/components/schemas/PublicIpv4PoolRangeSet"
            - xml:
                name: poolAddressRangeSet
              description: The address ranges.
        TotalAddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: totalAddressCount
              description: The total number of addresses.
        TotalAvailableAddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: totalAvailableAddressCount
              description: The total number of available addresses.
        NetworkBorderGroup:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkBorderGroup
              description: The name of the location from which the address pool is advertised. A network border group is a unique set of Availability Zones or Local Zones from where Amazon Web Services advertises public IP addresses.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags for the address pool.
      description: Describes an IPv4 address pool.
    PublicIpv4PoolRange:
      type: object
      properties:
        FirstAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: firstAddress
              description: The first IP address in the range.
        LastAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: lastAddress
              description: The last IP address in the range.
        AddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: addressCount
              description: The number of addresses in the range.
        AvailableAddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: availableAddressCount
              description: The number of available addresses in the range.
      description: Describes an address range of an IPv4 address pool.
    Purchase:
      type: object
      properties:
        CurrencyCode:
          allOf:
            - $ref: "#/components/schemas/CurrencyCodeValues"
            - xml:
                name: currencyCode
              description: The currency in which the <code>UpfrontPrice</code> and <code>HourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.
        Duration:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: duration
              description: The duration of the reservation's term in seconds.
        HostIdSet:
          allOf:
            - $ref: "#/components/schemas/ResponseHostIdSet"
            - xml:
                name: hostIdSet
              description: The IDs of the Dedicated Hosts associated with the reservation.
        HostReservationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: hostReservationId
              description: The ID of the reservation.
        HourlyPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: hourlyPrice
              description: The hourly price of the reservation per hour.
        InstanceFamily:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceFamily
              description: The instance family on the Dedicated Host that the reservation can be associated with.
        PaymentOption:
          allOf:
            - $ref: "#/components/schemas/PaymentOption"
            - xml:
                name: paymentOption
              description: The payment option for the reservation.
        UpfrontPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: upfrontPrice
              description: The upfront price of the reservation.
      description: Describes the result of the purchase.
    PurchaseHostReservationRequest:
      type: object
      required:
        - HostIdSet
        - OfferingId
      title: PurchaseHostReservationRequest
      properties:
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
        CurrencyCode:
          allOf:
            - $ref: "#/components/schemas/CurrencyCodeValues"
            - description: The currency in which the <code>totalUpfrontPrice</code>, <code>LimitPrice</code>, and <code>totalHourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.
        HostIdSet:
          allOf:
            - $ref: "#/components/schemas/RequestHostIdSet"
            - description: The IDs of the Dedicated Hosts with which the reservation will be associated.
        LimitPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The specified limit is checked against the total upfront cost of the reservation (calculated as the offering's upfront cost multiplied by the host count). If the total upfront cost is greater than the specified price limit, the request fails. This is used to ensure that the purchase does not exceed the expected upfront cost of the purchase. At this time, the only supported currency is <code>USD</code>. For example, to indicate a limit price of USD 100, specify 100.00.
        OfferingId:
          allOf:
            - $ref: "#/components/schemas/OfferingId"
            - description: The ID of the offering.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the Dedicated Host Reservation during purchase.
    PurchaseRequestSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/PurchaseRequest"
          - xml:
              name: PurchaseRequest
      minItems: 1
    ReservedInstanceLimitPrice:
      type: object
      properties:
        Amount:
          allOf:
            - $ref: "#/components/schemas/Double"
            - xml:
                name: amount
              description: Used for Reserved Instance Marketplace offerings. Specifies the limit price on the total order (instanceCount * price).
        CurrencyCode:
          allOf:
            - $ref: "#/components/schemas/CurrencyCodeValues"
            - xml:
                name: currencyCode
              description: The currency in which the <code>limitPrice</code> amount is specified. At this time, the only supported currency is <code>USD</code>.
      description: Describes the limit price of a Reserved Instance offering.
    PurchaseReservedInstancesOfferingRequest:
      type: object
      required:
        - InstanceCount
        - ReservedInstancesOfferingId
      title: PurchaseReservedInstancesOfferingRequest
      properties:
        InstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of Reserved Instances to purchase.
        ReservedInstancesOfferingId:
          allOf:
            - $ref: "#/components/schemas/ReservedInstancesOfferingId"
            - description: The ID of the Reserved Instance offering to purchase.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        LimitPrice:
          allOf:
            - $ref: "#/components/schemas/ReservedInstanceLimitPrice"
            - xml:
                name: limitPrice
              description: Specified for Reserved Instance Marketplace offerings to limit the total order and ensure that the Reserved Instances are not purchased at unexpected prices.
        PurchaseTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The time at which to purchase the Reserved Instance, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
      description: Contains the parameters for PurchaseReservedInstancesOffering.
    PurchaseScheduledInstancesRequest:
      type: object
      required:
        - PurchaseRequests
      title: PurchaseScheduledInstancesRequest
      properties:
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        PurchaseRequests:
          allOf:
            - $ref: "#/components/schemas/PurchaseRequestSet"
            - xml:
                name: PurchaseRequest
              description: The purchase requests.
      description: Contains the parameters for PurchaseScheduledInstances.
    PurchasedScheduledInstanceSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ScheduledInstance"
          - xml:
              name: item
    ScheduledInstance:
      type: object
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone.
        CreateDate:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: createDate
              description: The date when the Scheduled Instance was purchased.
        HourlyPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: hourlyPrice
              description: The hourly price for a single instance.
        InstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: instanceCount
              description: The number of instances.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceType
              description: The instance type.
        NetworkPlatform:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkPlatform
              description: The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).
        NextSlotStartTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: nextSlotStartTime
              description: The time for the next schedule to start.
        Platform:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: platform
              description: The platform (<code>Linux/UNIX</code> or <code>Windows</code>).
        PreviousSlotEndTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: previousSlotEndTime
              description: The time that the previous schedule ended or will end.
        Recurrence:
          allOf:
            - $ref: "#/components/schemas/ScheduledInstanceRecurrence"
            - xml:
                name: recurrence
              description: The schedule recurrence.
        ScheduledInstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: scheduledInstanceId
              description: The Scheduled Instance ID.
        SlotDurationInHours:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: slotDurationInHours
              description: The number of hours in the schedule.
        TermEndDate:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: termEndDate
              description: The end date for the Scheduled Instance.
        TermStartDate:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: termStartDate
              description: The start date for the Scheduled Instance.
        TotalScheduledInstanceHours:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: totalScheduledInstanceHours
              description: The total number of hours for a single instance for the entire term.
      description: Describes a Scheduled Instance.
    ReasonCodesList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ReportInstanceReasonCodes"
          - xml:
              name: item
    RebootInstancesRequest:
      type: object
      required:
        - InstanceIds
      title: RebootInstancesRequest
      properties:
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIdStringList"
            - xml:
                name: InstanceId
              description: The instance IDs.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    RecurringChargeFrequency:
      type: string
      enum:
        - Hourly
    RecurringCharge:
      type: object
      properties:
        Amount:
          allOf:
            - $ref: "#/components/schemas/Double"
            - xml:
                name: amount
              description: The amount of the recurring charge.
        Frequency:
          allOf:
            - $ref: "#/components/schemas/RecurringChargeFrequency"
            - xml:
                name: frequency
              description: The frequency of the recurring charge.
      description: Describes a recurring charge.
    RecurringChargesList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/RecurringCharge"
          - xml:
              name: item
    ReferencedSecurityGroup:
      type: object
      properties:
        GroupId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupId
              description: The ID of the security group.
        PeeringStatus:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: peeringStatus
              description: The status of a VPC peering connection, if applicable.
        UserId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: userId
              description: The Amazon Web Services account ID.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC.
        VpcPeeringConnectionId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcPeeringConnectionId
              description: The ID of the VPC peering connection.
      description: " Describes the security group that is referenced in the security group rule."
    Region:
      type: object
      properties:
        Endpoint:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: regionEndpoint
              description: The Region service endpoint.
        RegionName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: regionName
              description: The name of the Region.
        OptInStatus:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: optInStatus
              description: The Region opt-in status. The possible values are <code>opt-in-not-required</code>, <code>opted-in</code>, and <code>not-opted-in</code>.
      description: Describes a Region.
    RegisterImageRequest:
      type: object
      required:
        - Name
      title: RegisterImageRequest
      properties:
        ImageLocation:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The full path to your AMI manifest in Amazon S3 storage. The specified bucket must have the <code>aws-exec-read</code> canned access control list (ACL) to ensure that it can be accessed by Amazon EC2. For more information, see <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl">Canned ACLs</a> in the <i>Amazon S3 Service Developer Guide</i>.
        Architecture:
          allOf:
            - $ref: "#/components/schemas/ArchitectureValues"
            - xml:
                name: architecture
              description: "<p>The architecture of the AMI.</p> <p>Default: For Amazon EBS-backed AMIs, <code>i386</code>. For instance store-backed AMIs, the architecture specified in the manifest file.</p>"
        BlockDeviceMappings:
          allOf:
            - $ref: "#/components/schemas/BlockDeviceMappingRequestList"
            - xml:
                name: BlockDeviceMapping
              description: <p>The block device mapping entries.</p> <p>If you specify an Amazon EBS volume using the ID of an Amazon EBS snapshot, you can't specify the encryption state of the volume.</p> <p>If you create an AMI on an Outpost, then all backing snapshots must be on the same Outpost or in the Region of that Outpost. AMIs on an Outpost that include local snapshots can be used to launch instances on the same Outpost only. For more information, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html#ami"> Amazon EBS local snapshots on Outposts</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description for your AMI.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        EnaSupport:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: enaSupport
              description: <p>Set to <code>true</code> to enable enhanced networking with ENA for the AMI and any instances that you launch from the AMI.</p> <p>This option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.</p>
        KernelId:
          allOf:
            - $ref: "#/components/schemas/KernelId"
            - xml:
                name: kernelId
              description: The ID of the kernel.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: name
              description: "<p>A name for your AMI.</p> <p>Constraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs (@), or underscores(_)</p>"
        BillingProducts:
          allOf:
            - $ref: "#/components/schemas/BillingProductList"
            - xml:
                name: BillingProduct
              description: The billing product codes. Your account must be authorized to specify billing product codes. Otherwise, you can use the Amazon Web Services Marketplace to bill for the use of an AMI.
        RamdiskId:
          allOf:
            - $ref: "#/components/schemas/RamdiskId"
            - xml:
                name: ramdiskId
              description: The ID of the RAM disk.
        RootDeviceName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: rootDeviceName
              description: The device name of the root device volume (for example, <code>/dev/sda1</code>).
        SriovNetSupport:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: sriovNetSupport
              description: <p>Set to <code>simple</code> to enable enhanced networking with the Intel 82599 Virtual Function interface for the AMI and any instances that you launch from the AMI.</p> <p>There is no way to disable <code>sriovNetSupport</code> at this time.</p> <p>This option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.</p>
        VirtualizationType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: virtualizationType
              description: "<p>The type of virtualization (<code>hvm</code> | <code>paravirtual</code>).</p> <p>Default: <code>paravirtual</code> </p>"
        BootMode:
          allOf:
            - $ref: "#/components/schemas/BootModeValues"
            - description: The boot mode of the AMI. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html">Boot modes</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
      description: Contains the parameters for RegisterImage.
    RegisterInstanceTagAttributeRequest:
      type: object
      properties:
        IncludeAllTagsOfInstance:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether to register all tag keys in the current Region. Specify <code>true</code> to register all tag keys.
        InstanceTagKeys:
          allOf:
            - $ref: "#/components/schemas/InstanceTagKeySet"
            - xml:
                name: InstanceTagKey
              description: The tag keys to register.
      description: Information about the tag keys to register for the current Region. You can either specify individual tag keys or register all tag keys in the current Region. You must specify either <code>IncludeAllTagsOfInstance</code> or <code>InstanceTagKeys</code> in the request
    RegisterInstanceEventNotificationAttributesRequest:
      type: object
      title: RegisterInstanceEventNotificationAttributesRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceTagAttribute:
          allOf:
            - $ref: "#/components/schemas/RegisterInstanceTagAttributeRequest"
            - description: Information about the tag keys to register.
    RegisterTransitGatewayMulticastGroupMembersRequest:
      type: object
      title: RegisterTransitGatewayMulticastGroupMembersRequest
      properties:
        TransitGatewayMulticastDomainId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomainId"
            - description: The ID of the transit gateway multicast domain.
        GroupIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IP address assigned to the transit gateway multicast group.
        NetworkInterfaceIds:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayNetworkInterfaceIdList"
            - description: The group members' network interface IDs to register with the transit gateway multicast group.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayMulticastRegisteredGroupMembers:
      type: object
      properties:
        TransitGatewayMulticastDomainId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayMulticastDomainId
              description: The ID of the transit gateway multicast domain.
        RegisteredNetworkInterfaceIds:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: registeredNetworkInterfaceIds
              description: The ID of the registered network interfaces.
        GroupIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupIpAddress
              description: The IP address assigned to the transit gateway multicast group.
      description: Describes the registered transit gateway multicast group members.
    RegisterTransitGatewayMulticastGroupSourcesRequest:
      type: object
      title: RegisterTransitGatewayMulticastGroupSourcesRequest
      properties:
        TransitGatewayMulticastDomainId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomainId"
            - description: The ID of the transit gateway multicast domain.
        GroupIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IP address assigned to the transit gateway multicast group.
        NetworkInterfaceIds:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayNetworkInterfaceIdList"
            - description: The group sources' network interface IDs to register with the transit gateway multicast group.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayMulticastRegisteredGroupSources:
      type: object
      properties:
        TransitGatewayMulticastDomainId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayMulticastDomainId
              description: The ID of the transit gateway multicast domain.
        RegisteredNetworkInterfaceIds:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: registeredNetworkInterfaceIds
              description: The IDs of the network interfaces members registered with the transit gateway multicast group.
        GroupIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupIpAddress
              description: The IP address assigned to the transit gateway multicast group.
      description: Describes the members registered with the transit gateway multicast group.
    RejectTransitGatewayMulticastDomainAssociationsRequest:
      type: object
      title: RejectTransitGatewayMulticastDomainAssociationsRequest
      properties:
        TransitGatewayMulticastDomainId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomainId"
            - description: The ID of the transit gateway multicast domain.
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the transit gateway attachment.
        SubnetIds:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - description: The IDs of the subnets to associate with the transit gateway multicast domain.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    RejectTransitGatewayPeeringAttachmentRequest:
      type: object
      required:
        - TransitGatewayAttachmentId
      title: RejectTransitGatewayPeeringAttachmentRequest
      properties:
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the transit gateway peering attachment.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    RejectTransitGatewayVpcAttachmentRequest:
      type: object
      required:
        - TransitGatewayAttachmentId
      title: RejectTransitGatewayVpcAttachmentRequest
      properties:
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the attachment.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    RejectVpcEndpointConnectionsRequest:
      type: object
      required:
        - ServiceId
        - VpcEndpointIds
      title: RejectVpcEndpointConnectionsRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ServiceId:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointServiceId"
            - description: The ID of the service.
        VpcEndpointIds:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointIdList"
            - xml:
                name: VpcEndpointId
              description: The IDs of one or more VPC endpoints.
    RejectVpcPeeringConnectionRequest:
      type: object
      required:
        - VpcPeeringConnectionId
      title: RejectVpcPeeringConnectionRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        VpcPeeringConnectionId:
          allOf:
            - $ref: "#/components/schemas/VpcPeeringConnectionId"
            - xml:
                name: vpcPeeringConnectionId
              description: The ID of the VPC peering connection.
    ReleaseAddressRequest:
      type: object
      title: ReleaseAddressRequest
      properties:
        AllocationId:
          allOf:
            - $ref: "#/components/schemas/AllocationId"
            - description: "[EC2-VPC] The allocation ID. Required for EC2-VPC."
        PublicIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "[EC2-Classic] The Elastic IP address. Required for EC2-Classic."
        NetworkBorderGroup:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The set of Availability Zones, Local Zones, or Wavelength Zones from which AWS advertises IP addresses.</p> <p>If you provide an incorrect network border group, you will receive an <code>InvalidAddress.NotFound</code> error. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html">Error Codes</a>.</p> <note> <p>You cannot use a network border group with EC2 Classic. If you attempt this operation on EC2 classic, you will receive an <code>InvalidParameterCombination</code> error. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html">Error Codes</a>.</p> </note>
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ReleaseHostsRequest:
      type: object
      required:
        - HostIds
      title: ReleaseHostsRequest
      properties:
        HostIds:
          allOf:
            - $ref: "#/components/schemas/RequestHostIdList"
            - xml:
                name: hostId
              description: The IDs of the Dedicated Hosts to release.
    ReplaceIamInstanceProfileAssociationRequest:
      type: object
      required:
        - IamInstanceProfile
        - AssociationId
      title: ReplaceIamInstanceProfileAssociationRequest
      properties:
        IamInstanceProfile:
          allOf:
            - $ref: "#/components/schemas/IamInstanceProfileSpecification"
            - description: The IAM instance profile.
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/IamInstanceProfileAssociationId"
            - description: The ID of the existing IAM instance profile association.
    ReplaceNetworkAclAssociationRequest:
      type: object
      required:
        - AssociationId
        - NetworkAclId
      title: ReplaceNetworkAclAssociationRequest
      properties:
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/NetworkAclAssociationId"
            - xml:
                name: associationId
              description: The ID of the current association between the original network ACL and the subnet.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        NetworkAclId:
          allOf:
            - $ref: "#/components/schemas/NetworkAclId"
            - xml:
                name: networkAclId
              description: The ID of the new network ACL to associate with the subnet.
    ReplaceNetworkAclEntryRequest:
      type: object
      required:
        - Egress
        - NetworkAclId
        - Protocol
        - RuleAction
        - RuleNumber
      title: ReplaceNetworkAclEntryRequest
      properties:
        CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cidrBlock
              description: The IPv4 network range to allow or deny, in CIDR notation (for example <code>172.16.0.0/24</code>).
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Egress:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: egress
              description: "<p>Indicates whether to replace the egress rule.</p> <p>Default: If no value is specified, we replace the ingress rule.</p>"
        IcmpTypeCode:
          allOf:
            - $ref: "#/components/schemas/IcmpTypeCode"
            - xml:
                name: Icmp
              description: "ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying protocol 1 (ICMP) or protocol 58 (ICMPv6) with an IPv6 CIDR block."
        Ipv6CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipv6CidrBlock
              description: The IPv6 network range to allow or deny, in CIDR notation (for example <code>2001:bd8:1234:1a00::/64</code>).
        NetworkAclId:
          allOf:
            - $ref: "#/components/schemas/NetworkAclId"
            - xml:
                name: networkAclId
              description: The ID of the ACL.
        PortRange:
          allOf:
            - $ref: "#/components/schemas/PortRange"
            - xml:
                name: portRange
              description: "TCP or UDP protocols: The range of ports the rule applies to. Required if specifying protocol 6 (TCP) or 17 (UDP)."
        Protocol:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: protocol
              description: The protocol number. A value of "-1" means all protocols. If you specify "-1" or a protocol number other than "6" (TCP), "17" (UDP), or "1" (ICMP), traffic on all ports is allowed, regardless of any ports or ICMP types or codes that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.
        RuleAction:
          allOf:
            - $ref: "#/components/schemas/RuleAction"
            - xml:
                name: ruleAction
              description: Indicates whether to allow or deny the traffic that matches the rule.
        RuleNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: ruleNumber
              description: The rule number of the entry to replace.
    ReplaceRootVolumeTaskState:
      type: string
      enum:
        - pending
        - in-progress
        - failing
        - succeeded
        - failed
        - failed-detached
    ReplaceRouteRequest:
      type: object
      required:
        - RouteTableId
      title: ReplaceRouteRequest
      properties:
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: destinationCidrBlock
              description: The IPv4 CIDR address block used for the destination match. The value that you provide must match the CIDR of an existing route in the table.
        DestinationIpv6CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: destinationIpv6CidrBlock
              description: The IPv6 CIDR address block used for the destination match. The value that you provide must match the CIDR of an existing route in the table.
        DestinationPrefixListId:
          allOf:
            - $ref: "#/components/schemas/PrefixListResourceId"
            - description: The ID of the prefix list for the route.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        VpcEndpointId:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointId"
            - description: The ID of a VPC endpoint. Supported for Gateway Load Balancer endpoints only.
        EgressOnlyInternetGatewayId:
          allOf:
            - $ref: "#/components/schemas/EgressOnlyInternetGatewayId"
            - xml:
                name: egressOnlyInternetGatewayId
              description: "[IPv6 traffic only] The ID of an egress-only internet gateway."
        GatewayId:
          allOf:
            - $ref: "#/components/schemas/RouteGatewayId"
            - xml:
                name: gatewayId
              description: The ID of an internet gateway or virtual private gateway.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - xml:
                name: instanceId
              description: The ID of a NAT instance in your VPC.
        LocalTarget:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Specifies whether to reset the local route to its default target (<code>local</code>).
        NatGatewayId:
          allOf:
            - $ref: "#/components/schemas/NatGatewayId"
            - xml:
                name: natGatewayId
              description: "[IPv4 traffic only] The ID of a NAT gateway."
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayId"
            - description: The ID of a transit gateway.
        LocalGatewayId:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayId"
            - description: The ID of the local gateway.
        CarrierGatewayId:
          allOf:
            - $ref: "#/components/schemas/CarrierGatewayId"
            - description: "[IPv4 traffic only] The ID of a carrier gateway."
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceId"
            - xml:
                name: networkInterfaceId
              description: The ID of a network interface.
        RouteTableId:
          allOf:
            - $ref: "#/components/schemas/RouteTableId"
            - xml:
                name: routeTableId
              description: The ID of the route table.
        VpcPeeringConnectionId:
          allOf:
            - $ref: "#/components/schemas/VpcPeeringConnectionId"
            - xml:
                name: vpcPeeringConnectionId
              description: The ID of a VPC peering connection.
    ReplaceRouteTableAssociationRequest:
      type: object
      required:
        - AssociationId
        - RouteTableId
      title: ReplaceRouteTableAssociationRequest
      properties:
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/RouteTableAssociationId"
            - xml:
                name: associationId
              description: The association ID.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        RouteTableId:
          allOf:
            - $ref: "#/components/schemas/RouteTableId"
            - xml:
                name: routeTableId
              description: The ID of the new route table to associate with the subnet.
    ReplaceTransitGatewayRouteRequest:
      type: object
      required:
        - DestinationCidrBlock
        - TransitGatewayRouteTableId
      title: ReplaceTransitGatewayRouteRequest
      properties:
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The CIDR range used for the destination match. Routing decisions are based on the most specific match.
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableId"
            - description: The ID of the route table.
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the attachment.
        Blackhole:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether traffic matching this route is to be dropped.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ReplacementStrategy:
      type: string
      enum:
        - launch
    ReportStatusType:
      type: string
      enum:
        - ok
        - impaired
    ReportInstanceStatusRequest:
      type: object
      required:
        - Instances
        - ReasonCodes
        - Status
      title: ReportInstanceStatusRequest
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: Descriptive text about the health state of your instance.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        EndTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: endTime
              description: The time at which the reported instance health state ended.
        Instances:
          allOf:
            - $ref: "#/components/schemas/InstanceIdStringList"
            - xml:
                name: instanceId
              description: The instances.
        ReasonCodes:
          allOf:
            - $ref: "#/components/schemas/ReasonCodesList"
            - xml:
                name: reasonCode
              description: "<p>The reason codes that describe the health state of your instance.</p> <ul> <li> <p> <code>instance-stuck-in-state</code>: My instance is stuck in a state.</p> </li> <li> <p> <code>unresponsive</code>: My instance is unresponsive.</p> </li> <li> <p> <code>not-accepting-credentials</code>: My instance is not accepting my credentials.</p> </li> <li> <p> <code>password-not-available</code>: A password is not available for my instance.</p> </li> <li> <p> <code>performance-network</code>: My instance is experiencing performance problems that I believe are network related.</p> </li> <li> <p> <code>performance-instance-store</code>: My instance is experiencing performance problems that I believe are related to the instance stores.</p> </li> <li> <p> <code>performance-ebs-volume</code>: My instance is experiencing performance problems that I believe are related to an EBS volume.</p> </li> <li> <p> <code>performance-other</code>: My instance is experiencing performance problems.</p> </li> <li> <p> <code>other</code>: [explain using the description parameter]</p> </li> </ul>"
        StartTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: startTime
              description: The time at which the reported instance health state began.
        Status:
          allOf:
            - $ref: "#/components/schemas/ReportStatusType"
            - xml:
                name: status
              description: The status of all instances listed.
    SpotFleetRequestConfigData:
      type: object
      required:
        - IamFleetRole
        - TargetCapacity
      properties:
        AllocationStrategy:
          allOf:
            - $ref: "#/components/schemas/AllocationStrategy"
            - xml:
                name: allocationStrategy
              description: <p>Indicates how to allocate the target Spot Instance capacity across the Spot Instance pools specified by the Spot Fleet request.</p> <p>If the allocation strategy is <code>lowestPrice</code>, Spot Fleet launches instances from the Spot Instance pools with the lowest price. This is the default allocation strategy.</p> <p>If the allocation strategy is <code>diversified</code>, Spot Fleet launches instances from all the Spot Instance pools that you specify.</p> <p>If the allocation strategy is <code>capacityOptimized</code> (recommended), Spot Fleet launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching. To give certain instance types a higher chance of launching first, use <code>capacityOptimizedPrioritized</code>. Set a priority for each instance type by using the <code>Priority</code> parameter for <code>LaunchTemplateOverrides</code>. You can assign the same priority to different <code>LaunchTemplateOverrides</code>. EC2 implements the priorities on a best-effort basis, but optimizes for capacity first. <code>capacityOptimizedPrioritized</code> is supported only if your Spot Fleet uses a launch template. Note that if the <code>OnDemandAllocationStrategy</code> is set to <code>prioritized</code>, the same priority is applied when fulfilling On-Demand capacity.</p>
        OnDemandAllocationStrategy:
          allOf:
            - $ref: "#/components/schemas/OnDemandAllocationStrategy"
            - xml:
                name: onDemandAllocationStrategy
              description: The order of the launch template overrides to use in fulfilling On-Demand capacity. If you specify <code>lowestPrice</code>, Spot Fleet uses price to determine the order, launching the lowest price first. If you specify <code>prioritized</code>, Spot Fleet uses the priority that you assign to each Spot Fleet launch template override, launching the highest priority first. If you do not specify a value, Spot Fleet defaults to <code>lowestPrice</code>.
        SpotMaintenanceStrategies:
          allOf:
            - $ref: "#/components/schemas/SpotMaintenanceStrategies"
            - xml:
                name: spotMaintenanceStrategies
              description: The strategies for managing your Spot Instances that are at an elevated risk of being interrupted.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: A unique, case-sensitive identifier that you provide to ensure the idempotency of your listings. This helps to avoid duplicate listings. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
        ExcessCapacityTerminationPolicy:
          allOf:
            - $ref: "#/components/schemas/ExcessCapacityTerminationPolicy"
            - xml:
                name: excessCapacityTerminationPolicy
              description: Indicates whether running Spot Instances should be terminated if you decrease the target capacity of the Spot Fleet request below the current size of the Spot Fleet.
        FulfilledCapacity:
          allOf:
            - $ref: "#/components/schemas/Double"
            - xml:
                name: fulfilledCapacity
              description: The number of units fulfilled by this request compared to the set target capacity. You cannot set this value.
        OnDemandFulfilledCapacity:
          allOf:
            - $ref: "#/components/schemas/Double"
            - xml:
                name: onDemandFulfilledCapacity
              description: The number of On-Demand units fulfilled by this request compared to the set target On-Demand capacity.
        IamFleetRole:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: iamFleetRole
              description: The Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that grants the Spot Fleet the permission to request, launch, terminate, and tag instances on your behalf. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html#spot-fleet-prerequisites">Spot Fleet prerequisites</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>. Spot Fleet can terminate Spot Instances on your behalf when you cancel its Spot Fleet request using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CancelSpotFleetRequests">CancelSpotFleetRequests</a> or when the Spot Fleet request expires, if you set <code>TerminateInstancesWithExpiration</code>.
        LaunchSpecifications:
          allOf:
            - $ref: "#/components/schemas/LaunchSpecsList"
            - xml:
                name: launchSpecifications
              description: The launch specifications for the Spot Fleet request. If you specify <code>LaunchSpecifications</code>, you can't specify <code>LaunchTemplateConfigs</code>. If you include On-Demand capacity in your request, you must use <code>LaunchTemplateConfigs</code>.
        LaunchTemplateConfigs:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateConfigList"
            - xml:
                name: launchTemplateConfigs
              description: The launch template and overrides. If you specify <code>LaunchTemplateConfigs</code>, you can't specify <code>LaunchSpecifications</code>. If you include On-Demand capacity in your request, you must use <code>LaunchTemplateConfigs</code>.
        SpotPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: spotPrice
              description: The maximum price per unit hour that you are willing to pay for a Spot Instance. The default is the On-Demand price.
        TargetCapacity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: targetCapacity
              description: The number of units to request for the Spot Fleet. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>, you can specify a target capacity of 0 and add capacity later.
        OnDemandTargetCapacity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: onDemandTargetCapacity
              description: The number of On-Demand units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is <code>maintain</code>, you can specify a target capacity of 0 and add capacity later.
        OnDemandMaxTotalPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: onDemandMaxTotalPrice
              description: The maximum amount per hour for On-Demand Instances that you're willing to pay. You can use the <code>onDemandMaxTotalPrice</code> parameter, the <code>spotMaxTotalPrice</code> parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, Spot Fleet will launch instances until it reaches the maximum amount you're willing to pay. When the maximum amount you're willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity.
        SpotMaxTotalPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: spotMaxTotalPrice
              description: The maximum amount per hour for Spot Instances that you're willing to pay. You can use the <code>spotdMaxTotalPrice</code> parameter, the <code>onDemandMaxTotalPrice</code> parameter, or both parameters to ensure that your fleet cost does not exceed your budget. If you set a maximum price per hour for the On-Demand Instances and Spot Instances in your request, Spot Fleet will launch instances until it reaches the maximum amount you're willing to pay. When the maximum amount you're willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity.
        TerminateInstancesWithExpiration:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: terminateInstancesWithExpiration
              description: Indicates whether running Spot Instances are terminated when the Spot Fleet request expires.
        Type:
          allOf:
            - $ref: "#/components/schemas/FleetType"
            - xml:
                name: type
              description: "The type of request. Indicates whether the Spot Fleet only requests the target capacity or also attempts to maintain it. When this value is <code>request</code>, the Spot Fleet only places the required requests. It does not attempt to replenish Spot Instances if capacity is diminished, nor does it submit requests in alternative Spot pools if capacity is not available. When this value is <code>maintain</code>, the Spot Fleet maintains the target capacity. The Spot Fleet places the required requests to meet capacity and automatically replenishes any interrupted instances. Default: <code>maintain</code>. <code>instant</code> is listed but is not used by Spot Fleet."
        ValidFrom:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: validFrom
              description: The start date and time of the request, in UTC format (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). By default, Amazon EC2 starts fulfilling the request immediately.
        ValidUntil:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: validUntil
              description: The end date and time of the request, in UTC format (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). After the end date and time, no new Spot Instance requests are placed or able to fulfill the request. If no value is specified, the Spot Fleet request remains until you cancel it.
        ReplaceUnhealthyInstances:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: replaceUnhealthyInstances
              description: Indicates whether Spot Fleet should replace unhealthy instances.
        InstanceInterruptionBehavior:
          allOf:
            - $ref: "#/components/schemas/InstanceInterruptionBehavior"
            - xml:
                name: instanceInterruptionBehavior
              description: The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>.
        LoadBalancersConfig:
          allOf:
            - $ref: "#/components/schemas/LoadBalancersConfig"
            - xml:
                name: loadBalancersConfig
              description: "<p>One or more Classic Load Balancers and target groups to attach to the Spot Fleet request. Spot Fleet registers the running Spot Instances with the specified Classic Load Balancers and target groups.</p> <p>With Network Load Balancers, Spot Fleet cannot register instances that have the following instance types: C1, CC1, CC2, CG1, CG2, CR1, CS1, G1, G2, HI1, HS1, M1, M2, M3, and T1.</p>"
        InstancePoolsToUseCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: instancePoolsToUseCount
              description: <p>The number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot <b>AllocationStrategy</b> is set to <code>lowest-price</code>. Spot Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.</p> <p>Note that Spot Fleet attempts to draw Spot Instances from the number of pools that you specify on a best effort basis. If a pool runs out of Spot capacity before fulfilling your target capacity, Spot Fleet will continue to fulfill your request by drawing from the next cheapest pool. To ensure that your target capacity is met, you might receive Spot Instances from more than the number of pools that you specified. Similarly, if most of the pools have no Spot capacity, you might receive your full target capacity from fewer than the number of pools that you specified.</p>
        Context:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: context
              description: Reserved.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The key-value pair for tagging the Spot Fleet request on creation. The value for <code>ResourceType</code> must be <code>spot-fleet-request</code>, otherwise the Spot Fleet request fails. To tag instances at launch, specify the tags in the <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html#create-launch-template">launch template</a> (valid only if you use <code>LaunchTemplateConfigs</code>) or in the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotFleetTagSpecification.html"> <code>SpotFleetTagSpecification</code> </a> (valid only if you use <code>LaunchSpecifications</code>). For information about tagging after launch, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-resources">Tagging Your Resources</a>.
      description: Describes the configuration of a Spot Fleet request.
    RequestSpotFleetRequest:
      type: object
      required:
        - SpotFleetRequestConfig
      title: RequestSpotFleetRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        SpotFleetRequestConfig:
          allOf:
            - $ref: "#/components/schemas/SpotFleetRequestConfigData"
            - xml:
                name: spotFleetRequestConfig
              description: The configuration for the Spot Fleet request.
      description: Contains the parameters for RequestSpotFleet.
    RequestSpotLaunchSpecification:
      type: object
      properties:
        SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/RequestSpotLaunchSpecificationSecurityGroupIdList"
            - xml:
                name: SecurityGroupId
              description: One or more security group IDs.
        SecurityGroups:
          allOf:
            - $ref: "#/components/schemas/RequestSpotLaunchSpecificationSecurityGroupList"
            - xml:
                name: SecurityGroup
              description: One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.
        AddressingType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: addressingType
              description: Deprecated.
        BlockDeviceMappings:
          allOf:
            - $ref: "#/components/schemas/BlockDeviceMappingList"
            - xml:
                name: blockDeviceMapping
              description: One or more block device mapping entries. You can't specify both a snapshot ID and an encryption value. This is because only blank volumes can be encrypted on creation. If a snapshot is the basis for a volume, it is not blank and its encryption status is used for the volume encryption status.
        EbsOptimized:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: ebsOptimized
              description: "<p>Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.</p> <p>Default: <code>false</code> </p>"
        IamInstanceProfile:
          allOf:
            - $ref: "#/components/schemas/IamInstanceProfileSpecification"
            - xml:
                name: iamInstanceProfile
              description: The IAM instance profile.
        ImageId:
          allOf:
            - $ref: "#/components/schemas/ImageId"
            - xml:
                name: imageId
              description: The ID of the AMI.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/InstanceType"
            - xml:
                name: instanceType
              description: The instance type.
        KernelId:
          allOf:
            - $ref: "#/components/schemas/KernelId"
            - xml:
                name: kernelId
              description: The ID of the kernel.
        KeyName:
          allOf:
            - $ref: "#/components/schemas/KeyPairName"
            - xml:
                name: keyName
              description: The name of the key pair.
        Monitoring:
          allOf:
            - $ref: "#/components/schemas/RunInstancesMonitoringEnabled"
            - xml:
                name: monitoring
              description: "<p>Indicates whether basic or detailed monitoring is enabled for the instance.</p> <p>Default: Disabled</p>"
        NetworkInterfaces:
          allOf:
            - $ref: "#/components/schemas/InstanceNetworkInterfaceSpecificationList"
            - xml:
                name: NetworkInterface
              description: One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.
        Placement:
          allOf:
            - $ref: "#/components/schemas/SpotPlacement"
            - xml:
                name: placement
              description: The placement information for the instance.
        RamdiskId:
          allOf:
            - $ref: "#/components/schemas/RamdiskId"
            - xml:
                name: ramdiskId
              description: The ID of the RAM disk.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - xml:
                name: subnetId
              description: The ID of the subnet in which to launch the instance.
        UserData:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: userData
              description: The Base64-encoded user data for the instance. User data is limited to 16 KB.
      description: Describes the launch specification for an instance.
    RequestSpotInstancesRequest:
      type: object
      title: RequestSpotInstancesRequest
      properties:
        AvailabilityZoneGroup:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZoneGroup
              description: "<p>The user-specified name for a logical grouping of requests.</p> <p>When you specify an Availability Zone group in a Spot Instance request, all Spot Instances in the request are launched in the same Availability Zone. Instance proximity is maintained with this parameter, but the choice of Availability Zone is not. The group applies only to requests for Spot Instances of the same instance type. Any additional Spot Instance requests that are specified with the same Availability Zone group name are launched in that same Availability Zone, as long as at least one instance from the group is still active.</p> <p>If there is no active instance running in the Availability Zone group that you specify for a new Spot Instance request (all instances are terminated, the request is expired, or the maximum price you specified falls below current Spot price), then Amazon EC2 launches the instance in any Availability Zone where the constraint can be met. Consequently, the subsequent set of Spot Instances could be placed in a different zone from the original request, even if you specified the same Availability Zone group.</p> <p>Default: Instances are launched in any available Availability Zone.</p>"
        BlockDurationMinutes:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: blockDurationMinutes
              description: Deprecated.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: instanceCount
              description: "<p>The maximum number of Spot Instances to launch.</p> <p>Default: 1</p>"
        LaunchGroup:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: launchGroup
              description: "<p>The instance launch group. Launch groups are Spot Instances that launch together and terminate together.</p> <p>Default: Instances are launched and terminated individually</p>"
        LaunchSpecification:
          allOf:
            - $ref: "#/components/schemas/RequestSpotLaunchSpecification"
            - description: The launch specification.
        SpotPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: spotPrice
              description: The maximum price per hour that you are willing to pay for a Spot Instance. The default is the On-Demand price.
        Type:
          allOf:
            - $ref: "#/components/schemas/SpotInstanceType"
            - xml:
                name: type
              description: "<p>The Spot Instance request type.</p> <p>Default: <code>one-time</code> </p>"
        ValidFrom:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: validFrom
              description: <p>The start date of the request. If this is a one-time request, the request becomes active at this date and time and remains active until all instances launch, the request expires, or the request is canceled. If the request is persistent, the request becomes active at this date and time and remains active until it expires or is canceled.</p> <p>The specified start date and time cannot be equal to the current date and time. You must specify a start date and time that occurs after the current date and time.</p>
        ValidUntil:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: validUntil
              description: <p>The end date of the request, in UTC format (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p> <ul> <li> <p>For a persistent request, the request remains active until the <code>ValidUntil</code> date and time is reached. Otherwise, the request remains active until you cancel it. </p> </li> <li> <p>For a one-time request, the request remains active until all instances launch, the request is canceled, or the <code>ValidUntil</code> date and time is reached. By default, the request is valid for 7 days from the date the request was created.</p> </li> </ul>
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: 'The key-value pair for tagging the Spot Instance request on creation. The value for <code>ResourceType</code> must be <code>spot-instances-request</code>, otherwise the Spot Instance request fails. To tag the Spot Instance request after it has been created, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html">CreateTags</a>. '
        InstanceInterruptionBehavior:
          allOf:
            - $ref: "#/components/schemas/InstanceInterruptionBehavior"
            - description: The behavior when a Spot Instance is interrupted. The default is <code>terminate</code>.
      description: Contains the parameters for RequestSpotInstances.
    ReservedInstanceReservationValue:
      type: object
      properties:
        ReservationValue:
          allOf:
            - $ref: "#/components/schemas/ReservationValue"
            - xml:
                name: reservationValue
              description: The total value of the Convertible Reserved Instance that you are exchanging.
        ReservedInstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: reservedInstanceId
              description: The ID of the Convertible Reserved Instance that you are exchanging.
      description: The total value of the Convertible Reserved Instance.
    ReservedInstanceState:
      type: string
      enum:
        - payment-pending
        - active
        - payment-failed
        - retired
        - queued
        - queued-deleted
    scope:
      type: string
      enum:
        - Availability Zone
        - Region
    ReservedInstances:
      type: object
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone in which the Reserved Instance can be used.
        Duration:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: duration
              description: The duration of the Reserved Instance, in seconds.
        End:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: end
              description: The time when the Reserved Instance expires.
        FixedPrice:
          allOf:
            - $ref: "#/components/schemas/Float"
            - xml:
                name: fixedPrice
              description: The purchase price of the Reserved Instance.
        InstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: instanceCount
              description: The number of reservations purchased.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/InstanceType"
            - xml:
                name: instanceType
              description: The instance type on which the Reserved Instance can be used.
        ProductDescription:
          allOf:
            - $ref: "#/components/schemas/RIProductDescription"
            - xml:
                name: productDescription
              description: The Reserved Instance product platform description.
        ReservedInstancesId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: reservedInstancesId
              description: The ID of the Reserved Instance.
        Start:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: start
              description: The date and time the Reserved Instance started.
        State:
          allOf:
            - $ref: "#/components/schemas/ReservedInstanceState"
            - xml:
                name: state
              description: The state of the Reserved Instance purchase.
        UsagePrice:
          allOf:
            - $ref: "#/components/schemas/Float"
            - xml:
                name: usagePrice
              description: The usage price of the Reserved Instance, per hour.
        CurrencyCode:
          allOf:
            - $ref: "#/components/schemas/CurrencyCodeValues"
            - xml:
                name: currencyCode
              description: The currency of the Reserved Instance. It's specified using ISO 4217 standard currency codes. At this time, the only supported currency is <code>USD</code>.
        InstanceTenancy:
          allOf:
            - $ref: "#/components/schemas/Tenancy"
            - xml:
                name: instanceTenancy
              description: The tenancy of the instance.
        OfferingClass:
          allOf:
            - $ref: "#/components/schemas/OfferingClassType"
            - xml:
                name: offeringClass
              description: The offering class of the Reserved Instance.
        OfferingType:
          allOf:
            - $ref: "#/components/schemas/OfferingTypeValues"
            - xml:
                name: offeringType
              description: The Reserved Instance offering type.
        RecurringCharges:
          allOf:
            - $ref: "#/components/schemas/RecurringChargesList"
            - xml:
                name: recurringCharges
              description: The recurring charge tag assigned to the resource.
        Scope:
          allOf:
            - $ref: "#/components/schemas/scope"
            - xml:
                name: scope
              description: The scope of the Reserved Instance.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the resource.
      description: Describes a Reserved Instance.
    ReservedInstancesId:
      type: object
      properties:
        ReservedInstancesId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: reservedInstancesId
              description: The ID of the Reserved Instance.
      description: Describes the ID of a Reserved Instance.
    ReservedInstancesListing:
      type: object
      properties:
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
        CreateDate:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: createDate
              description: The time the listing was created.
        InstanceCounts:
          allOf:
            - $ref: "#/components/schemas/InstanceCountList"
            - xml:
                name: instanceCounts
              description: The number of instances in this state.
        PriceSchedules:
          allOf:
            - $ref: "#/components/schemas/PriceScheduleList"
            - xml:
                name: priceSchedules
              description: The price of the Reserved Instance listing.
        ReservedInstancesId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: reservedInstancesId
              description: The ID of the Reserved Instance.
        ReservedInstancesListingId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: reservedInstancesListingId
              description: The ID of the Reserved Instance listing.
        Status:
          allOf:
            - $ref: "#/components/schemas/ListingStatus"
            - xml:
                name: status
              description: The status of the Reserved Instance listing.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: statusMessage
              description: The reason for the current status of the Reserved Instance listing. The response can be blank.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the resource.
        UpdateDate:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: updateDate
              description: The last modified timestamp of the listing.
      description: Describes a Reserved Instance listing.
    ReservedInstancesModificationResultList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ReservedInstancesModificationResult"
          - xml:
              name: item
    ReservedIntancesIds:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ReservedInstancesId"
          - xml:
              name: item
    ReservedInstancesModification:
      type: object
      properties:
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: A unique, case-sensitive key supplied by the client to ensure that the request is idempotent. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
        CreateDate:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: createDate
              description: The time when the modification request was created.
        EffectiveDate:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: effectiveDate
              description: The time for the modification to become effective.
        ModificationResults:
          allOf:
            - $ref: "#/components/schemas/ReservedInstancesModificationResultList"
            - xml:
                name: modificationResultSet
              description: Contains target configurations along with their corresponding new Reserved Instance IDs.
        ReservedInstancesIds:
          allOf:
            - $ref: "#/components/schemas/ReservedIntancesIds"
            - xml:
                name: reservedInstancesSet
              description: The IDs of one or more Reserved Instances.
        ReservedInstancesModificationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: reservedInstancesModificationId
              description: A unique ID for the Reserved Instance modification.
        Status:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: status
              description: The status of the Reserved Instances modification request.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: statusMessage
              description: The reason for the status.
        UpdateDate:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: updateDate
              description: The time when the modification request was last updated.
      description: Describes a Reserved Instance modification.
    ReservedInstancesModificationResult:
      type: object
      properties:
        ReservedInstancesId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: reservedInstancesId
              description: The ID for the Reserved Instances that were created as part of the modification request. This field is only available when the modification is fulfilled.
        TargetConfiguration:
          allOf:
            - $ref: "#/components/schemas/ReservedInstancesConfiguration"
            - xml:
                name: targetConfiguration
              description: The target Reserved Instances configurations supplied as part of the modification request.
      description: Describes the modification request/s.
    ReservedInstancesOffering:
      type: object
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone in which the Reserved Instance can be used.
        Duration:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: duration
              description: The duration of the Reserved Instance, in seconds.
        FixedPrice:
          allOf:
            - $ref: "#/components/schemas/Float"
            - xml:
                name: fixedPrice
              description: The purchase price of the Reserved Instance.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/InstanceType"
            - xml:
                name: instanceType
              description: The instance type on which the Reserved Instance can be used.
        ProductDescription:
          allOf:
            - $ref: "#/components/schemas/RIProductDescription"
            - xml:
                name: productDescription
              description: The Reserved Instance product platform description.
        ReservedInstancesOfferingId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: reservedInstancesOfferingId
              description: The ID of the Reserved Instance offering. This is the offering ID used in <a>GetReservedInstancesExchangeQuote</a> to confirm that an exchange can be made.
        UsagePrice:
          allOf:
            - $ref: "#/components/schemas/Float"
            - xml:
                name: usagePrice
              description: The usage price of the Reserved Instance, per hour.
        CurrencyCode:
          allOf:
            - $ref: "#/components/schemas/CurrencyCodeValues"
            - xml:
                name: currencyCode
              description: The currency of the Reserved Instance offering you are purchasing. It's specified using ISO 4217 standard currency codes. At this time, the only supported currency is <code>USD</code>.
        InstanceTenancy:
          allOf:
            - $ref: "#/components/schemas/Tenancy"
            - xml:
                name: instanceTenancy
              description: The tenancy of the instance.
        Marketplace:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: marketplace
              description: Indicates whether the offering is available through the Reserved Instance Marketplace (resale) or Amazon Web Services. If it's a Reserved Instance Marketplace offering, this is <code>true</code>.
        OfferingClass:
          allOf:
            - $ref: "#/components/schemas/OfferingClassType"
            - xml:
                name: offeringClass
              description: If <code>convertible</code> it can be exchanged for Reserved Instances of the same or higher monetary value, with different configurations. If <code>standard</code>, it is not possible to perform an exchange.
        OfferingType:
          allOf:
            - $ref: "#/components/schemas/OfferingTypeValues"
            - xml:
                name: offeringType
              description: The Reserved Instance offering type.
        PricingDetails:
          allOf:
            - $ref: "#/components/schemas/PricingDetailsList"
            - xml:
                name: pricingDetailsSet
              description: The pricing details of the Reserved Instance offering.
        RecurringCharges:
          allOf:
            - $ref: "#/components/schemas/RecurringChargesList"
            - xml:
                name: recurringCharges
              description: The recurring charge tag assigned to the resource.
        Scope:
          allOf:
            - $ref: "#/components/schemas/scope"
            - xml:
                name: scope
              description: Whether the Reserved Instance is applied to instances in a Region or an Availability Zone.
      description: Describes a Reserved Instance offering.
    ResetAddressAttributeRequest:
      type: object
      required:
        - AllocationId
        - Attribute
      title: ResetAddressAttributeRequest
      properties:
        AllocationId:
          allOf:
            - $ref: "#/components/schemas/AllocationId"
            - description: "[EC2-VPC] The allocation ID."
        Attribute:
          allOf:
            - $ref: "#/components/schemas/AddressAttributeName"
            - description: The attribute of the IP address.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ResetEbsDefaultKmsKeyIdRequest:
      type: object
      title: ResetEbsDefaultKmsKeyIdRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ResetFpgaImageAttributeName:
      type: string
      enum:
        - loadPermission
    ResetFpgaImageAttributeRequest:
      type: object
      required:
        - FpgaImageId
      title: ResetFpgaImageAttributeRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        FpgaImageId:
          allOf:
            - $ref: "#/components/schemas/FpgaImageId"
            - description: The ID of the AFI.
        Attribute:
          allOf:
            - $ref: "#/components/schemas/ResetFpgaImageAttributeName"
            - description: The attribute.
    ResetImageAttributeName:
      type: string
      enum:
        - launchPermission
    ResetImageAttributeRequest:
      type: object
      required:
        - Attribute
        - ImageId
      title: ResetImageAttributeRequest
      properties:
        Attribute:
          allOf:
            - $ref: "#/components/schemas/ResetImageAttributeName"
            - description: The attribute to reset (currently you can only reset the launch permission attribute).
        ImageId:
          allOf:
            - $ref: "#/components/schemas/ImageId"
            - description: The ID of the AMI.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
      description: Contains the parameters for ResetImageAttribute.
    ResetInstanceAttributeRequest:
      type: object
      required:
        - Attribute
        - InstanceId
      title: ResetInstanceAttributeRequest
      properties:
        Attribute:
          allOf:
            - $ref: "#/components/schemas/InstanceAttributeName"
            - xml:
                name: attribute
              description: "<p>The attribute to reset.</p> <important> <p>You can only reset the following attributes: <code>kernel</code> | <code>ramdisk</code> | <code>sourceDestCheck</code>. To change an instance attribute, use <a>ModifyInstanceAttribute</a>.</p> </important>"
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - xml:
                name: instanceId
              description: The ID of the instance.
    ResetNetworkInterfaceAttributeRequest:
      type: object
      required:
        - NetworkInterfaceId
      title: ResetNetworkInterfaceAttributeRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceId"
            - xml:
                name: networkInterfaceId
              description: The ID of the network interface.
        SourceDestCheck:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: sourceDestCheck
              description: The source/destination checking attribute. Resets the value to <code>true</code>.
      description: Contains the parameters for ResetNetworkInterfaceAttribute.
    ResetSnapshotAttributeRequest:
      type: object
      required:
        - Attribute
        - SnapshotId
      title: ResetSnapshotAttributeRequest
      properties:
        Attribute:
          allOf:
            - $ref: "#/components/schemas/SnapshotAttributeName"
            - description: The attribute to reset. Currently, only the attribute for permission to create volumes can be reset.
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/SnapshotId"
            - description: The ID of the snapshot.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    RestoreAddressToClassicRequest:
      type: object
      required:
        - PublicIp
      title: RestoreAddressToClassicRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        PublicIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: publicIp
              description: The Elastic IP address.
    RestoreManagedPrefixListVersionRequest:
      type: object
      required:
        - PrefixListId
        - PreviousVersion
        - CurrentVersion
      title: RestoreManagedPrefixListVersionRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        PrefixListId:
          allOf:
            - $ref: "#/components/schemas/PrefixListResourceId"
            - description: The ID of the prefix list.
        PreviousVersion:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The version to restore.
        CurrentVersion:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The current version number for the prefix list.
    RevokeClientVpnIngressRequest:
      type: object
      required:
        - ClientVpnEndpointId
        - TargetNetworkCidr
      title: RevokeClientVpnIngressRequest
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointId"
            - description: The ID of the Client VPN endpoint with which the authorization rule is associated.
        TargetNetworkCidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IPv4 address range, in CIDR notation, of the network for which access is being removed.
        AccessGroupId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "The ID of the Active Directory group for which to revoke access. "
        RevokeAllGroups:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether access should be revoked for all clients.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    RevokeSecurityGroupEgressRequest:
      type: object
      required:
        - GroupId
      title: RevokeSecurityGroupEgressRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        GroupId:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupId"
            - xml:
                name: groupId
              description: The ID of the security group.
        IpPermissions:
          allOf:
            - $ref: "#/components/schemas/IpPermissionList"
            - xml:
                name: ipPermissions
              description: The sets of IP permissions. You can't specify a destination security group and a CIDR IP address range in the same set of permissions.
        SecurityGroupRuleIds:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupRuleIdList"
            - xml:
                name: SecurityGroupRuleId
              description: The IDs of the security group rules.
        CidrIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cidrIp
              description: Not supported. Use a set of IP permissions to specify the CIDR.
        FromPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: fromPort
              description: Not supported. Use a set of IP permissions to specify the port.
        IpProtocol:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipProtocol
              description: Not supported. Use a set of IP permissions to specify the protocol name or number.
        ToPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: toPort
              description: Not supported. Use a set of IP permissions to specify the port.
        SourceSecurityGroupName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: sourceSecurityGroupName
              description: Not supported. Use a set of IP permissions to specify a destination security group.
        SourceSecurityGroupOwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: sourceSecurityGroupOwnerId
              description: Not supported. Use a set of IP permissions to specify a destination security group.
    RevokeSecurityGroupIngressRequest:
      type: object
      title: RevokeSecurityGroupIngressRequest
      properties:
        CidrIp:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The CIDR IP address range. You can't specify this parameter when specifying a source security group.
        FromPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use <code>-1</code> to specify all ICMP types.
        GroupId:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupId"
            - description: The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.
        GroupName:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupName"
            - description: "[EC2-Classic, default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request."
        IpPermissions:
          allOf:
            - $ref: "#/components/schemas/IpPermissionList"
            - description: The sets of IP permissions. You can't specify a source security group and a CIDR IP address range in the same set of permissions.
        IpProtocol:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>) or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a>). Use <code>-1</code> to specify all.
        SourceSecurityGroupName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "[EC2-Classic, default VPC] The name of the source security group. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. For EC2-VPC, the source security group must be in the same VPC. To revoke a specific rule for an IP protocol and port range, use a set of IP permissions instead."
        SourceSecurityGroupOwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "[EC2-Classic] The Amazon Web Services account ID of the source security group, if the source security group is in a different account. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range. To revoke a specific rule for an IP protocol and port range, use a set of IP permissions instead."
        ToPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use <code>-1</code> to specify all ICMP codes for the ICMP type.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        SecurityGroupRuleIds:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupRuleIdList"
            - xml:
                name: SecurityGroupRuleId
              description: The IDs of the security group rules.
    RootDeviceType:
      type: string
      enum:
        - ebs
        - instance-store
    RouteOrigin:
      type: string
      enum:
        - CreateRouteTable
        - CreateRoute
        - EnableVgwRoutePropagation
    RouteState:
      type: string
      enum:
        - active
        - blackhole
    Route:
      type: object
      properties:
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: destinationCidrBlock
              description: The IPv4 CIDR block used for the destination match.
        DestinationIpv6CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: destinationIpv6CidrBlock
              description: The IPv6 CIDR block used for the destination match.
        DestinationPrefixListId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: destinationPrefixListId
              description: The prefix of the Amazon Web Service.
        EgressOnlyInternetGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: egressOnlyInternetGatewayId
              description: The ID of the egress-only internet gateway.
        GatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: gatewayId
              description: The ID of a gateway attached to your VPC.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of a NAT instance in your VPC.
        InstanceOwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceOwnerId
              description: The ID of Amazon Web Services account that owns the instance.
        NatGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: natGatewayId
              description: The ID of a NAT gateway.
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayId
              description: The ID of a transit gateway.
        LocalGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: localGatewayId
              description: The ID of the local gateway.
        CarrierGatewayId:
          allOf:
            - $ref: "#/components/schemas/CarrierGatewayId"
            - xml:
                name: carrierGatewayId
              description: The ID of the carrier gateway.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkInterfaceId
              description: The ID of the network interface.
        Origin:
          allOf:
            - $ref: "#/components/schemas/RouteOrigin"
            - xml:
                name: origin
              description: <p>Describes how the route was created.</p> <ul> <li> <p> <code>CreateRouteTable</code> - The route was automatically created when the route table was created.</p> </li> <li> <p> <code>CreateRoute</code> - The route was manually added to the route table.</p> </li> <li> <p> <code>EnableVgwRoutePropagation</code> - The route was propagated by route propagation.</p> </li> </ul>
        State:
          allOf:
            - $ref: "#/components/schemas/RouteState"
            - xml:
                name: state
              description: The state of the route. The <code>blackhole</code> state indicates that the route's target isn't available (for example, the specified gateway isn't attached to the VPC, or the specified NAT instance has been terminated).
        VpcPeeringConnectionId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcPeeringConnectionId
              description: The ID of a VPC peering connection.
      description: Describes a route in a route table.
    RouteList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/Route"
          - xml:
              name: item
    RouteTableAssociationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/RouteTableAssociation"
          - xml:
              name: item
    RouteTableAssociation:
      type: object
      properties:
        Main:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: main
              description: Indicates whether this is the main route table.
        RouteTableAssociationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: routeTableAssociationId
              description: The ID of the association.
        RouteTableId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: routeTableId
              description: The ID of the route table.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: subnetId
              description: The ID of the subnet. A subnet ID is not returned for an implicit association.
        GatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: gatewayId
              description: The ID of the internet gateway or virtual private gateway.
        AssociationState:
          allOf:
            - $ref: "#/components/schemas/RouteTableAssociationState"
            - xml:
                name: associationState
              description: The state of the association.
      description: Describes an association between a route table and a subnet or gateway.
    RouteTableAssociationStateCode:
      type: string
      enum:
        - associating
        - associated
        - disassociating
        - disassociated
        - failed
    RunInstancesRequest:
      type: object
      required:
        - MaxCount
        - MinCount
      title: RunInstancesRequest
      properties:
        BlockDeviceMappings:
          allOf:
            - $ref: "#/components/schemas/BlockDeviceMappingRequestList"
            - xml:
                name: BlockDeviceMapping
              description: The block device mapping, which defines the EBS volumes and instance store volumes to attach to the instance at launch. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html">Block device mappings</a> in the <i>Amazon EC2 User Guide</i>.
        ImageId:
          allOf:
            - $ref: "#/components/schemas/ImageId"
            - description: The ID of the AMI. An AMI ID is required to launch an instance and must be specified here or in a launch template.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/InstanceType"
            - description: '<p>The instance type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>Default: <code>m1.small</code> </p>'
        Ipv6AddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>[EC2-VPC] The number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch.</p> <p>You cannot specify this option and the network interfaces option in the same request.</p>
        Ipv6Addresses:
          allOf:
            - $ref: "#/components/schemas/InstanceIpv6AddressList"
            - xml:
                name: Ipv6Address
              description: <p>[EC2-VPC] The IPv6 addresses from the range of the subnet to associate with the primary network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch.</p> <p>You cannot specify this option and the network interfaces option in the same request.</p>
        KernelId:
          allOf:
            - $ref: "#/components/schemas/KernelId"
            - description: <p>The ID of the kernel.</p> <important> <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html">PV-GRUB</a> in the <i>Amazon EC2 User Guide</i>.</p> </important>
        KeyName:
          allOf:
            - $ref: "#/components/schemas/KeyPairName"
            - description: <p>The name of the key pair. You can create a key pair using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html">CreateKeyPair</a> or <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html">ImportKeyPair</a>.</p> <important> <p>If you do not specify a key pair, you can't connect to the instance unless you choose an AMI that is configured to allow users another way to log in.</p> </important>
        MaxCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The maximum number of instances to launch. If you specify more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible number of instances above <code>MinCount</code>.</p> <p>Constraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see <a href=\"http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2\">How many instances can I run in Amazon EC2</a> in the Amazon EC2 FAQ.</p>"
        MinCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The minimum number of instances to launch. If you specify a minimum that is more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches no instances.</p> <p>Constraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see <a href=\"http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2\">How many instances can I run in Amazon EC2</a> in the Amazon EC2 General FAQ.</p>"
        Monitoring:
          allOf:
            - $ref: "#/components/schemas/RunInstancesMonitoringEnabled"
            - description: Specifies whether detailed monitoring is enabled for the instance.
        Placement:
          allOf:
            - $ref: "#/components/schemas/Placement"
            - description: The placement for the instance.
        RamdiskId:
          allOf:
            - $ref: "#/components/schemas/RamdiskId"
            - description: <p>The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, go to the Amazon Web Services Resource Center and search for the kernel ID.</p> <important> <p>We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html">PV-GRUB</a> in the <i>Amazon EC2 User Guide</i>.</p> </important>
        SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupIdStringList"
            - xml:
                name: SecurityGroupId
              description: <p>The IDs of the security groups. You can create a security group using <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html">CreateSecurityGroup</a>.</p> <p>If you specify a network interface, you must specify any security groups as part of the network interface.</p>
        SecurityGroups:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupStringList"
            - xml:
                name: SecurityGroup
              description: "<p>[EC2-Classic, default VPC] The names of the security groups. For a nondefault VPC, you must use security group IDs instead.</p> <p>If you specify a network interface, you must specify any security groups as part of the network interface.</p> <p>Default: Amazon EC2 uses the default security group.</p>"
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - description: <p>[EC2-VPC] The ID of the subnet to launch the instance into.</p> <p>If you specify a network interface, you must specify any subnets as part of the network interface.</p>
        UserData:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The user data to make available to the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html">Running commands on your Linux instance at launch</a> (Linux) and <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html#instancedata-add-user-data">Adding User Data</a> (Windows). If you are using a command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text. User data is limited to 16 KB.
        AdditionalInfo:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: additionalInfo
              description: Reserved.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientToken
              description: '<p>Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, a randomly generated token is used for the request to ensure idempotency.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p> <p>Constraints: Maximum 64 ASCII characters</p>'
        DisableApiTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: disableApiTermination
              description: "<p>If you set this parameter to <code>true</code>, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html\">ModifyInstanceAttribute</a>. Alternatively, if you set <code>InstanceInitiatedShutdownBehavior</code> to <code>terminate</code>, you can terminate the instance by running the shutdown command from the instance.</p> <p>Default: <code>false</code> </p>"
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        EbsOptimized:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: ebsOptimized
              description: "<p>Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.</p> <p>Default: <code>false</code> </p>"
        IamInstanceProfile:
          allOf:
            - $ref: "#/components/schemas/IamInstanceProfileSpecification"
            - xml:
                name: iamInstanceProfile
              description: The name or Amazon Resource Name (ARN) of an IAM instance profile.
        InstanceInitiatedShutdownBehavior:
          allOf:
            - $ref: "#/components/schemas/ShutdownBehavior"
            - xml:
                name: instanceInitiatedShutdownBehavior
              description: "<p>Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).</p> <p>Default: <code>stop</code> </p>"
        NetworkInterfaces:
          allOf:
            - $ref: "#/components/schemas/InstanceNetworkInterfaceSpecificationList"
            - xml:
                name: networkInterface
              description: The network interfaces to associate with the instance. If you specify a network interface, you must specify any security groups and subnets as part of the network interface.
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateIpAddress
              description: <p>[EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address range of the subnet.</p> <p>Only one private IP address can be designated as primary. You can't specify this option if you've specified the option to designate a private IP address as the primary IP address in a network interface specification. You cannot specify this option if you're launching more than one instance in the request.</p> <p>You cannot specify this option and the network interfaces option in the same request.</p>
        ElasticGpuSpecification:
          allOf:
            - $ref: "#/components/schemas/ElasticGpuSpecifications"
            - description: An elastic GPU to associate with the instance. An Elastic GPU is a GPU resource that you can attach to your Windows instance to accelerate the graphics performance of your applications. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html">Amazon EC2 Elastic GPUs</a> in the <i>Amazon EC2 User Guide</i>.
        ElasticInferenceAccelerators:
          allOf:
            - $ref: "#/components/schemas/ElasticInferenceAccelerators"
            - xml:
                name: ElasticInferenceAccelerator
              description: <p>An elastic inference accelerator to associate with the instance. Elastic inference accelerators are a resource you can attach to your Amazon EC2 instances to accelerate your Deep Learning (DL) inference workloads.</p> <p>You cannot specify accelerators from different generations in the same request.</p>
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html">CreateTags</a>.
        LaunchTemplate:
          allOf:
            - $ref: "#/components/schemas/LaunchTemplateSpecification"
            - description: The launch template to use to launch the instances. Any parameters that you specify in <a>RunInstances</a> override the same parameters in the launch template. You can specify either the name or ID of a launch template, but not both.
        InstanceMarketOptions:
          allOf:
            - $ref: "#/components/schemas/InstanceMarketOptionsRequest"
            - description: <p>The market (purchasing) option for the instances.</p> <p>For <a>RunInstances</a>, persistent Spot Instance requests are only supported when <b>InstanceInterruptionBehavior</b> is set to either <code>hibernate</code> or <code>stop</code>.</p>
        CreditSpecification:
          allOf:
            - $ref: "#/components/schemas/CreditSpecificationRequest"
            - description: '<p>The credit option for CPU usage of the burstable performance instance. Valid values are <code>standard</code> and <code>unlimited</code>. To change this attribute after launch, use <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCreditSpecification.html"> ModifyInstanceCreditSpecification</a>. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html">Burstable performance instances</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>Default: <code>standard</code> (T2 instances) or <code>unlimited</code> (T3/T3a instances)</p> <p>For T3 instances with <code>host</code> tenancy, only <code>standard</code> is supported.</p>'
        CpuOptions:
          allOf:
            - $ref: "#/components/schemas/CpuOptionsRequest"
            - description: The CPU options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html">Optimizing CPU options</a> in the <i>Amazon EC2 User Guide</i>.
        CapacityReservationSpecification:
          allOf:
            - $ref: "#/components/schemas/CapacityReservationSpecification"
            - description: Information about the Capacity Reservation targeting option. If you do not specify this parameter, the instance's Capacity Reservation preference defaults to <code>open</code>, which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).
        HibernationOptions:
          allOf:
            - $ref: "#/components/schemas/HibernationOptionsRequest"
            - description: <p>Indicates whether an instance is enabled for hibernation. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>You can't enable hibernation and Amazon Web Services Nitro Enclaves on the same instance.</p>
        LicenseSpecifications:
          allOf:
            - $ref: "#/components/schemas/LicenseSpecificationListRequest"
            - xml:
                name: LicenseSpecification
              description: The license configurations.
        MetadataOptions:
          allOf:
            - $ref: "#/components/schemas/InstanceMetadataOptionsRequest"
            - description: The metadata options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance metadata and user data</a>.
        EnclaveOptions:
          allOf:
            - $ref: "#/components/schemas/EnclaveOptionsRequest"
            - description: <p>Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves. For more information, see <a href="https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave.html"> What is Amazon Web Services Nitro Enclaves?</a> in the <i>Amazon Web Services Nitro Enclaves User Guide</i>.</p> <p>You can't enable Amazon Web Services Nitro Enclaves and hibernation on the same instance.</p>
    ScheduledInstancesLaunchSpecification:
      type: object
      required:
        - ImageId
      properties:
        BlockDeviceMappings:
          allOf:
            - $ref: "#/components/schemas/ScheduledInstancesBlockDeviceMappingSet"
            - xml:
                name: BlockDeviceMapping
              description: The block device mapping entries.
        EbsOptimized:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "<p>Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.</p> <p>Default: <code>false</code> </p>"
        IamInstanceProfile:
          allOf:
            - $ref: "#/components/schemas/ScheduledInstancesIamInstanceProfile"
            - description: The IAM instance profile.
        ImageId:
          allOf:
            - $ref: "#/components/schemas/ImageId"
            - description: The ID of the Amazon Machine Image (AMI).
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The instance type.
        KernelId:
          allOf:
            - $ref: "#/components/schemas/KernelId"
            - description: The ID of the kernel.
        KeyName:
          allOf:
            - $ref: "#/components/schemas/KeyPairName"
            - description: The name of the key pair.
        Monitoring:
          allOf:
            - $ref: "#/components/schemas/ScheduledInstancesMonitoring"
            - description: Enable or disable monitoring for the instances.
        NetworkInterfaces:
          allOf:
            - $ref: "#/components/schemas/ScheduledInstancesNetworkInterfaceSet"
            - xml:
                name: NetworkInterface
              description: The network interfaces.
        Placement:
          allOf:
            - $ref: "#/components/schemas/ScheduledInstancesPlacement"
            - description: The placement information.
        RamdiskId:
          allOf:
            - $ref: "#/components/schemas/RamdiskId"
            - description: The ID of the RAM disk.
        SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/ScheduledInstancesSecurityGroupIdSet"
            - xml:
                name: SecurityGroupId
              description: The IDs of the security groups.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - description: The ID of the subnet in which to launch the instances.
        UserData:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The base64-encoded MIME user data.
      description: <p>Describes the launch specification for a Scheduled Instance.</p> <p>If you are launching the Scheduled Instance in EC2-VPC, you must specify the ID of the subnet. You can specify the subnet using either <code>SubnetId</code> or <code>NetworkInterface</code>.</p>
    RunScheduledInstancesRequest:
      type: object
      required:
        - LaunchSpecification
        - ScheduledInstanceId
      title: RunScheduledInstancesRequest
      properties:
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that ensures the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        InstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The number of instances.</p> <p>Default: 1</p>"
        LaunchSpecification:
          allOf:
            - $ref: "#/components/schemas/ScheduledInstancesLaunchSpecification"
            - description: The launch specification. You must match the instance type, Availability Zone, network, and platform of the schedule that you purchased.
        ScheduledInstanceId:
          allOf:
            - $ref: "#/components/schemas/ScheduledInstanceId"
            - description: The Scheduled Instance ID.
      description: Contains the parameters for RunScheduledInstances.
    ScheduledInstanceRecurrence:
      type: object
      properties:
        Frequency:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: frequency
              description: The frequency (<code>Daily</code>, <code>Weekly</code>, or <code>Monthly</code>).
        Interval:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: interval
              description: The interval quantity. The interval unit depends on the value of <code>frequency</code>. For example, every 2 weeks or every 2 months.
        OccurrenceDaySet:
          allOf:
            - $ref: "#/components/schemas/OccurrenceDaySet"
            - xml:
                name: occurrenceDaySet
              description: The days. For a monthly schedule, this is one or more days of the month (1-31). For a weekly schedule, this is one or more days of the week (1-7, where 1 is Sunday).
        OccurrenceRelativeToEnd:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: occurrenceRelativeToEnd
              description: Indicates whether the occurrence is relative to the end of the specified week or month.
        OccurrenceUnit:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: occurrenceUnit
              description: The unit for <code>occurrenceDaySet</code> (<code>DayOfWeek</code> or <code>DayOfMonth</code>).
      description: Describes the recurring schedule for a Scheduled Instance.
    ScheduledInstanceAvailability:
      type: object
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone.
        AvailableInstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: availableInstanceCount
              description: The number of available instances.
        FirstSlotStartTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: firstSlotStartTime
              description: The time period for the first schedule to start.
        HourlyPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: hourlyPrice
              description: The hourly price for a single instance.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceType
              description: The instance type. You can specify one of the C3, C4, M4, or R3 instance types.
        MaxTermDurationInDays:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: maxTermDurationInDays
              description: The maximum term. The only possible value is 365 days.
        MinTermDurationInDays:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: minTermDurationInDays
              description: The minimum term. The only possible value is 365 days.
        NetworkPlatform:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkPlatform
              description: The network platform (<code>EC2-Classic</code> or <code>EC2-VPC</code>).
        Platform:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: platform
              description: The platform (<code>Linux/UNIX</code> or <code>Windows</code>).
        PurchaseToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: purchaseToken
              description: The purchase token. This token expires in two hours.
        Recurrence:
          allOf:
            - $ref: "#/components/schemas/ScheduledInstanceRecurrence"
            - xml:
                name: recurrence
              description: The schedule recurrence.
        SlotDurationInHours:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: slotDurationInHours
              description: The number of hours in the schedule.
        TotalScheduledInstanceHours:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: totalScheduledInstanceHours
              description: The total number of hours for a single instance for the entire term.
      description: Describes a schedule that is available for your Scheduled Instances.
    ScheduledInstancesEbs:
      type: object
      properties:
        DeleteOnTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the volume is deleted on instance termination.
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the volume is encrypted. You can attached encrypted volumes only to instances that support them.
        Iops:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>The number of I/O operations per second (IOPS) to provision for an <code>io1</code> or <code>io2</code> volume, with a maximum ratio of 50 IOPS/GiB for <code>io1</code>, and 500 IOPS/GiB for <code>io2</code>. Range is 100 to 64,000 IOPS for volumes in most Regions. Maximum IOPS of 64,000 is guaranteed only on <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances">instances built on the Nitro System</a>. Other instance families guarantee performance up to 32,000 IOPS. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS volume types</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>This parameter is valid only for Provisioned IOPS SSD (<code>io1</code> and <code>io2</code>) volumes.</p>
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/SnapshotId"
            - description: The ID of the snapshot.
        VolumeSize:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The size of the volume, in GiB.</p> <p>Default: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.</p>"
        VolumeType:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The volume type. <code>gp2</code> for General Purpose SSD, <code>io1</code> or <code> io2</code> for Provisioned IOPS SSD, Throughput Optimized HDD for <code>st1</code>, Cold HDD for <code>sc1</code>, or <code>standard</code> for Magnetic.</p> <p>Default: <code>gp2</code> </p>"
      description: Describes an EBS volume for a Scheduled Instance.
    ScheduledInstancesBlockDeviceMapping:
      type: object
      properties:
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).
        Ebs:
          allOf:
            - $ref: "#/components/schemas/ScheduledInstancesEbs"
            - description: Parameters used to set up EBS volumes automatically when the instance is launched.
        NoDevice:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: To omit the device from the block device mapping, specify an empty string.
        VirtualName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The virtual device name (<code>ephemeral</code>N). Instance store volumes are numbered starting from 0. An instance type with two available instance store volumes can specify mappings for <code>ephemeral0</code> and <code>ephemeral1</code>. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.</p> <p>Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.</p>"
      description: Describes a block device mapping for a Scheduled Instance.
    ScheduledInstancesIpv6Address:
      type: object
      properties:
        Ipv6Address:
          allOf:
            - $ref: "#/components/schemas/Ipv6Address"
            - description: The IPv6 address.
      description: Describes an IPv6 address.
    ScheduledInstancesIpv6AddressList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ScheduledInstancesIpv6Address"
          - xml:
              name: Ipv6Address
    ScheduledInstancesNetworkInterface:
      type: object
      properties:
        AssociatePublicIpAddress:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether to assign a public IPv4 address to instances launched in a VPC. The public IPv4 address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is <code>true</code>.
        DeleteOnTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether to delete the interface when the instance is terminated.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The description.
        DeviceIndex:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The index of the device for the network interface attachment.
        Groups:
          allOf:
            - $ref: "#/components/schemas/ScheduledInstancesSecurityGroupIdSet"
            - xml:
                name: Group
              description: The IDs of the security groups.
        Ipv6AddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of IPv6 addresses to assign to the network interface. The IPv6 addresses are automatically selected from the subnet range.
        Ipv6Addresses:
          allOf:
            - $ref: "#/components/schemas/ScheduledInstancesIpv6AddressList"
            - xml:
                name: Ipv6Address
              description: The specific IPv6 addresses from the subnet range.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceId"
            - description: The ID of the network interface.
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IPv4 address of the network interface within the subnet.
        PrivateIpAddressConfigs:
          allOf:
            - $ref: "#/components/schemas/PrivateIpAddressConfigSet"
            - xml:
                name: PrivateIpAddressConfig
              description: The private IPv4 addresses.
        SecondaryPrivateIpAddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of secondary private IPv4 addresses.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/SubnetId"
            - description: The ID of the subnet.
      description: Describes a network interface for a Scheduled Instance.
    SearchLocalGatewayRoutesRequest:
      type: object
      required:
        - LocalGatewayRouteTableId
        - Filters
      title: SearchLocalGatewayRoutesRequest
      properties:
        LocalGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/LocalGatewayRoutetableId"
            - description: The ID of the local gateway route table.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: One or more filters.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    SearchTransitGatewayMulticastGroupsRequest:
      type: object
      title: SearchTransitGatewayMulticastGroupsRequest
      properties:
        TransitGatewayMulticastDomainId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulticastDomainId"
            - description: The ID of the transit gateway multicast domain.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>group-ip-address</code> - The IP address of the transit gateway multicast group.</p> </li> <li> <p> <code>is-group-member</code> - The resource is a group member. Valid values are <code>true</code> | <code>false</code>.</p> </li> <li> <p> <code>is-group-source</code> - The resource is a group source. Valid values are <code>true</code> | <code>false</code>.</p> </li> <li> <p> <code>member-type</code> - The member type. Valid values are <code>igmp</code> | <code>static</code>.</p> </li> <li> <p> <code>resource-id</code> - The ID of the resource.</p> </li> <li> <p> <code>resource-type</code> - The type of resource. Valid values are <code>vpc</code> | <code>vpn</code> | <code>direct-connect-gateway</code> | <code>tgw-peering</code>.</p> </li> <li> <p> <code>source-type</code> - The source type. Valid values are <code>igmp</code> | <code>static</code>.</p> </li> <li> <p> <code>subnet-id</code> - The ID of the subnet.</p> </li> <li> <p> <code>transit-gateway-attachment-id</code> - The id of the transit gateway attachment.</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMaxResults"
            - description: The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next page of results.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayMulticastGroupList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGatewayMulticastGroup"
          - xml:
              name: item
    SearchTransitGatewayRoutesRequest:
      type: object
      required:
        - TransitGatewayRouteTableId
        - Filters
      title: SearchTransitGatewayRoutesRequest
      properties:
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableId"
            - description: The ID of the transit gateway route table.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - xml:
                name: Filter
              description: <p>One or more filters. The possible values are:</p> <ul> <li> <p> <code>attachment.transit-gateway-attachment-id</code>- The id of the transit gateway attachment.</p> </li> <li> <p> <code>attachment.resource-id</code> - The resource id of the transit gateway attachment.</p> </li> <li> <p> <code>attachment.resource-type</code> - The attachment resource type. Valid values are <code>vpc</code> | <code>vpn</code> | <code>direct-connect-gateway</code> | <code>peering</code> | <code>connect</code>.</p> </li> <li> <p> <code>prefix-list-id</code> - The ID of the prefix list.</p> </li> <li> <p> <code>route-search.exact-match</code> - The exact match of the specified filter.</p> </li> <li> <p> <code>route-search.longest-prefix-match</code> - The longest prefix that matches the route.</p> </li> <li> <p> <code>route-search.subnet-of-match</code> - The routes with a subnet that match the specified CIDR filter.</p> </li> <li> <p> <code>route-search.supernet-of-match</code> - The routes with a CIDR that encompass the CIDR filter. For example, if you have 10.0.1.0/29 and 10.0.1.0/31 routes in your route table and you specify supernet-of-match as 10.0.1.0/30, then the result returns 10.0.1.0/29.</p> </li> <li> <p> <code>state</code> - The state of the route (<code>active</code> | <code>blackhole</code>).</p> </li> <li> <p> <code>type</code> - The type of route (<code>propagated</code> | <code>static</code>).</p> </li> </ul>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMaxResults"
            - description: The maximum number of routes to return.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TransitGatewayRouteList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGatewayRoute"
          - xml:
              name: item
    SecurityGroup:
      type: object
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupDescription
              description: A description of the security group.
        GroupName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupName
              description: The name of the security group.
        IpPermissions:
          allOf:
            - $ref: "#/components/schemas/IpPermissionList"
            - xml:
                name: ipPermissions
              description: The inbound rules associated with the security group.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The Amazon Web Services account ID of the owner of the security group.
        GroupId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupId
              description: The ID of the security group.
        IpPermissionsEgress:
          allOf:
            - $ref: "#/components/schemas/IpPermissionList"
            - xml:
                name: ipPermissionsEgress
              description: "[VPC only] The outbound rules associated with the security group."
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the security group.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: "[VPC only] The ID of the VPC for the security group."
      description: Describes a security group.
    SecurityGroupReference:
      type: object
      properties:
        GroupId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupId
              description: The ID of your security group.
        ReferencingVpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: referencingVpcId
              description: The ID of the VPC with the referencing security group.
        VpcPeeringConnectionId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcPeeringConnectionId
              description: The ID of the VPC peering connection.
      description: Describes a VPC with a security group that references your security group.
    SecurityGroupRuleId:
      type: string
    SecurityGroupRule:
      type: object
      properties:
        SecurityGroupRuleId:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupRuleId"
            - xml:
                name: securityGroupRuleId
              description: The ID of the security group rule.
        GroupId:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupId"
            - xml:
                name: groupId
              description: The ID of the security group.
        GroupOwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupOwnerId
              description: "The ID of the Amazon Web Services account that owns the security group. "
        IsEgress:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: isEgress
              description: Indicates whether the security group rule is an outbound rule.
        IpProtocol:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipProtocol
              description: <p>The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>, <code>icmpv6</code>) or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a>). </p> <p>Use <code>-1</code> to specify all protocols.</p>
        FromPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: fromPort
              description: The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.
        ToPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: toPort
              description: "The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of <code>-1</code> indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes. "
        CidrIpv4:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cidrIpv4
              description: The IPv4 CIDR range.
        CidrIpv6:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cidrIpv6
              description: The IPv6 CIDR range.
        PrefixListId:
          allOf:
            - $ref: "#/components/schemas/PrefixListResourceId"
            - xml:
                name: prefixListId
              description: The ID of the prefix list.
        ReferencedGroupInfo:
          allOf:
            - $ref: "#/components/schemas/ReferencedSecurityGroup"
            - xml:
                name: referencedGroupInfo
              description: Describes the security group that is referenced in the rule.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: The security group rule description.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags applied to the security group rule.
      description: Describes a security group rule.
    SecurityGroupRuleDescriptionList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SecurityGroupRuleDescription"
          - xml:
              name: item
    SecurityGroupRuleRequest:
      type: object
      properties:
        IpProtocol:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>, <code>icmpv6</code>) or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers</a>). </p> <p>Use <code>-1</code> to specify all protocols.</p>
        FromPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type. A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes.
        ToPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code. A value of <code>-1</code> indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes. "
        CidrIpv4:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "The IPv4 CIDR range. To specify a single IPv4 address, use the /32 prefix length. "
        CidrIpv6:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IPv6 CIDR range. To specify a single IPv6 address, use the /128 prefix length.
        PrefixListId:
          allOf:
            - $ref: "#/components/schemas/PrefixListResourceId"
            - description: The ID of the prefix list.
        ReferencedGroupId:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupId"
            - description: The ID of the security group that is referenced in the security group rule.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The description of the security group rule.
      description: <p>Describes a security group rule.</p> <p>You must specify exactly one of the following parameters, based on the rule type:</p> <ul> <li> <p>CidrIpv4</p> </li> <li> <p>CidrIpv6</p> </li> <li> <p>PrefixListId</p> </li> <li> <p>ReferencedGroupId</p> </li> </ul> <p>When you modify a rule, you cannot change the rule type. For example, if the rule uses an IPv4 address range, you must use <code>CidrIpv4</code> to specify a new IPv4 address range.</p>
    SendDiagnosticInterruptRequest:
      type: object
      required:
        - InstanceId
      title: SendDiagnosticInterruptRequest
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - description: The ID of the instance.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ServiceTypeDetailSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ServiceTypeDetail"
          - xml:
              name: item
    ServiceState:
      type: string
      enum:
        - Pending
        - Available
        - Deleting
        - Deleted
        - Failed
    ServiceDetail:
      type: object
      properties:
        ServiceName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: serviceName
              description: The Amazon Resource Name (ARN) of the service.
        ServiceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: serviceId
              description: The ID of the endpoint service.
        ServiceType:
          allOf:
            - $ref: "#/components/schemas/ServiceTypeDetailSet"
            - xml:
                name: serviceType
              description: The type of service.
        AvailabilityZones:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: availabilityZoneSet
              description: The Availability Zones in which the service is available.
        Owner:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: owner
              description: The AWS account ID of the service owner.
        BaseEndpointDnsNames:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: baseEndpointDnsNameSet
              description: The DNS names for the service.
        PrivateDnsName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: privateDnsName
              description: The private DNS name for the service.
        PrivateDnsNames:
          allOf:
            - $ref: "#/components/schemas/PrivateDnsDetailsSet"
            - xml:
                name: privateDnsNameSet
              description: "The private DNS names assigned to the VPC endpoint service. "
        VpcEndpointPolicySupported:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: vpcEndpointPolicySupported
              description: Indicates whether the service supports endpoint policies.
        AcceptanceRequired:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: acceptanceRequired
              description: Indicates whether VPC endpoint connection requests to the service must be accepted by the service owner.
        ManagesVpcEndpoints:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: managesVpcEndpoints
              description: Indicates whether the service manages its VPC endpoints. Management of the service VPC endpoints using the VPC endpoint API is restricted.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the service.
        PrivateDnsNameVerificationState:
          allOf:
            - $ref: "#/components/schemas/DnsNameState"
            - xml:
                name: privateDnsNameVerificationState
              description: <p>The verification state of the VPC endpoint service.</p> <p>Consumers of the endpoint service cannot use the private name when the state is not <code>verified</code>.</p>
      description: Describes a VPC endpoint service.
    ServiceType:
      type: string
      enum:
        - Interface
        - Gateway
        - GatewayLoadBalancer
    ServiceTypeDetail:
      type: object
      properties:
        ServiceType:
          allOf:
            - $ref: "#/components/schemas/ServiceType"
            - xml:
                name: serviceType
              description: The type of service.
      description: Describes the type of service for a VPC endpoint.
    SnapshotState:
      type: string
      enum:
        - pending
        - completed
        - error
    UserBucketDetails:
      type: object
      properties:
        S3Bucket:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: s3Bucket
              description: The Amazon S3 bucket from which the disk image was created.
        S3Key:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: s3Key
              description: The file name of the disk image.
      description: Describes the Amazon S3 bucket for the disk image.
    SnapshotDetail:
      type: object
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description for the snapshot.
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: deviceName
              description: The block device mapping for the snapshot.
        DiskImageSize:
          allOf:
            - $ref: "#/components/schemas/Double"
            - xml:
                name: diskImageSize
              description: The size of the disk in the snapshot, in GiB.
        Format:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: format
              description: The format of the disk image from which the snapshot is created.
        Progress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: progress
              description: The percentage of progress for the task.
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: snapshotId
              description: The snapshot ID of the disk being imported.
        Status:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: status
              description: A brief status of the snapshot creation.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: statusMessage
              description: A detailed status message for the snapshot creation.
        Url:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: url
              description: The URL used to access the disk image.
        UserBucket:
          allOf:
            - $ref: "#/components/schemas/UserBucketDetails"
            - xml:
                name: userBucket
              description: The Amazon S3 bucket for the disk image.
      description: Describes the snapshot created from the imported disk.
    SnapshotInfo:
      type: object
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: Description specified by the CreateSnapshotRequest that has been applied to all snapshots.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Tags associated with this snapshot.
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: encrypted
              description: Indicates whether the snapshot is encrypted.
        VolumeId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: volumeId
              description: Source volume from which this snapshot was created.
        State:
          allOf:
            - $ref: "#/components/schemas/SnapshotState"
            - xml:
                name: state
              description: Current state of the snapshot.
        VolumeSize:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: volumeSize
              description: Size of the volume from which this snapshot was created.
        StartTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: startTime
              description: Time this snapshot was started. This is the same for all snapshots initiated by the same request.
        Progress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: progress
              description: Progress this snapshot has made towards completing.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: Account id used when creating this snapshot.
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: snapshotId
              description: Snapshot id that can be used to describe this snapshot.
        OutpostArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: outpostArn
              description: The ARN of the Outpost on which the snapshot is stored. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshots-outposts.html">Amazon EBS local snapshots on Outposts</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
      description: Information about a snapshot.
    SpotCapacityRebalance:
      type: object
      properties:
        ReplacementStrategy:
          allOf:
            - $ref: "#/components/schemas/ReplacementStrategy"
            - xml:
                name: replacementStrategy
              description: <p>The replacement strategy to use. Only available for fleets of type <code>maintain</code>. You must specify a value, otherwise you get an error.</p> <p>To allow Spot Fleet to launch a replacement Spot Instance when an instance rebalance notification is emitted for a Spot Instance in the fleet, specify <code>launch</code>.</p> <note> <p>When a replacement instance is launched, the instance marked for rebalance is not automatically terminated. You can terminate it, or you can leave it running. You are charged for all instances while they are running.</p> </note>
      description: The Spot Instance replacement strategy to use when Amazon EC2 emits a signal that your Spot Instance is at an elevated risk of being interrupted. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-configuration-strategies.html#spot-fleet-capacity-rebalance">Capacity rebalancing</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
    SpotInstanceStateFault:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: code
              description: The reason code for the Spot Instance state change.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: The message for the Spot Instance state change.
      description: Describes a Spot Instance state change.
    SpotFleetMonitoring:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: enabled
              description: "<p>Enables monitoring for the instance.</p> <p>Default: <code>false</code> </p>"
      description: Describes whether monitoring is enabled.
    SpotFleetTagSpecificationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SpotFleetTagSpecification"
          - xml:
              name: item
    SpotFleetRequestConfig:
      type: object
      properties:
        ActivityStatus:
          allOf:
            - $ref: "#/components/schemas/ActivityStatus"
            - xml:
                name: activityStatus
              description: The progress of the Spot Fleet request. If there is an error, the status is <code>error</code>. After all requests are placed, the status is <code>pending_fulfillment</code>. If the size of the fleet is equal to or greater than its target capacity, the status is <code>fulfilled</code>. If the size of the fleet is decreased, the status is <code>pending_termination</code> while Spot Instances are terminating.
        CreateTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: createTime
              description: The creation date and time of the request.
        SpotFleetRequestConfig:
          allOf:
            - $ref: "#/components/schemas/SpotFleetRequestConfigData"
            - xml:
                name: spotFleetRequestConfig
              description: The configuration of the Spot Fleet request.
        SpotFleetRequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: spotFleetRequestId
              description: The ID of the Spot Fleet request.
        SpotFleetRequestState:
          allOf:
            - $ref: "#/components/schemas/BatchState"
            - xml:
                name: spotFleetRequestState
              description: The state of the Spot Fleet request.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags for a Spot Fleet resource.
      description: Describes a Spot Fleet request.
    SpotFleetTagSpecification:
      type: object
      properties:
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/ResourceType"
            - xml:
                name: resourceType
              description: The type of resource. Currently, the only resource type that is supported is <code>instance</code>. To tag the Spot Fleet request on creation, use the <code>TagSpecifications</code> parameter in <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotFleetRequestConfigData.html"> <code>SpotFleetRequestConfigData</code> </a>.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tag
              description: The tags.
      description: The tags for a Spot Fleet resource.
    SpotInstanceState:
      type: string
      enum:
        - open
        - active
        - closed
        - cancelled
        - failed
    SpotInstanceStatus:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: code
              description: The status code. For a list of status codes, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html#spot-instance-bid-status-understand">Spot status codes</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: The description for the status code.
        UpdateTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: updateTime
              description: The date and time of the most recent status update, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
      description: Describes the status of a Spot Instance request.
    SpotInstanceRequest:
      type: object
      properties:
        ActualBlockHourlyPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: actualBlockHourlyPrice
              description: Deprecated.
        AvailabilityZoneGroup:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZoneGroup
              description: The Availability Zone group. If you specify the same Availability Zone group for all Spot Instance requests, all Spot Instances are launched in the same Availability Zone.
        BlockDurationMinutes:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: blockDurationMinutes
              description: Deprecated.
        CreateTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: createTime
              description: The date and time when the Spot Instance request was created, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
        Fault:
          allOf:
            - $ref: "#/components/schemas/SpotInstanceStateFault"
            - xml:
                name: fault
              description: The fault codes for the Spot Instance request, if any.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - xml:
                name: instanceId
              description: The instance ID, if an instance has been launched to fulfill the Spot Instance request.
        LaunchGroup:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: launchGroup
              description: The instance launch group. Launch groups are Spot Instances that launch together and terminate together.
        LaunchSpecification:
          allOf:
            - $ref: "#/components/schemas/LaunchSpecification"
            - xml:
                name: launchSpecification
              description: Additional information for launching instances.
        LaunchedAvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: launchedAvailabilityZone
              description: The Availability Zone in which the request is launched.
        ProductDescription:
          allOf:
            - $ref: "#/components/schemas/RIProductDescription"
            - xml:
                name: productDescription
              description: The product description associated with the Spot Instance.
        SpotInstanceRequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: spotInstanceRequestId
              description: The ID of the Spot Instance request.
        SpotPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: spotPrice
              description: The maximum price per hour that you are willing to pay for a Spot Instance.
        State:
          allOf:
            - $ref: "#/components/schemas/SpotInstanceState"
            - xml:
                name: state
              description: The state of the Spot Instance request. Spot status information helps track your Spot Instance requests. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html">Spot status</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
        Status:
          allOf:
            - $ref: "#/components/schemas/SpotInstanceStatus"
            - xml:
                name: status
              description: The status code and status message describing the Spot Instance request.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the resource.
        Type:
          allOf:
            - $ref: "#/components/schemas/SpotInstanceType"
            - xml:
                name: type
              description: The Spot Instance request type.
        ValidFrom:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: validFrom
              description: The start date of the request, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z). The request becomes active at this date and time.
        ValidUntil:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: validUntil
              description: <p>The end date of the request, in UTC format (<i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).</p> <ul> <li> <p>For a persistent request, the request remains active until the <code>validUntil</code> date and time is reached. Otherwise, the request remains active until you cancel it. </p> </li> <li> <p>For a one-time request, the request remains active until all instances launch, the request is canceled, or the <code>validUntil</code> date and time is reached. By default, the request is valid for 7 days from the date the request was created.</p> </li> </ul>
        InstanceInterruptionBehavior:
          allOf:
            - $ref: "#/components/schemas/InstanceInterruptionBehavior"
            - xml:
                name: instanceInterruptionBehavior
              description: The behavior when a Spot Instance is interrupted.
      description: Describes a Spot Instance request.
    SpotPrice:
      type: object
      properties:
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/InstanceType"
            - xml:
                name: instanceType
              description: The instance type.
        ProductDescription:
          allOf:
            - $ref: "#/components/schemas/RIProductDescription"
            - xml:
                name: productDescription
              description: A general description of the AMI.
        SpotPrice:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: spotPrice
              description: The maximum price per hour that you are willing to pay for a Spot Instance.
        Timestamp:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: timestamp
              description: The date and time the request was created, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
      description: Describes the maximum price per hour that you are willing to pay for a Spot Instance.
    UserIdGroupPairSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/UserIdGroupPair"
          - xml:
              name: item
    StaleIpPermission:
      type: object
      properties:
        FromPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: fromPort
              description: "The start of the port range for the TCP and UDP protocols, or an ICMP type number. A value of <code>-1</code> indicates all ICMP types. "
        IpProtocol:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ipProtocol
              description: The IP protocol name (for <code>tcp</code>, <code>udp</code>, and <code>icmp</code>) or number (see <a href="http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml">Protocol Numbers)</a>.
        IpRanges:
          allOf:
            - $ref: "#/components/schemas/IpRanges"
            - xml:
                name: ipRanges
              description: The IP ranges. Not applicable for stale security group rules.
        PrefixListIds:
          allOf:
            - $ref: "#/components/schemas/PrefixListIdSet"
            - xml:
                name: prefixListIds
              description: The prefix list IDs. Not applicable for stale security group rules.
        ToPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: toPort
              description: "The end of the port range for the TCP and UDP protocols, or an ICMP type number. A value of <code>-1</code> indicates all ICMP types. "
        UserIdGroupPairs:
          allOf:
            - $ref: "#/components/schemas/UserIdGroupPairSet"
            - xml:
                name: groups
              description: The security group pairs. Returns the ID of the referenced security group and VPC, and the ID and status of the VPC peering connection.
      description: Describes a stale rule in a security group.
    StaleIpPermissionSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/StaleIpPermission"
          - xml:
              name: item
    StaleSecurityGroup:
      type: object
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: The description of the security group.
        GroupId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupId
              description: The ID of the security group.
        GroupName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupName
              description: The name of the security group.
        StaleIpPermissions:
          allOf:
            - $ref: "#/components/schemas/StaleIpPermissionSet"
            - xml:
                name: staleIpPermissions
              description: Information about the stale inbound rules in the security group.
        StaleIpPermissionsEgress:
          allOf:
            - $ref: "#/components/schemas/StaleIpPermissionSet"
            - xml:
                name: staleIpPermissionsEgress
              description: Information about the stale outbound rules in the security group.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC for the security group.
      description: Describes a stale security group (a security group that contains stale rules).
    StartInstancesRequest:
      type: object
      required:
        - InstanceIds
      title: StartInstancesRequest
      properties:
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIdStringList"
            - xml:
                name: InstanceId
              description: The IDs of the instances.
        AdditionalInfo:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: additionalInfo
              description: Reserved.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    StartNetworkInsightsAnalysisRequest:
      type: object
      required:
        - NetworkInsightsPathId
        - ClientToken
      title: StartNetworkInsightsAnalysisRequest
      properties:
        NetworkInsightsPathId:
          allOf:
            - $ref: "#/components/schemas/NetworkInsightsPathId"
            - description: The ID of the path.
        FilterInArns:
          allOf:
            - $ref: "#/components/schemas/ArnList"
            - xml:
                name: FilterInArn
              description: The Amazon Resource Names (ARN) of the resources that the path must traverse.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        TagSpecifications:
          allOf:
            - $ref: "#/components/schemas/TagSpecificationList"
            - xml:
                name: TagSpecification
              description: The tags to apply.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.
    StartVpcEndpointServicePrivateDnsVerificationRequest:
      type: object
      required:
        - ServiceId
      title: StartVpcEndpointServicePrivateDnsVerificationRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        ServiceId:
          allOf:
            - $ref: "#/components/schemas/VpcEndpointServiceId"
            - description: The ID of the endpoint service.
    State:
      type: string
      enum:
        - PendingAcceptance
        - Pending
        - Available
        - Deleting
        - Deleted
        - Rejected
        - Failed
        - Expired
    StopInstancesRequest:
      type: object
      required:
        - InstanceIds
      title: StopInstancesRequest
      properties:
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIdStringList"
            - xml:
                name: InstanceId
              description: The IDs of the instances.
        Hibernate:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: '<p>Hibernates the instance if the instance was enabled for hibernation at launch. If the instance cannot hibernate successfully, a normal shutdown occurs. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance</a> in the <i>Amazon EC2 User Guide</i>.</p> <p> Default: <code>false</code> </p>'
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        Force:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: force
              description: "<p>Forces the instances to stop. The instances do not have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures. This option is not recommended for Windows instances.</p> <p>Default: <code>false</code> </p>"
    StoreImageTaskResult:
      type: object
      properties:
        AmiId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: amiId
              description: The ID of the AMI that is being stored.
        TaskStartTime:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: taskStartTime
              description: The time the task started.
        Bucket:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: bucket
              description: The name of the Amazon S3 bucket that contains the stored AMI object.
        S3objectKey:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: s3objectKey
              description: The name of the stored AMI object in the bucket.
        ProgressPercentage:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: progressPercentage
              description: The progress of the task as a percentage.
        StoreTaskState:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: storeTaskState
              description: The state of the store task (<code>InProgress</code>, <code>Completed</code>, or <code>Failed</code>).
        StoreTaskFailureReason:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: storeTaskFailureReason
              description: If the tasks fails, the reason for the failure is returned. If the task succeeds, <code>null</code> is returned.
      description: The information about the AMI store task, including the progress of the task.
    SubnetState:
      type: string
      enum:
        - pending
        - available
    SubnetIpv6CidrBlockAssociationSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SubnetIpv6CidrBlockAssociation"
          - xml:
              name: item
    TransitGatewayMulitcastDomainAssociationState:
      type: string
      enum:
        - pendingAcceptance
        - associating
        - associated
        - disassociating
        - disassociated
        - rejected
        - failed
    SubnetAssociation:
      type: object
      properties:
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: subnetId
              description: The ID of the subnet.
        State:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayMulitcastDomainAssociationState"
            - xml:
                name: state
              description: The state of the subnet association.
      description: Describes the subnet association with the transit gateway multicast domain.
    SubnetAssociationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/SubnetAssociation"
          - xml:
              name: item
    SubnetCidrBlockStateCode:
      type: string
      enum:
        - associating
        - associated
        - disassociating
        - disassociated
        - failing
        - failed
    SubnetCidrBlockState:
      type: object
      properties:
        State:
          allOf:
            - $ref: "#/components/schemas/SubnetCidrBlockStateCode"
            - xml:
                name: state
              description: The state of a CIDR block.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: statusMessage
              description: A message about the status of the CIDR block, if applicable.
      description: Describes the state of a CIDR block.
    SuccessfulInstanceCreditSpecificationItem:
      type: object
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance.
      description: Describes the burstable performance instance whose credit option for CPU usage was successfully modified.
    SuccessfulQueuedPurchaseDeletion:
      type: object
      properties:
        ReservedInstancesId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: reservedInstancesId
              description: The ID of the Reserved Instance.
      description: Describes a Reserved Instance whose queued purchase was successfully deleted.
    TagDescription:
      type: object
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: key
              description: The tag key.
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resourceId
              description: The ID of the resource.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/ResourceType"
            - xml:
                name: resourceType
              description: The resource type.
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: value
              description: The tag value.
      description: Describes a tag.
    TargetConfiguration:
      type: object
      properties:
        InstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: instanceCount
              description: The number of instances the Convertible Reserved Instance offering can be applied to. This parameter is reserved and cannot be specified in a request
        OfferingId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: offeringId
              description: The ID of the Convertible Reserved Instance offering.
      description: Information about the Convertible Reserved Instance offering.
    TargetGroup:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: arn
              description: The Amazon Resource Name (ARN) of the target group.
      description: Describes a load balancer target group.
    TargetGroups:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TargetGroup"
          - xml:
              name: item
      minItems: 1
      maxItems: 5
    TargetNetwork:
      type: object
      properties:
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: associationId
              description: The ID of the association.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC in which the target network (subnet) is located.
        TargetNetworkId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: targetNetworkId
              description: The ID of the subnet specified as the target network.
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: clientVpnEndpointId
              description: The ID of the Client VPN endpoint with which the target network is associated.
        Status:
          allOf:
            - $ref: "#/components/schemas/AssociationStatus"
            - xml:
                name: status
              description: The current state of the target network association.
        SecurityGroups:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: securityGroups
              description: The IDs of the security groups applied to the target network association.
      description: Describes a target network associated with a Client VPN endpoint.
    TargetReservationValue:
      type: object
      properties:
        ReservationValue:
          allOf:
            - $ref: "#/components/schemas/ReservationValue"
            - xml:
                name: reservationValue
              description: The total value of the Convertible Reserved Instances that make up the exchange. This is the sum of the list value, remaining upfront price, and additional upfront cost of the exchange.
        TargetConfiguration:
          allOf:
            - $ref: "#/components/schemas/TargetConfiguration"
            - xml:
                name: targetConfiguration
              description: The configuration of the Convertible Reserved Instances that make up the exchange.
      description: The total value of the new Convertible Reserved Instances.
    TelemetryStatus:
      type: string
      enum:
        - UP
        - DOWN
    TerminateClientVpnConnectionsRequest:
      type: object
      required:
        - ClientVpnEndpointId
      title: TerminateClientVpnConnectionsRequest
      properties:
        ClientVpnEndpointId:
          allOf:
            - $ref: "#/components/schemas/ClientVpnEndpointId"
            - description: The ID of the Client VPN endpoint to which the client is connected.
        ConnectionId:
          allOf:
            - $ref: "#/components/schemas/VpnConnectionId"
            - description: The ID of the client connection to be terminated.
        Username:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the user who initiated the connection. Use this option to terminate all active connections for the specified user. This option can only be used if the user has established up to five connections.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    TerminateConnectionStatusSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TerminateConnectionStatus"
          - xml:
              name: item
    TerminateConnectionStatus:
      type: object
      properties:
        ConnectionId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: connectionId
              description: The ID of the client connection.
        PreviousStatus:
          allOf:
            - $ref: "#/components/schemas/ClientVpnConnectionStatus"
            - xml:
                name: previousStatus
              description: The state of the client connection.
        CurrentStatus:
          allOf:
            - $ref: "#/components/schemas/ClientVpnConnectionStatus"
            - xml:
                name: currentStatus
              description: A message about the status of the client connection, if applicable.
      description: Information about a terminated Client VPN endpoint client connection.
    TerminateInstancesRequest:
      type: object
      required:
        - InstanceIds
      title: TerminateInstancesRequest
      properties:
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIdStringList"
            - xml:
                name: InstanceId
              description: "<p>The IDs of the instances.</p> <p>Constraints: Up to 1000 instance IDs. We recommend breaking up this request into smaller batches.</p>"
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    ThreadsPerCore:
      type: integer
    ThreadsPerCoreList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/ThreadsPerCore"
          - xml:
              name: item
    TrafficMirrorFilterRuleList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TrafficMirrorFilterRule"
          - xml:
              name: item
    TrafficMirrorPortRange:
      type: object
      properties:
        FromPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: fromPort
              description: The start of the Traffic Mirror port range. This applies to the TCP and UDP protocols.
        ToPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: toPort
              description: The end of the Traffic Mirror port range. This applies to the TCP and UDP protocols.
      description: Describes the Traffic Mirror port range.
    TrafficMirrorTargetType:
      type: string
      enum:
        - network-interface
        - network-load-balancer
    TransitGatewayState:
      type: string
      enum:
        - pending
        - available
        - modifying
        - deleting
        - deleted
    TransitGatewayOptions:
      type: object
      properties:
        AmazonSideAsn:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: amazonSideAsn
              description: A private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs.
        TransitGatewayCidrBlocks:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: transitGatewayCidrBlocks
              description: The transit gateway CIDR blocks.
        AutoAcceptSharedAttachments:
          allOf:
            - $ref: "#/components/schemas/AutoAcceptSharedAttachmentsValue"
            - xml:
                name: autoAcceptSharedAttachments
              description: Indicates whether attachment requests are automatically accepted.
        DefaultRouteTableAssociation:
          allOf:
            - $ref: "#/components/schemas/DefaultRouteTableAssociationValue"
            - xml:
                name: defaultRouteTableAssociation
              description: Indicates whether resource attachments are automatically associated with the default association route table.
        AssociationDefaultRouteTableId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: associationDefaultRouteTableId
              description: The ID of the default association route table.
        DefaultRouteTablePropagation:
          allOf:
            - $ref: "#/components/schemas/DefaultRouteTablePropagationValue"
            - xml:
                name: defaultRouteTablePropagation
              description: Indicates whether resource attachments automatically propagate routes to the default propagation route table.
        PropagationDefaultRouteTableId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: propagationDefaultRouteTableId
              description: The ID of the default propagation route table.
        VpnEcmpSupport:
          allOf:
            - $ref: "#/components/schemas/VpnEcmpSupportValue"
            - xml:
                name: vpnEcmpSupport
              description: Indicates whether Equal Cost Multipath Protocol support is enabled.
        DnsSupport:
          allOf:
            - $ref: "#/components/schemas/DnsSupportValue"
            - xml:
                name: dnsSupport
              description: Indicates whether DNS support is enabled.
        MulticastSupport:
          allOf:
            - $ref: "#/components/schemas/MulticastSupportValue"
            - xml:
                name: multicastSupport
              description: Indicates whether multicast is enabled on the transit gateway
      description: Describes the options for a transit gateway.
    TransitGatewayAttachmentResourceType:
      type: string
      enum:
        - vpc
        - vpn
        - direct-connect-gateway
        - connect
        - peering
        - tgw-peering
    TransitGatewayAssociationState:
      type: string
      enum:
        - associating
        - associated
        - disassociating
        - disassociated
    TransitGatewayAttachmentState:
      type: string
      enum:
        - initiating
        - initiatingRequest
        - pendingAcceptance
        - rollingBack
        - pending
        - available
        - modifying
        - deleting
        - deleted
        - failed
        - rejected
        - rejecting
        - failing
    TransitGatewayAttachmentAssociation:
      type: object
      properties:
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayRouteTableId
              description: The ID of the route table for the transit gateway.
        State:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAssociationState"
            - xml:
                name: state
              description: The state of the association.
      description: Describes an association.
    TransitGatewayAttachment:
      type: object
      properties:
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayAttachmentId
              description: The ID of the attachment.
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayId
              description: The ID of the transit gateway.
        TransitGatewayOwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayOwnerId
              description: The ID of the Amazon Web Services account that owns the transit gateway.
        ResourceOwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resourceOwnerId
              description: The ID of the Amazon Web Services account that owns the resource.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentResourceType"
            - xml:
                name: resourceType
              description: The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated.
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resourceId
              description: The ID of the resource.
        State:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentState"
            - xml:
                name: state
              description: The attachment state. Note that the <code>initiating</code> state has been deprecated.
        Association:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentAssociation"
            - xml:
                name: association
              description: The association.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: creationTime
              description: The creation time.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: The tags for the attachment.
      description: Describes an attachment between a resource and a transit gateway.
    TransitGatewayAttachmentBgpConfiguration:
      type: object
      properties:
        TransitGatewayAsn:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: transitGatewayAsn
              description: The transit gateway Autonomous System Number (ASN).
        PeerAsn:
          allOf:
            - $ref: "#/components/schemas/Long"
            - xml:
                name: peerAsn
              description: The peer Autonomous System Number (ASN).
        TransitGatewayAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayAddress
              description: The interior BGP peer IP address for the transit gateway.
        PeerAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: peerAddress
              description: The interior BGP peer IP address for the appliance.
        BgpStatus:
          allOf:
            - $ref: "#/components/schemas/BgpStatus"
            - xml:
                name: bgpStatus
              description: The BGP status.
      description: The BGP configuration information.
    TransitGatewayAttachmentBgpConfigurationList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGatewayAttachmentBgpConfiguration"
          - xml:
              name: item
    TransitGatewayPropagationState:
      type: string
      enum:
        - enabling
        - enabled
        - disabling
        - disabled
    TransitGatewayAttachmentPropagation:
      type: object
      properties:
        TransitGatewayRouteTableId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayRouteTableId
              description: The ID of the propagation route table.
        State:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayPropagationState"
            - xml:
                name: state
              description: The state of the propagation route table.
      description: Describes a propagation route table.
    TransitGatewayConnectOptions:
      type: object
      properties:
        Protocol:
          allOf:
            - $ref: "#/components/schemas/ProtocolValue"
            - xml:
                name: protocol
              description: The tunnel protocol.
      description: Describes the Connect attachment options.
    TransitGatewayConnectPeerState:
      type: string
      enum:
        - pending
        - available
        - deleting
        - deleted
    TransitGatewayConnectPeerConfiguration:
      type: object
      properties:
        TransitGatewayAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayAddress
              description: The Connect peer IP address on the transit gateway side of the tunnel.
        PeerAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: peerAddress
              description: The Connect peer IP address on the appliance side of the tunnel.
        InsideCidrBlocks:
          allOf:
            - $ref: "#/components/schemas/InsideCidrBlocksStringList"
            - xml:
                name: insideCidrBlocks
              description: The range of interior BGP peer IP addresses.
        Protocol:
          allOf:
            - $ref: "#/components/schemas/ProtocolValue"
            - xml:
                name: protocol
              description: The tunnel protocol.
        BgpConfigurations:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentBgpConfigurationList"
            - xml:
                name: bgpConfigurations
              description: The BGP configuration details.
      description: Describes the Connect peer details.
    TransitGatewayMulticastDomainOptions:
      type: object
      properties:
        Igmpv2Support:
          allOf:
            - $ref: "#/components/schemas/Igmpv2SupportValue"
            - xml:
                name: igmpv2Support
              description: Indicates whether Internet Group Management Protocol (IGMP) version 2 is turned on for the transit gateway multicast domain.
        StaticSourcesSupport:
          allOf:
            - $ref: "#/components/schemas/StaticSourcesSupportValue"
            - xml:
                name: staticSourcesSupport
              description: Indicates whether support for statically configuring transit gateway multicast group sources is turned on.
        AutoAcceptSharedAssociations:
          allOf:
            - $ref: "#/components/schemas/AutoAcceptSharedAssociationsValue"
            - xml:
                name: autoAcceptSharedAssociations
              description: Indicates whether to automatically cross-account subnet associations that are associated with the transit gateway multicast domain.
      description: Describes the options for a transit gateway multicast domain.
    TransitGatewayMulticastDomainState:
      type: string
      enum:
        - pending
        - available
        - deleting
        - deleted
    TransitGatewayMulticastDomainAssociation:
      type: object
      properties:
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayAttachmentId
              description: The ID of the transit gateway attachment.
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resourceId
              description: The ID of the resource.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentResourceType"
            - xml:
                name: resourceType
              description: The type of resource, for example a VPC attachment.
        ResourceOwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resourceOwnerId
              description: " The ID of the Amazon Web Services account that owns the transit gateway multicast domain association resource."
        Subnet:
          allOf:
            - $ref: "#/components/schemas/SubnetAssociation"
            - xml:
                name: subnet
              description: The subnet associated with the transit gateway multicast domain.
      description: Describes the resources associated with the transit gateway multicast domain.
    TransitGatewayMulticastGroup:
      type: object
      properties:
        GroupIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupIpAddress
              description: The IP address assigned to the transit gateway multicast group.
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayAttachmentId
              description: The ID of the transit gateway attachment.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: subnetId
              description: The ID of the subnet.
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resourceId
              description: The ID of the resource.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentResourceType"
            - xml:
                name: resourceType
              description: The type of resource, for example a VPC attachment.
        ResourceOwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resourceOwnerId
              description: " The ID of the Amazon Web Services account that owns the transit gateway multicast domain group resource."
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: networkInterfaceId
              description: The ID of the transit gateway attachment.
        GroupMember:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: groupMember
              description: Indicates that the resource is a transit gateway multicast group member.
        GroupSource:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: groupSource
              description: Indicates that the resource is a transit gateway multicast group member.
        MemberType:
          allOf:
            - $ref: "#/components/schemas/MembershipType"
            - xml:
                name: memberType
              description: The member type (for example, <code>static</code>).
        SourceType:
          allOf:
            - $ref: "#/components/schemas/MembershipType"
            - xml:
                name: sourceType
              description: The source type.
      description: Describes the transit gateway multicast group resources.
    TransitGatewayPrefixListAttachment:
      type: object
      properties:
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - xml:
                name: transitGatewayAttachmentId
              description: The ID of the attachment.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentResourceType"
            - xml:
                name: resourceType
              description: The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated.
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resourceId
              description: The ID of the resource.
      description: Describes a transit gateway prefix list attachment.
    TransitGatewayPrefixListReferenceState:
      type: string
      enum:
        - pending
        - available
        - modifying
        - deleting
    TransitGatewayRouteAttachmentList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TransitGatewayRouteAttachment"
          - xml:
              name: item
    TransitGatewayRouteType:
      type: string
      enum:
        - static
        - propagated
    TransitGatewayRouteState:
      type: string
      enum:
        - pending
        - active
        - blackhole
        - deleting
        - deleted
    TransitGatewayRouteAttachment:
      type: object
      properties:
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resourceId
              description: The ID of the resource.
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayAttachmentId
              description: The ID of the attachment.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentResourceType"
            - xml:
                name: resourceType
              description: "The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated. "
      description: Describes a route attachment.
    TransitGatewayRouteTableState:
      type: string
      enum:
        - pending
        - available
        - deleting
        - deleted
    TransitGatewayRouteTableAssociation:
      type: object
      properties:
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayAttachmentId
              description: The ID of the attachment.
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resourceId
              description: The ID of the resource.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentResourceType"
            - xml:
                name: resourceType
              description: The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated.
        State:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAssociationState"
            - xml:
                name: state
              description: The state of the association.
      description: Describes an association between a route table and a resource attachment.
    TransitGatewayRouteTablePropagation:
      type: object
      properties:
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: transitGatewayAttachmentId
              description: The ID of the attachment.
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resourceId
              description: The ID of the resource.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentResourceType"
            - xml:
                name: resourceType
              description: The type of resource. Note that the <code>tgw-peering</code> resource type has been deprecated.
        State:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayPropagationState"
            - xml:
                name: state
              description: The state of the resource.
      description: Describes a route table propagation.
    TransitGatewayVpcAttachmentOptions:
      type: object
      properties:
        DnsSupport:
          allOf:
            - $ref: "#/components/schemas/DnsSupportValue"
            - xml:
                name: dnsSupport
              description: Indicates whether DNS support is enabled.
        Ipv6Support:
          allOf:
            - $ref: "#/components/schemas/Ipv6SupportValue"
            - xml:
                name: ipv6Support
              description: Indicates whether IPv6 support is disabled.
        ApplianceModeSupport:
          allOf:
            - $ref: "#/components/schemas/ApplianceModeSupportValue"
            - xml:
                name: applianceModeSupport
              description: Indicates whether appliance mode support is enabled.
      description: Describes the VPC attachment options.
    TunnelOption:
      type: object
      properties:
        OutsideIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: outsideIpAddress
              description: The external IP address of the VPN tunnel.
        TunnelInsideCidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: tunnelInsideCidr
              description: The range of inside IPv4 addresses for the tunnel.
        TunnelInsideIpv6Cidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: tunnelInsideIpv6Cidr
              description: The range of inside IPv6 addresses for the tunnel.
        PreSharedKey:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: preSharedKey
              description: The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and the customer gateway.
        Phase1LifetimeSeconds:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: phase1LifetimeSeconds
              description: The lifetime for phase 1 of the IKE negotiation, in seconds.
        Phase2LifetimeSeconds:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: phase2LifetimeSeconds
              description: The lifetime for phase 2 of the IKE negotiation, in seconds.
        RekeyMarginTimeSeconds:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: rekeyMarginTimeSeconds
              description: The margin time, in seconds, before the phase 2 lifetime expires, during which the AWS side of the VPN connection performs an IKE rekey.
        RekeyFuzzPercentage:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: rekeyFuzzPercentage
              description: The percentage of the rekey window determined by <code>RekeyMarginTimeSeconds</code> during which the rekey time is randomly selected.
        ReplayWindowSize:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: replayWindowSize
              description: The number of packets in an IKE replay window.
        DpdTimeoutSeconds:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: dpdTimeoutSeconds
              description: The number of seconds after which a DPD timeout occurs.
        DpdTimeoutAction:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: dpdTimeoutAction
              description: The action to take after a DPD timeout occurs.
        Phase1EncryptionAlgorithms:
          allOf:
            - $ref: "#/components/schemas/Phase1EncryptionAlgorithmsList"
            - xml:
                name: phase1EncryptionAlgorithmSet
              description: The permitted encryption algorithms for the VPN tunnel for phase 1 IKE negotiations.
        Phase2EncryptionAlgorithms:
          allOf:
            - $ref: "#/components/schemas/Phase2EncryptionAlgorithmsList"
            - xml:
                name: phase2EncryptionAlgorithmSet
              description: The permitted encryption algorithms for the VPN tunnel for phase 2 IKE negotiations.
        Phase1IntegrityAlgorithms:
          allOf:
            - $ref: "#/components/schemas/Phase1IntegrityAlgorithmsList"
            - xml:
                name: phase1IntegrityAlgorithmSet
              description: The permitted integrity algorithms for the VPN tunnel for phase 1 IKE negotiations.
        Phase2IntegrityAlgorithms:
          allOf:
            - $ref: "#/components/schemas/Phase2IntegrityAlgorithmsList"
            - xml:
                name: phase2IntegrityAlgorithmSet
              description: The permitted integrity algorithms for the VPN tunnel for phase 2 IKE negotiations.
        Phase1DHGroupNumbers:
          allOf:
            - $ref: "#/components/schemas/Phase1DHGroupNumbersList"
            - xml:
                name: phase1DHGroupNumberSet
              description: The permitted Diffie-Hellman group numbers for the VPN tunnel for phase 1 IKE negotiations.
        Phase2DHGroupNumbers:
          allOf:
            - $ref: "#/components/schemas/Phase2DHGroupNumbersList"
            - xml:
                name: phase2DHGroupNumberSet
              description: The permitted Diffie-Hellman group numbers for the VPN tunnel for phase 2 IKE negotiations.
        IkeVersions:
          allOf:
            - $ref: "#/components/schemas/IKEVersionsList"
            - xml:
                name: ikeVersionSet
              description: The IKE versions that are permitted for the VPN tunnel.
        StartupAction:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: startupAction
              description: The action to take when the establishing the VPN tunnels for a VPN connection.
      description: The VPN tunnel options.
    TunnelOptionsList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/TunnelOption"
          - xml:
              name: item
    UnassignIpv6AddressesRequest:
      type: object
      required:
        - NetworkInterfaceId
      title: UnassignIpv6AddressesRequest
      properties:
        Ipv6Addresses:
          allOf:
            - $ref: "#/components/schemas/Ipv6AddressList"
            - xml:
                name: ipv6Addresses
              description: The IPv6 addresses to unassign from the network interface.
        Ipv6Prefixes:
          allOf:
            - $ref: "#/components/schemas/IpPrefixList"
            - xml:
                name: Ipv6Prefix
              description: One or more IPv6 prefixes to unassign from the network interface.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceId"
            - xml:
                name: networkInterfaceId
              description: The ID of the network interface.
    UnassignPrivateIpAddressesRequest:
      type: object
      required:
        - NetworkInterfaceId
      title: UnassignPrivateIpAddressesRequest
      properties:
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NetworkInterfaceId"
            - xml:
                name: networkInterfaceId
              description: The ID of the network interface.
        PrivateIpAddresses:
          allOf:
            - $ref: "#/components/schemas/PrivateIpAddressStringList"
            - xml:
                name: privateIpAddress
              description: The secondary private IP addresses to unassign from the network interface. You can specify this option multiple times to unassign more than one IP address.
        Ipv4Prefixes:
          allOf:
            - $ref: "#/components/schemas/IpPrefixList"
            - xml:
                name: Ipv4Prefix
              description: The IPv4 prefixes to unassign from the network interface.
      description: Contains the parameters for UnassignPrivateIpAddresses.
    UnmonitorInstancesRequest:
      type: object
      required:
        - InstanceIds
      title: UnmonitorInstancesRequest
      properties:
        InstanceIds:
          allOf:
            - $ref: "#/components/schemas/InstanceIdStringList"
            - xml:
                name: InstanceId
              description: The IDs of the instances.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: dryRun
              description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
    UnsuccessfulInstanceCreditSpecificationErrorCode:
      type: string
      enum:
        - InvalidInstanceID.Malformed
        - InvalidInstanceID.NotFound
        - IncorrectInstanceState
        - InstanceCreditSpecification.NotSupported
    UnsuccessfulInstanceCreditSpecificationItemError:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/UnsuccessfulInstanceCreditSpecificationErrorCode"
            - xml:
                name: code
              description: The error code.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: The applicable error message.
      description: Information about the error for the burstable performance instance whose credit option for CPU usage was not modified.
    UnsuccessfulInstanceCreditSpecificationItem:
      type: object
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance.
        Error:
          allOf:
            - $ref: "#/components/schemas/UnsuccessfulInstanceCreditSpecificationItemError"
            - xml:
                name: error
              description: The applicable error for the burstable performance instance whose credit option for CPU usage was not modified.
      description: Describes the burstable performance instance whose credit option for CPU usage was not modified.
    UnsuccessfulItemError:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: code
              description: The error code.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: The error message accompanying the error code.
      description: Information about the error that occurred. For more information about errors, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/errors-overview.html">Error codes</a>.
    UnsuccessfulItem:
      type: object
      properties:
        Error:
          allOf:
            - $ref: "#/components/schemas/UnsuccessfulItemError"
            - xml:
                name: error
              description: Information about the error.
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: resourceId
              description: The ID of the resource.
      description: Information about items that were not successfully processed in a batch call.
    UpdateSecurityGroupRuleDescriptionsEgressRequest:
      type: object
      title: UpdateSecurityGroupRuleDescriptionsEgressRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        GroupId:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupId"
            - description: The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.
        GroupName:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupName"
            - description: "[Default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request."
        IpPermissions:
          allOf:
            - $ref: "#/components/schemas/IpPermissionList"
            - description: The IP permissions for the security group rule. You must specify either the IP permissions or the description.
        SecurityGroupRuleDescriptions:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupRuleDescriptionList"
            - xml:
                name: SecurityGroupRuleDescription
              description: The description for the egress security group rules. You must specify either the description or the IP permissions.
    UpdateSecurityGroupRuleDescriptionsIngressRequest:
      type: object
      title: UpdateSecurityGroupRuleDescriptionsIngressRequest
      properties:
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
        GroupId:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupId"
            - description: The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.
        GroupName:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupName"
            - description: "[EC2-Classic, default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request."
        IpPermissions:
          allOf:
            - $ref: "#/components/schemas/IpPermissionList"
            - description: The IP permissions for the security group rule. You must specify either IP permissions or a description.
        SecurityGroupRuleDescriptions:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupRuleDescriptionList"
            - xml:
                name: SecurityGroupRuleDescription
              description: "[VPC only] The description for the ingress security group rules. You must specify either a description or IP permissions."
    UsageClassType:
      type: string
      enum:
        - spot
        - on-demand
    UserIdGroupPair:
      type: object
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: "<p>A description for the security group rule that references this user ID group pair.</p> <p>Constraints: Up to 255 characters in length. Allowed characters are a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=;{}!$*</p>"
        GroupId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupId
              description: The ID of the security group.
        GroupName:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: groupName
              description: <p>The name of the security group. In a request, use this parameter for a security group in EC2-Classic or a default VPC only. For a security group in a nondefault VPC, use the security group ID. </p> <p>For a referenced security group in another VPC, this value is not returned if the referenced security group is deleted.</p>
        PeeringStatus:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: peeringStatus
              description: The status of a VPC peering connection, if applicable.
        UserId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: userId
              description: <p>The ID of an Amazon Web Services account.</p> <p>For a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.</p> <p>[EC2-Classic] Required when adding or removing rules that reference a security group in another Amazon Web Services account.</p>
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC for the referenced security group, if applicable.
        VpcPeeringConnectionId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcPeeringConnectionId
              description: The ID of the VPC peering connection, if applicable.
      description: Describes a security group and Amazon Web Services account ID pair.
    VCpuCount:
      type: integer
    VgwTelemetry:
      type: object
      properties:
        AcceptedRouteCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - xml:
                name: acceptedRouteCount
              description: The number of accepted routes.
        LastStatusChange:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - xml:
                name: lastStatusChange
              description: The date and time of the last change in status.
        OutsideIpAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: outsideIpAddress
              description: The Internet-routable IP address of the virtual private gateway's outside interface.
        Status:
          allOf:
            - $ref: "#/components/schemas/TelemetryStatus"
            - xml:
                name: status
              description: The status of the VPN tunnel.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: statusMessage
              description: If an error occurs, a description of the error.
        CertificateArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: certificateArn
              description: The Amazon Resource Name (ARN) of the VPN tunnel endpoint certificate.
      description: Describes telemetry for a VPN tunnel.
    VgwTelemetryList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VgwTelemetry"
          - xml:
              name: item
    VolumeAttachmentList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VolumeAttachment"
          - xml:
              name: item
    VolumeState:
      type: string
      enum:
        - creating
        - available
        - in-use
        - deleting
        - deleted
        - error
    VolumeAttachmentState:
      type: string
      enum:
        - attaching
        - attached
        - detaching
        - detached
        - busy
    VolumeModificationState:
      type: string
      enum:
        - modifying
        - optimizing
        - completed
        - failed
    VolumeStatusAction:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: code
              description: The code identifying the operation, for example, <code>enable-volume-io</code>.
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description of the operation.
        EventId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: eventId
              description: The ID of the event associated with this operation.
        EventType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: eventType
              description: The event type associated with this operation.
      description: Describes a volume status operation code.
    VolumeStatusActionsList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VolumeStatusAction"
          - xml:
              name: item
    VolumeStatusAttachmentStatus:
      type: object
      properties:
        IoPerformance:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ioPerformance
              description: The maximum IOPS supported by the attached instance.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the attached instance.
      description: Information about the instances to which the volume is attached.
    VolumeStatusAttachmentStatusList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VolumeStatusAttachmentStatus"
          - xml:
              name: item
    VolumeStatusName:
      type: string
      enum:
        - io-enabled
        - io-performance
    VolumeStatusDetails:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/VolumeStatusName"
            - xml:
                name: name
              description: The name of the volume status.
        Status:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: status
              description: The intended status of the volume status.
      description: Describes a volume status.
    VolumeStatusDetailsList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VolumeStatusDetails"
          - xml:
              name: item
    VolumeStatusEvent:
      type: object
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: description
              description: A description of the event.
        EventId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: eventId
              description: The ID of this event.
        EventType:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: eventType
              description: The type of this event.
        NotAfter:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: notAfter
              description: The latest end time of the event.
        NotBefore:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: notBefore
              description: The earliest start time of the event.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: instanceId
              description: The ID of the instance associated with the event.
      description: Describes a volume status event.
    VolumeStatusEventsList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VolumeStatusEvent"
          - xml:
              name: item
    VolumeStatusInfoStatus:
      type: string
      enum:
        - ok
        - impaired
        - insufficient-data
    VolumeStatusInfo:
      type: object
      properties:
        Details:
          allOf:
            - $ref: "#/components/schemas/VolumeStatusDetailsList"
            - xml:
                name: details
              description: The details of the volume status.
        Status:
          allOf:
            - $ref: "#/components/schemas/VolumeStatusInfoStatus"
            - xml:
                name: status
              description: The status of the volume.
      description: Describes the status of a volume.
    VolumeStatusItem:
      type: object
      properties:
        Actions:
          allOf:
            - $ref: "#/components/schemas/VolumeStatusActionsList"
            - xml:
                name: actionsSet
              description: The details of the operation.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: availabilityZone
              description: The Availability Zone of the volume.
        OutpostArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: outpostArn
              description: The Amazon Resource Name (ARN) of the Outpost.
        Events:
          allOf:
            - $ref: "#/components/schemas/VolumeStatusEventsList"
            - xml:
                name: eventsSet
              description: A list of events associated with the volume.
        VolumeId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: volumeId
              description: The volume ID.
        VolumeStatus:
          allOf:
            - $ref: "#/components/schemas/VolumeStatusInfo"
            - xml:
                name: volumeStatus
              description: The volume status.
        AttachmentStatuses:
          allOf:
            - $ref: "#/components/schemas/VolumeStatusAttachmentStatusList"
            - xml:
                name: attachmentStatuses
              description: Information about the instances to which the volume is attached.
      description: Describes the volume status.
    VpcState:
      type: string
      enum:
        - pending
        - available
    VpcIpv6CidrBlockAssociationSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VpcIpv6CidrBlockAssociation"
          - xml:
              name: item
    VpcCidrBlockAssociationSet:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VpcCidrBlockAssociation"
          - xml:
              name: item
    VpcAttachmentList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VpcAttachment"
          - xml:
              name: item
    VpcCidrBlockState:
      type: object
      properties:
        State:
          allOf:
            - $ref: "#/components/schemas/VpcCidrBlockStateCode"
            - xml:
                name: state
              description: The state of the CIDR block.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: statusMessage
              description: A message about the status of the CIDR block, if applicable.
      description: Describes the state of a CIDR block.
    VpcCidrBlockStateCode:
      type: string
      enum:
        - associating
        - associated
        - disassociating
        - disassociated
        - failing
        - failed
    VpcClassicLink:
      type: object
      properties:
        ClassicLinkEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: classicLinkEnabled
              description: Indicates whether the VPC is enabled for ClassicLink.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - xml:
                name: tagSet
              description: Any tags assigned to the VPC.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC.
      description: Describes whether a VPC is enabled for ClassicLink.
    VpcEndpointConnection:
      type: object
      properties:
        ServiceId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: serviceId
              description: The ID of the service to which the endpoint is connected.
        VpcEndpointId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcEndpointId
              description: The ID of the VPC endpoint.
        VpcEndpointOwner:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcEndpointOwner
              description: The AWS account ID of the owner of the VPC endpoint.
        VpcEndpointState:
          allOf:
            - $ref: "#/components/schemas/State"
            - xml:
                name: vpcEndpointState
              description: The state of the VPC endpoint.
        CreationTimestamp:
          allOf:
            - $ref: "#/components/schemas/MillisecondDateTime"
            - xml:
                name: creationTimestamp
              description: The date and time that the VPC endpoint was created.
        DnsEntries:
          allOf:
            - $ref: "#/components/schemas/DnsEntrySet"
            - xml:
                name: dnsEntrySet
              description: The DNS entries for the VPC endpoint.
        NetworkLoadBalancerArns:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: networkLoadBalancerArnSet
              description: The Amazon Resource Names (ARNs) of the network load balancers for the service.
        GatewayLoadBalancerArns:
          allOf:
            - $ref: "#/components/schemas/ValueStringList"
            - xml:
                name: gatewayLoadBalancerArnSet
              description: The Amazon Resource Names (ARNs) of the Gateway Load Balancers for the service.
      description: Describes a VPC endpoint connection to a service.
    VpcPeeringConnectionVpcInfo:
      type: object
      properties:
        CidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: cidrBlock
              description: The IPv4 CIDR block for the VPC.
        Ipv6CidrBlockSet:
          allOf:
            - $ref: "#/components/schemas/Ipv6CidrBlockSet"
            - xml:
                name: ipv6CidrBlockSet
              description: The IPv6 CIDR block for the VPC.
        CidrBlockSet:
          allOf:
            - $ref: "#/components/schemas/CidrBlockSet"
            - xml:
                name: cidrBlockSet
              description: Information about the IPv4 CIDR blocks for the VPC.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: ownerId
              description: The ID of the Amazon Web Services account that owns the VPC.
        PeeringOptions:
          allOf:
            - $ref: "#/components/schemas/VpcPeeringConnectionOptionsDescription"
            - xml:
                name: peeringOptions
              description: Information about the VPC peering connection options for the accepter or requester VPC.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: vpcId
              description: The ID of the VPC.
        Region:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: region
              description: The Region in which the VPC is located.
      description: Describes a VPC in a VPC peering connection.
    VpcPeeringConnectionStateReason:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/VpcPeeringConnectionStateReasonCode"
            - xml:
                name: code
              description: The status of the VPC peering connection.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: message
              description: A message that provides more information about the status, if applicable.
      description: Describes the status of a VPC peering connection.
    VpcPeeringConnectionOptionsDescription:
      type: object
      properties:
        AllowDnsResolutionFromRemoteVpc:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: allowDnsResolutionFromRemoteVpc
              description: Indicates whether a local VPC can resolve public DNS hostnames to private IP addresses when queried from instances in a peer VPC.
        AllowEgressFromLocalClassicLinkToRemoteVpc:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: allowEgressFromLocalClassicLinkToRemoteVpc
              description: Indicates whether a local ClassicLink connection can communicate with the peer VPC over the VPC peering connection.
        AllowEgressFromLocalVpcToRemoteClassicLink:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: allowEgressFromLocalVpcToRemoteClassicLink
              description: Indicates whether a local VPC can communicate with a ClassicLink connection in the peer VPC over the VPC peering connection.
      description: Describes the VPC peering connection options.
    VpcPeeringConnectionStateReasonCode:
      type: string
      enum:
        - initiating-request
        - pending-acceptance
        - active
        - deleted
        - rejected
        - failed
        - expired
        - provisioning
        - deleting
    VpnState:
      type: string
      enum:
        - pending
        - available
        - deleting
        - deleted
    VpnConnectionOptions:
      type: object
      properties:
        EnableAcceleration:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: enableAcceleration
              description: Indicates whether acceleration is enabled for the VPN connection.
        StaticRoutesOnly:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - xml:
                name: staticRoutesOnly
              description: Indicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.
        LocalIpv4NetworkCidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: localIpv4NetworkCidr
              description: The IPv4 CIDR on the customer gateway (on-premises) side of the VPN connection.
        RemoteIpv4NetworkCidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: remoteIpv4NetworkCidr
              description: The IPv4 CIDR on the AWS side of the VPN connection.
        LocalIpv6NetworkCidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: localIpv6NetworkCidr
              description: The IPv6 CIDR on the customer gateway (on-premises) side of the VPN connection.
        RemoteIpv6NetworkCidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: remoteIpv6NetworkCidr
              description: The IPv6 CIDR on the AWS side of the VPN connection.
        TunnelInsideIpVersion:
          allOf:
            - $ref: "#/components/schemas/TunnelInsideIpVersion"
            - xml:
                name: tunnelInsideIpVersion
              description: Indicates whether the VPN tunnels process IPv4 or IPv6 traffic.
        TunnelOptions:
          allOf:
            - $ref: "#/components/schemas/TunnelOptionsList"
            - xml:
                name: tunnelOptionSet
              description: Indicates the VPN tunnel options.
      description: Describes VPN connection options.
    VpnStaticRouteList:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/VpnStaticRoute"
          - xml:
              name: item
    VpnStaticRouteSource:
      type: string
      enum:
        - Static
    VpnStaticRoute:
      type: object
      properties:
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/String"
            - xml:
                name: destinationCidrBlock
              description: The CIDR block associated with the local subnet of the customer data center.
        Source:
          allOf:
            - $ref: "#/components/schemas/VpnStaticRouteSource"
            - xml:
                name: source
              description: Indicates how the routes were provided.
        State:
          allOf:
            - $ref: "#/components/schemas/VpnState"
            - xml:
                name: state
              description: The current state of the static route.
      description: Describes a static route for a VPN connection.
    VpnTunnelOptionsSpecification:
      type: object
      properties:
        TunnelInsideCidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The range of inside IPv4 addresses for the tunnel. Any specified CIDR blocks must be unique across all VPN connections that use the same virtual private gateway. </p> <p>Constraints: A size /30 CIDR block from the <code>169.254.0.0/16</code> range. The following CIDR blocks are reserved and cannot be used:</p> <ul> <li> <p> <code>169.254.0.0/30</code> </p> </li> <li> <p> <code>169.254.1.0/30</code> </p> </li> <li> <p> <code>169.254.2.0/30</code> </p> </li> <li> <p> <code>169.254.3.0/30</code> </p> </li> <li> <p> <code>169.254.4.0/30</code> </p> </li> <li> <p> <code>169.254.5.0/30</code> </p> </li> <li> <p> <code>169.254.169.252/30</code> </p> </li> </ul>"
        TunnelInsideIpv6Cidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The range of inside IPv6 addresses for the tunnel. Any specified CIDR blocks must be unique across all VPN connections that use the same transit gateway.</p> <p>Constraints: A size /126 CIDR block from the local <code>fd00::/8</code> range.</p>"
        PreSharedKey:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The pre-shared key (PSK) to establish initial authentication between the virtual private gateway and customer gateway.</p> <p>Constraints: Allowed characters are alphanumeric characters, periods (.), and underscores (_). Must be between 8 and 64 characters in length and cannot start with zero (0).</p>"
        Phase1LifetimeSeconds:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The lifetime for phase 1 of the IKE negotiation, in seconds.</p> <p>Constraints: A value between 900 and 28,800.</p> <p>Default: <code>28800</code> </p>"
        Phase2LifetimeSeconds:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The lifetime for phase 2 of the IKE negotiation, in seconds.</p> <p>Constraints: A value between 900 and 3,600. The value must be less than the value for <code>Phase1LifetimeSeconds</code>.</p> <p>Default: <code>3600</code> </p>"
        RekeyMarginTimeSeconds:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The margin time, in seconds, before the phase 2 lifetime expires, during which the AWS side of the VPN connection performs an IKE rekey. The exact time of the rekey is randomly selected based on the value for <code>RekeyFuzzPercentage</code>.</p> <p>Constraints: A value between 60 and half of <code>Phase2LifetimeSeconds</code>.</p> <p>Default: <code>540</code> </p>"
        RekeyFuzzPercentage:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The percentage of the rekey window (determined by <code>RekeyMarginTimeSeconds</code>) during which the rekey time is randomly selected.</p> <p>Constraints: A value between 0 and 100.</p> <p>Default: <code>100</code> </p>"
        ReplayWindowSize:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The number of packets in an IKE replay window.</p> <p>Constraints: A value between 64 and 2048.</p> <p>Default: <code>1024</code> </p>"
        DPDTimeoutSeconds:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The number of seconds after which a DPD timeout occurs.</p> <p>Constraints: A value between 0 and 30.</p> <p>Default: <code>30</code> </p>"
        DPDTimeoutAction:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The action to take after DPD timeout occurs. Specify <code>restart</code> to restart the IKE initiation. Specify <code>clear</code> to end the IKE session.</p> <p>Valid Values: <code>clear</code> | <code>none</code> | <code>restart</code> </p> <p>Default: <code>clear</code> </p>"
        Phase1EncryptionAlgorithms:
          allOf:
            - $ref: "#/components/schemas/Phase1EncryptionAlgorithmsRequestList"
            - xml:
                name: Phase1EncryptionAlgorithm
              description: "<p>One or more encryption algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p> <p>Valid values: <code>AES128</code> | <code>AES256</code> | <code>AES128-GCM-16</code> | <code>AES256-GCM-16</code> </p>"
        Phase2EncryptionAlgorithms:
          allOf:
            - $ref: "#/components/schemas/Phase2EncryptionAlgorithmsRequestList"
            - xml:
                name: Phase2EncryptionAlgorithm
              description: "<p>One or more encryption algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p> <p>Valid values: <code>AES128</code> | <code>AES256</code> | <code>AES128-GCM-16</code> | <code>AES256-GCM-16</code> </p>"
        Phase1IntegrityAlgorithms:
          allOf:
            - $ref: "#/components/schemas/Phase1IntegrityAlgorithmsRequestList"
            - xml:
                name: Phase1IntegrityAlgorithm
              description: "<p>One or more integrity algorithms that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p> <p>Valid values: <code>SHA1</code> | <code>SHA2-256</code> | <code>SHA2-384</code> | <code>SHA2-512</code> </p>"
        Phase2IntegrityAlgorithms:
          allOf:
            - $ref: "#/components/schemas/Phase2IntegrityAlgorithmsRequestList"
            - xml:
                name: Phase2IntegrityAlgorithm
              description: "<p>One or more integrity algorithms that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p> <p>Valid values: <code>SHA1</code> | <code>SHA2-256</code> | <code>SHA2-384</code> | <code>SHA2-512</code> </p>"
        Phase1DHGroupNumbers:
          allOf:
            - $ref: "#/components/schemas/Phase1DHGroupNumbersRequestList"
            - xml:
                name: Phase1DHGroupNumber
              description: "<p>One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 1 IKE negotiations.</p> <p>Valid values: <code>2</code> | <code>14</code> | <code>15</code> | <code>16</code> | <code>17</code> | <code>18</code> | <code>19</code> | <code>20</code> | <code>21</code> | <code>22</code> | <code>23</code> | <code>24</code> </p>"
        Phase2DHGroupNumbers:
          allOf:
            - $ref: "#/components/schemas/Phase2DHGroupNumbersRequestList"
            - xml:
                name: Phase2DHGroupNumber
              description: "<p>One or more Diffie-Hellman group numbers that are permitted for the VPN tunnel for phase 2 IKE negotiations.</p> <p>Valid values: <code>2</code> | <code>5</code> | <code>14</code> | <code>15</code> | <code>16</code> | <code>17</code> | <code>18</code> | <code>19</code> | <code>20</code> | <code>21</code> | <code>22</code> | <code>23</code> | <code>24</code> </p>"
        IKEVersions:
          allOf:
            - $ref: "#/components/schemas/IKEVersionsRequestList"
            - xml:
                name: IKEVersion
              description: "<p>The IKE versions that are permitted for the VPN tunnel.</p> <p>Valid values: <code>ikev1</code> | <code>ikev2</code> </p>"
        StartupAction:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The action to take when the establishing the tunnel for the VPN connection. By default, your customer gateway device must initiate the IKE negotiation and bring up the tunnel. Specify <code>start</code> for AWS to initiate the IKE negotiation.</p> <p>Valid Values: <code>add</code> | <code>start</code> </p> <p>Default: <code>add</code> </p>"
      description: The tunnel options for a single VPN tunnel.
    WithdrawByoipCidrRequest:
      type: object
      required:
        - Cidr
      title: WithdrawByoipCidrRequest
      properties:
        Cidr:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The address range, in CIDR notation.
        DryRun:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
security:
  - hmac: []
