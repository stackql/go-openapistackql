info:
  version: 0.1.0
  title: Contrived Service for a Contrived Provider
  contact:
    name: Support
    url: https://support.contrivedservice.contrivedprovider.com/contact
paths:
  /repos/{owner}/{repo}/pages:
    get:
      summary: Get a Pages site
      servers:
        - url: '{protocol}://{origin:^(?:[^\:/]+(?:\:[0-9]+)?|[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+(?:\:[0-9]+)?)$}/'
          variables:
            protocol:
              default: https
              enum:
                - https
                - http
            origin:
              default: pages.contrivedservice.contrivedprovider.com
      operationId: contrivedservice/get-pages
      parameters:
        - $ref: '#/components/parameters/owner'
        - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page'
        '404':
          $ref: '#/components/responses/not_found'
components:
  schemas:
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    page:
      type: object
      properties:
        url:
          type: string
          description: The API address for accessing this Page resource.
          format: uri
          example: https://api.github.com/repos/github/hello-world/pages
        status:
          type: string
          enum:
            - built
            - building
            - errored
          nullable: true
        cname:
          description: The Pages site's custom domain
          example: example.com
          type: string
          nullable: true
        protected_domain_state:
          type: string
          description: The state if the domain is verified
          example: pending
          nullable: true
          enum:
            - pending
            - verified
            - unverified
        pending_domain_unverified_at:
          type: string
          description: The timestamp when a pending domain becomes unverified.
          nullable: true
          format: date-time
        custom_404:
          type: boolean
          description: Whether the Page has a custom 404 page.
          example: false
          default: false
        html_url:
          type: string
          description: The web address the Page can be accessed from.
          format: uri
          example: https://example.com
        source:
          $ref: '#/components/schemas/pages-source-hash'
        public:
          type: boolean
          description: Whether the GitHub Pages site is publicly visible. If set to `true`, the site is accessible to anyone on the internet. If set to `false`, the site will only be accessible to users who have at least `read` access to the repository that published the site.
          example: true
        https_certificate:
          $ref: '#/components/schemas/pages-https-certificate'
        https_enforced:
          type: boolean
          description: Whether https is enabled on the domain
          example: true
      required:
        - url
        - status
        - cname
        - custom_404
        - public
    pages-source-hash:
      title: Pages Source Hash
      type: object
      properties:
        branch:
          type: string
        path:
          type: string
      required:
        - branch
        - path
    pages-https-certificate:
      title: Pages Https Certificate
      type: object
      properties:
        state:
          type: string
          enum:
            - new
            - authorization_created
            - authorization_pending
            - authorized
            - authorization_revoked
            - issued
            - uploaded
            - approved
            - errored
            - bad_authz
            - destroy_pending
            - dns_changed
          example: approved
        description:
          type: string
          example: Certificate is approved
        domains:
          type: array
          items:
            type: string
          description: Array of the domain set and its alternate name (if it is configured)
          example:
            - example.com
            - www.example.com
        expires_at:
          type: string
          format: date
      required:
        - state
        - description
        - domains
  parameters:
    owner:
      name: owner
      in: path
      required: true
      schema:
        type: string
    repo:
      name: repo
      in: path
      required: true
      schema:
        type: string
  responses:
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
  securitySchemes: {}
  callbacks: {}
  requestBodies: {}
  x-stackQL-resources:
    pages:
      id: github.repos.pages
      name: pages
      title: Pages
      methods:
        get_pages:
          operation:
            $ref: '#/paths/~1repos~1{owner}~1{repo}~1pages/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/pages/methods/get_pages'
        insert: []
        update: []
        delete: []
openapi: 3.0.3
servers:
  - url: https://contrivedservice.contrivedprovider.com
